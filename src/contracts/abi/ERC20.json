{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/SafeMath.sol",
    "1": "contracts/Token.sol"
  },
  "ast": {
    "absolutePath": "contracts/Token.sol",
    "exportedSymbols": {
      "SafeMath": [
        104
      ],
      "Token": [
        368
      ]
    },
    "id": 369,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 106,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "absolutePath": "contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 107,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 369,
        "sourceUnit": 105,
        "src": "58:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Token",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 108,
          "nodeType": "StructuredDocumentation",
          "src": "84:161:1",
          "text": "@title Bare-bones Token implementation\n@notice Based on the ERC-20 token standard as defined at\nhttps://eips.ethereum.org/EIPS/eip-20"
        },
        "fullyImplemented": true,
        "id": 368,
        "linearizedBaseContracts": [
          368
        ],
        "name": "Token",
        "nameLocation": "255:5:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 111,
            "libraryName": {
              "id": 109,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "274:8:1"
            },
            "nodeType": "UsingForDirective",
            "src": "268:27:1",
            "typeName": {
              "id": 110,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "287:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 113,
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "315:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "301:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 112,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "301:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 115,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "341:4:1",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "327:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 114,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "327:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "313ce567",
            "id": 117,
            "mutability": "mutable",
            "name": "decimals",
            "nameLocation": "366:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "351:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 116,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "351:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 119,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "395:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "380:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 118,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "380:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 123,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "441:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "413:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 122,
              "keyType": {
                "id": 120,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "421:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "413:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 121,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "432:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 129,
            "mutability": "mutable",
            "name": "allowed",
            "nameLocation": "503:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 368,
            "src": "455:55:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 128,
              "keyType": {
                "id": 124,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "463:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "455:47:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 127,
                "keyType": {
                  "id": 125,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "482:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "474:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 126,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "493:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "id": 137,
            "name": "Transfer",
            "nameLocation": "523:8:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 131,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "548:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "532:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "532:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 133,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "570:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "554:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "582:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "574:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "531:57:1"
            },
            "src": "517:72:1"
          },
          {
            "anonymous": false,
            "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "id": 145,
            "name": "Approval",
            "nameLocation": "600:8:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "625:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "609:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "648:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "632:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "665:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 145,
                  "src": "657:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "608:63:1"
            },
            "src": "594:78:1"
          },
          {
            "body": {
              "id": 189,
              "nodeType": "Block",
              "src": "832:227:1",
              "statements": [
                {
                  "expression": {
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 156,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "842:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 157,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "849:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "842:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "842:12:1"
                },
                {
                  "expression": {
                    "id": 162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 160,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "864:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 161,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "873:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "864:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 163,
                  "nodeType": "ExpressionStatement",
                  "src": "864:16:1"
                },
                {
                  "expression": {
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 164,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "890:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 165,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "901:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "890:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "890:20:1"
                },
                {
                  "expression": {
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 168,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "920:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 169,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "934:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "920:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 171,
                  "nodeType": "ExpressionStatement",
                  "src": "920:26:1"
                },
                {
                  "expression": {
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 172,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "956:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 175,
                      "indexExpression": {
                        "expression": {
                          "id": 173,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "965:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "965:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "956:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 176,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 153,
                      "src": "979:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "956:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "956:35:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1023:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1015:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 180,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1015:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1015:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 184,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1027:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1027:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 186,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153,
                        "src": "1039:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 179,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "1006:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1006:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 188,
                  "nodeType": "EmitStatement",
                  "src": "1001:51:1"
                }
              ]
            },
            "id": 190,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 147,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "713:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "699:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 146,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "742:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "728:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nameLocation": "767:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "759:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "759:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 153,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "794:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 190,
                  "src": "786:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "786:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:123:1"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "832:0:1"
            },
            "scope": 368,
            "src": "678:381:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "1296:40:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 198,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123,
                      "src": "1313:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 200,
                    "indexExpression": {
                      "id": 199,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "1322:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1313:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 197,
                  "id": 201,
                  "nodeType": "Return",
                  "src": "1306:23:1"
                }
              ]
            },
            "documentation": {
              "id": 191,
              "nodeType": "StructuredDocumentation",
              "src": "1065:161:1",
              "text": "@notice Getter to check the current balance of an address\n@param _owner Address to query the balance of\n@return Token balance"
            },
            "functionSelector": "70a08231",
            "id": 203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1240:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1258:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "1250:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1249:16:1"
            },
            "returnParameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "1287:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1287:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1286:9:1"
            },
            "scope": 368,
            "src": "1231:105:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 219,
              "nodeType": "Block",
              "src": "1766:49:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 213,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "1783:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 215,
                      "indexExpression": {
                        "id": 214,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "1791:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1783:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 217,
                    "indexExpression": {
                      "id": 216,
                      "name": "_spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "1799:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1783:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 212,
                  "id": 218,
                  "nodeType": "Return",
                  "src": "1776:32:1"
                }
              ]
            },
            "documentation": {
              "id": 204,
              "nodeType": "StructuredDocumentation",
              "src": "1342:286:1",
              "text": "@notice Getter to check the amount of tokens that an owner allowed to a spender\n@param _owner The address which owns the funds\n@param _spender The address which will spend the funds\n@return The amount of tokens still available for the spender"
            },
            "functionSelector": "dd62ed3e",
            "id": 220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "1642:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1669:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "1661:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "1693:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "1685:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1685:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1651:56:1"
            },
            "returnParameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "1753:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1752:9:1"
            },
            "scope": 368,
            "src": "1633:182:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 248,
              "nodeType": "Block",
              "src": "2579:129:1",
              "statements": [
                {
                  "expression": {
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 230,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 129,
                          "src": "2589:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 234,
                        "indexExpression": {
                          "expression": {
                            "id": 231,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2597:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2597:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2589:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 235,
                      "indexExpression": {
                        "id": 233,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2609:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2589:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 236,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "2621:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2589:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "2589:38:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 240,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2651:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2651:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 242,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "2663:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 243,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "2673:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 239,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "2642:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2642:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 245,
                  "nodeType": "EmitStatement",
                  "src": "2637:43:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2697:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 229,
                  "id": 247,
                  "nodeType": "Return",
                  "src": "2690:11:1"
                }
              ]
            },
            "documentation": {
              "id": 221,
              "nodeType": "StructuredDocumentation",
              "src": "1821:680:1",
              "text": "@notice Approve an address to spend the specified amount of tokens on behalf of msg.sender\n@dev Beware that changing an allowance with this method brings the risk that someone may use both the old\nand the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\nrace condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n@param _spender The address which will spend the funds.\n@param _value The amount of tokens to be spent.\n@return Success boolean"
            },
            "functionSelector": "095ea7b3",
            "id": 249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "2515:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "2531:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "2523:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2523:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2549:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "2541:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2541:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2522:34:1"
            },
            "returnParameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "2573:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2573:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2572:6:1"
            },
            "scope": 368,
            "src": "2506:202:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "2840:224:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 260,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "2858:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 262,
                          "indexExpression": {
                            "id": 261,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 252,
                            "src": "2867:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2858:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 263,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 256,
                          "src": "2877:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2858:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2885:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        },
                        "value": "Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        }
                      ],
                      "id": 259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2850:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2850:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "2850:58:1"
                },
                {
                  "expression": {
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 268,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "2918:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 270,
                      "indexExpression": {
                        "id": 269,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "2927:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2918:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 275,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 256,
                          "src": "2956:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 271,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "2936:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 273,
                          "indexExpression": {
                            "id": 272,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 252,
                            "src": "2945:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2936:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49,
                        "src": "2936:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2936:27:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2918:45:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "2918:45:1"
                },
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 279,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "2973:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 281,
                      "indexExpression": {
                        "id": 280,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "2982:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2973:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 286,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 256,
                          "src": "3007:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 282,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123,
                            "src": "2989:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 284,
                          "indexExpression": {
                            "id": 283,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "2998:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2989:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25,
                        "src": "2989:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2989:25:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2973:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "2973:41:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 291,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "3038:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 292,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 254,
                        "src": "3045:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 293,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "3050:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 290,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "3029:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3029:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "EmitStatement",
                  "src": "3024:33:1"
                }
              ]
            },
            "documentation": {
              "id": 250,
              "nodeType": "StructuredDocumentation",
              "src": "2714:49:1",
              "text": "shared logic for transfer and transferFrom "
            },
            "id": 297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "2777:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2795:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "2787:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2787:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 254,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2810:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "2802:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2802:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 256,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2823:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "2815:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2815:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2786:44:1"
            },
            "returnParameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2840:0:1"
            },
            "scope": 368,
            "src": "2768:296:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 316,
              "nodeType": "Block",
              "src": "3339:72:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 308,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3359:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3359:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 310,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 300,
                        "src": "3371:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 311,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "3376:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 307,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "3349:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3349:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 313,
                  "nodeType": "ExpressionStatement",
                  "src": "3349:34:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3400:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 306,
                  "id": 315,
                  "nodeType": "Return",
                  "src": "3393:11:1"
                }
              ]
            },
            "documentation": {
              "id": 298,
              "nodeType": "StructuredDocumentation",
              "src": "3070:195:1",
              "text": "@notice Transfer tokens to a specified address\n@param _to The address to transfer to\n@param _value The amount to be transferred\n@return Success boolean"
            },
            "functionSelector": "a9059cbb",
            "id": 317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3279:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3296:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "3288:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3288:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 302,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "3309:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "3301:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3301:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3287:29:1"
            },
            "returnParameters": {
              "id": 306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 305,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 317,
                  "src": "3333:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3333:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3332:6:1"
            },
            "scope": 368,
            "src": "3270:141:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 366,
              "nodeType": "Block",
              "src": "3853:225:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 330,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3871:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 332,
                            "indexExpression": {
                              "id": 331,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 320,
                              "src": "3879:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3871:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 335,
                          "indexExpression": {
                            "expression": {
                              "id": 333,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3886:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3886:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3871:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 336,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 324,
                          "src": "3901:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3871:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3909:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        },
                        "value": "Insufficient allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
                          "typeString": "literal_string \"Insufficient allowance\""
                        }
                      ],
                      "id": 329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3863:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3863:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "3863:71:1"
                },
                {
                  "expression": {
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 341,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 129,
                          "src": "3944:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 345,
                        "indexExpression": {
                          "id": 342,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 320,
                          "src": "3952:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3944:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 346,
                      "indexExpression": {
                        "expression": {
                          "id": 343,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3959:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3959:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3944:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 354,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 324,
                          "src": "4004:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 347,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3973:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 349,
                            "indexExpression": {
                              "id": 348,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 320,
                              "src": "3981:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3973:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 352,
                          "indexExpression": {
                            "expression": {
                              "id": 350,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3988:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3988:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3973:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49,
                        "src": "3973:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3973:38:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3944:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "3944:67:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 359,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 320,
                        "src": "4031:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 360,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "4038:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 361,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "4043:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 358,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 297,
                      "src": "4021:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4021:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "4021:29:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4067:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 328,
                  "id": 365,
                  "nodeType": "Return",
                  "src": "4060:11:1"
                }
              ]
            },
            "documentation": {
              "id": 318,
              "nodeType": "StructuredDocumentation",
              "src": "3417:293:1",
              "text": "@notice Transfer tokens from one address to another\n@param _from The address which you want to send tokens from\n@param _to The address which you want to transfer to\n@param _value The amount of tokens to be transferred\n@return Success boolean"
            },
            "functionSelector": "23b872dd",
            "id": 367,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3724:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 320,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3754:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "3746:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3746:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 322,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3777:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "3769:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3769:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 324,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "3798:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "3790:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3790:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3736:74:1"
            },
            "returnParameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 367,
                  "src": "3843:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3843:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3842:6:1"
            },
            "scope": 368,
            "src": "3715:363:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 369,
        "src": "246:3835:1",
        "usedErrors": []
      }
    ],
    "src": "33:4049:1"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620009973803806200099783398101604081905262000034916200022b565b835162000049906001906020870190620000b8565b5082516200005f906000906020860190620000b8565b5060028290556003819055336000818152600460209081526040808320859055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350505050620002e1565b828054620000c690620002a5565b90600052602060002090601f016020900481019282620000ea576000855562000135565b82601f106200010557805160ff191683800117855562000135565b8280016001018555821562000135579182015b828111156200013557825182559160200191906001019062000118565b506200014392915062000147565b5090565b5b8082111562000143576000815560010162000148565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200018657600080fd5b81516001600160401b0380821115620001a357620001a36200015e565b604051601f8301601f19908116603f01168101908282118183101715620001ce57620001ce6200015e565b81604052838152602092508683858801011115620001eb57600080fd5b600091505b838210156200020f5785820183015181830184015290820190620001f0565b83821115620002215760008385830101525b9695505050505050565b600080600080608085870312156200024257600080fd5b84516001600160401b03808211156200025a57600080fd5b620002688883890162000174565b955060208701519150808211156200027f57600080fd5b506200028e8782880162000174565b604087015160609097015195989097509350505050565b600181811c90821680620002ba57607f821691505b602082108103620002db57634e487b7160e01b600052602260045260246000fd5b50919050565b6106a680620002f16000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461010357806370a082311461010c57806395d89b4114610135578063a9059cbb1461013d578063dd62ed3e1461015057600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100f0575b600080fd5b6100a0610189565b6040516100ad91906104cc565b60405180910390f35b6100c96100c436600461053d565b610217565b60405190151581526020016100ad565b6100e260035481565b6040519081526020016100ad565b6100c96100fe366004610567565b610284565b6100e260025481565b6100e261011a3660046105a3565b6001600160a01b031660009081526004602052604090205490565b6100a061035c565b6100c961014b36600461053d565b610369565b6100e261015e3660046105be565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b60018054610196906105f1565b80601f01602080910402602001604051908101604052809291908181526020018280546101c2906105f1565b801561020f5780601f106101e45761010080835404028352916020019161020f565b820191906000526020600020905b8154815290600101906020018083116101f257829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102729086815260200190565b60405180910390a35060015b92915050565b6001600160a01b03831660009081526005602090815260408083203384529091528120548211156102f55760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064015b60405180910390fd5b6001600160a01b0384166000908152600560209081526040808320338452909152902054610323908361037f565b6001600160a01b038516600090815260056020908152604080832033845290915290205561035284848461039f565b5060019392505050565b60008054610196906105f1565b600061037633848461039f565b50600192915050565b60008282111561038e57600080fd5b6103988284610641565b9392505050565b6001600160a01b0383166000908152600460205260409020548111156103fe5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016102ec565b6001600160a01b038316600090815260046020526040902054610421908261037f565b6001600160a01b03808516600090815260046020526040808220939093559084168152205461045090826104b1565b6001600160a01b0380841660008181526004602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104a49085815260200190565b60405180910390a3505050565b60006104bd8284610658565b90508281101561027e57600080fd5b600060208083528351808285015260005b818110156104f9578581018301518582016040015282016104dd565b8181111561050b576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461053857600080fd5b919050565b6000806040838503121561055057600080fd5b61055983610521565b946020939093013593505050565b60008060006060848603121561057c57600080fd5b61058584610521565b925061059360208501610521565b9150604084013590509250925092565b6000602082840312156105b557600080fd5b61039882610521565b600080604083850312156105d157600080fd5b6105da83610521565b91506105e860208401610521565b90509250929050565b600181811c9082168061060557607f821691505b60208210810361062557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156106535761065361062b565b500390565b6000821982111561066b5761066b61062b565b50019056fea2646970667358221220dd817ea1f241cdf149d9c909b82dfcec96173dc14b6b6e0ee3b1167a1a45f20064736f6c634300080e0033",
  "bytecodeSha1": "e947cfc67a6a280fd5189767267ac4022bb8b121",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "Token",
  "coverageMap": {
    "branches": {
      "0": {
        "SafeMath.add": {
          "22": [
            179,
            185,
            true
          ]
        },
        "SafeMath.sub": {
          "21": [
            295,
            301,
            true
          ]
        }
      },
      "1": {
        "Token._transfer": {
          "20": [
            2858,
            2883,
            true
          ]
        },
        "Token.transferFrom": {
          "19": [
            3871,
            3907,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "SafeMath.add": {
          "17": [
            152,
            161
          ],
          "18": [
            171,
            186
          ]
        },
        "SafeMath.sub": {
          "11": [
            287,
            302
          ],
          "12": [
            312,
            321
          ]
        }
      },
      "1": {
        "Token._transfer": {
          "13": [
            2850,
            2908
          ],
          "14": [
            2918,
            2963
          ],
          "15": [
            2973,
            3014
          ],
          "16": [
            3024,
            3057
          ]
        },
        "Token.allowance": {
          "1": [
            1776,
            1808
          ]
        },
        "Token.approve": {
          "2": [
            2589,
            2627
          ],
          "3": [
            2637,
            2680
          ],
          "4": [
            2690,
            2701
          ]
        },
        "Token.balanceOf": {
          "0": [
            1306,
            1329
          ]
        },
        "Token.transfer": {
          "9": [
            3349,
            3383
          ],
          "10": [
            3393,
            3404
          ]
        },
        "Token.transferFrom": {
          "5": [
            3863,
            3934
          ],
          "6": [
            3944,
            4011
          ],
          "7": [
            4021,
            4050
          ],
          "8": [
            4060,
            4071
          ]
        }
      }
    }
  },
  "dependencies": [
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461010357806370a082311461010c57806395d89b4114610135578063a9059cbb1461013d578063dd62ed3e1461015057600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100f0575b600080fd5b6100a0610189565b6040516100ad91906104cc565b60405180910390f35b6100c96100c436600461053d565b610217565b60405190151581526020016100ad565b6100e260035481565b6040519081526020016100ad565b6100c96100fe366004610567565b610284565b6100e260025481565b6100e261011a3660046105a3565b6001600160a01b031660009081526004602052604090205490565b6100a061035c565b6100c961014b36600461053d565b610369565b6100e261015e3660046105be565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b60018054610196906105f1565b80601f01602080910402602001604051908101604052809291908181526020018280546101c2906105f1565b801561020f5780601f106101e45761010080835404028352916020019161020f565b820191906000526020600020905b8154815290600101906020018083116101f257829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102729086815260200190565b60405180910390a35060015b92915050565b6001600160a01b03831660009081526005602090815260408083203384529091528120548211156102f55760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b60448201526064015b60405180910390fd5b6001600160a01b0384166000908152600560209081526040808320338452909152902054610323908361037f565b6001600160a01b038516600090815260056020908152604080832033845290915290205561035284848461039f565b5060019392505050565b60008054610196906105f1565b600061037633848461039f565b50600192915050565b60008282111561038e57600080fd5b6103988284610641565b9392505050565b6001600160a01b0383166000908152600460205260409020548111156103fe5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016102ec565b6001600160a01b038316600090815260046020526040902054610421908261037f565b6001600160a01b03808516600090815260046020526040808220939093559084168152205461045090826104b1565b6001600160a01b0380841660008181526004602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104a49085815260200190565b60405180910390a3505050565b60006104bd8284610658565b90508281101561027e57600080fd5b600060208083528351808285015260005b818110156104f9578581018301518582016040015282016104dd565b8181111561050b576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461053857600080fd5b919050565b6000806040838503121561055057600080fd5b61055983610521565b946020939093013593505050565b60008060006060848603121561057c57600080fd5b61058584610521565b925061059360208501610521565b9150604084013590509250925092565b6000602082840312156105b557600080fd5b61039882610521565b600080604083850312156105d157600080fd5b6105da83610521565b91506105e860208401610521565b90509250929050565b600181811c9082168061060557607f821691505b60208210810361062557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156106535761065361062b565b500390565b6000821982111561066b5761066b61062b565b50019056fea2646970667358221220dd817ea1f241cdf149d9c909b82dfcec96173dc14b6b6e0ee3b1167a1a45f20064736f6c634300080e0033",
  "deployedSourceMap": "246:3835:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;327:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2506:202;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:2;;1211:22;1193:41;;1181:2;1166:18;2506:202:1;1053:187:2;380:26:1;;;;;;;;;1391:25:2;;;1379:2;1364:18;380:26:1;1245:177:2;3715:363:1;;;;;;:::i;:::-;;:::i;351:23::-;;;;;;1231:105;;;;;;:::i;:::-;-1:-1:-1;;;;;1313:16:1;1287:7;1313:16;;;:8;:16;;;;;;;1231:105;301:20;;;:::i;3270:141::-;;;;;;:::i;:::-;;:::i;1633:182::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1783:15:1;;;1753:7;1783:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;1633:182;327:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2506:202::-;2597:10;2573:4;2589:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;2589:29:1;;;;;;;;;;:38;;;2642;2573:4;;2589:29;;2642:38;;;;2621:6;1391:25:2;;1379:2;1364:18;;1245:177;2642:38:1;;;;;;;;-1:-1:-1;2697:4:1;2506:202;;;;;:::o;3715:363::-;-1:-1:-1;;;;;3871:14:1;;3843:4;3871:14;;;:7;:14;;;;;;;;3886:10;3871:26;;;;;;;;:36;-1:-1:-1;3871:36:1;3863:71;;;;-1:-1:-1;;;3863:71:1;;2803:2:2;3863:71:1;;;2785:21:2;2842:2;2822:18;;;2815:30;-1:-1:-1;;;2861:18:2;;;2854:52;2923:18;;3863:71:1;;;;;;;;;-1:-1:-1;;;;;3973:14:1;;;;;;:7;:14;;;;;;;;3988:10;3973:26;;;;;;;;:38;;4004:6;3973:30;:38::i;:::-;-1:-1:-1;;;;;3944:14:1;;;;;;:7;:14;;;;;;;;3959:10;3944:26;;;;;;;:67;4021:29;3952:5;4038:3;4043:6;4021:9;:29::i;:::-;-1:-1:-1;4067:4:1;3715:363;;;;;:::o;301:20::-;;;;;;;:::i;3270:141::-;3333:4;3349:34;3359:10;3371:3;3376:6;3349:9;:34::i;:::-;-1:-1:-1;3400:4:1;3270:141;;;;:::o;217:129:0:-;269:6;300:1;295;:6;;287:15;;;;;;316:5;320:1;316;:5;:::i;:::-;312:9;217:129;-1:-1:-1;;;217:129:0:o;2768:296:1:-;-1:-1:-1;;;;;2858:15:1;;;;;;:8;:15;;;;;;:25;-1:-1:-1;2858:25:1;2850:58;;;;-1:-1:-1;;;2850:58:1;;3416:2:2;2850:58:1;;;3398:21:2;3455:2;3435:18;;;3428:30;-1:-1:-1;;;3474:18:2;;;3467:50;3534:18;;2850:58:1;3214:344:2;2850:58:1;-1:-1:-1;;;;;2936:15:1;;;;;;:8;:15;;;;;;:27;;2956:6;2936:19;:27::i;:::-;-1:-1:-1;;;;;2918:15:1;;;;;;;:8;:15;;;;;;:45;;;;2989:13;;;;;;;:25;;3007:6;2989:17;:25::i;:::-;-1:-1:-1;;;;;2973:13:1;;;;;;;:8;:13;;;;;;;:41;;;;3029:28;;;;;;;;;;3050:6;1391:25:2;;1379:2;1364:18;;1245:177;3029:28:1;;;;;;;;2768:296;;;:::o;82:129:0:-;134:6;156:5;160:1;156;:5;:::i;:::-;152:9;;184:1;179;:6;;171:15;;;;;14:597:2;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:2;574:15;-1:-1:-1;;570:29:2;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:2:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:2;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:2:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1760:186::-;1819:6;1872:2;1860:9;1851:7;1847:23;1843:32;1840:52;;;1888:1;1885;1878:12;1840:52;1911:29;1930:9;1911:29;:::i;1951:260::-;2019:6;2027;2080:2;2068:9;2059:7;2055:23;2051:32;2048:52;;;2096:1;2093;2086:12;2048:52;2119:29;2138:9;2119:29;:::i;:::-;2109:39;;2167:38;2201:2;2190:9;2186:18;2167:38;:::i;:::-;2157:48;;1951:260;;;;;:::o;2216:380::-;2295:1;2291:12;;;;2338;;;2359:61;;2413:4;2405:6;2401:17;2391:27;;2359:61;2466:2;2458:6;2455:14;2435:18;2432:38;2429:161;;2512:10;2507:3;2503:20;2500:1;2493:31;2547:4;2544:1;2537:15;2575:4;2572:1;2565:15;2429:161;;2216:380;;;:::o;2952:127::-;3013:10;3008:3;3004:20;3001:1;2994:31;3044:4;3041:1;3034:15;3068:4;3065:1;3058:15;3084:125;3124:4;3152:1;3149;3146:8;3143:34;;;3157:18;;:::i;:::-;-1:-1:-1;3194:9:2;;3084:125::o;3563:128::-;3603:3;3634:1;3630:6;3627:1;3624:13;3621:39;;;3640:18;;:::i;:::-;-1:-1:-1;3676:9:2;;3563:128::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "notice": "Getter to check the amount of tokens that an owner allowed to a spender",
        "params": {
          "_owner": "The address which owns the funds",
          "_spender": "The address which will spend the funds"
        },
        "returns": {
          "_0": "The amount of tokens still available for the spender"
        }
      },
      "approve(address,uint256)": {
        "details": "Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "notice": "Approve an address to spend the specified amount of tokens on behalf of msg.sender",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        },
        "returns": {
          "_0": "Success boolean"
        }
      },
      "balanceOf(address)": {
        "notice": "Getter to check the current balance of an address",
        "params": {
          "_owner": "Address to query the balance of"
        },
        "returns": {
          "_0": "Token balance"
        }
      },
      "transfer(address,uint256)": {
        "notice": "Transfer tokens to a specified address",
        "params": {
          "_to": "The address to transfer to",
          "_value": "The amount to be transferred"
        },
        "returns": {
          "_0": "Success boolean"
        }
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer tokens from one address to another",
        "params": {
          "_from": "The address which you want to send tokens from",
          "_to": "The address which you want to transfer to",
          "_value": "The amount of tokens to be transferred"
        },
        "returns": {
          "_0": "Success boolean"
        }
      }
    },
    "notice": "Based on the ERC-20 token standard as defined at https://eips.ethereum.org/EIPS/eip-20",
    "title": "Bare-bones Token implementation",
    "version": 1
  },
  "offset": [
    246,
    4081
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xE2 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAD JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x567 JUMP JUMPDEST PUSH2 0x284 JUMP JUMPDEST PUSH2 0xE2 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x11A CALLDATASIZE PUSH1 0x4 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x35C JUMP JUMPDEST PUSH2 0xC9 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x53D JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH2 0xE2 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x5BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x196 SWAP1 PUSH2 0x5F1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C2 SWAP1 PUSH2 0x5F1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x20F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x20F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x272 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x323 SWAP1 DUP4 PUSH2 0x37F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH2 0x352 DUP5 DUP5 DUP5 PUSH2 0x39F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x196 SWAP1 PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x376 CALLER DUP5 DUP5 PUSH2 0x39F JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x398 DUP3 DUP5 PUSH2 0x641 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x3FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x421 SWAP1 DUP3 PUSH2 0x37F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x450 SWAP1 DUP3 PUSH2 0x4B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x4A4 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD DUP3 DUP5 PUSH2 0x658 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4F9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x4DD JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x50B JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x559 DUP4 PUSH2 0x521 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x585 DUP5 PUSH2 0x521 JUMP JUMPDEST SWAP3 POP PUSH2 0x593 PUSH1 0x20 DUP6 ADD PUSH2 0x521 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x398 DUP3 PUSH2 0x521 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5DA DUP4 PUSH2 0x521 JUMP JUMPDEST SWAP2 POP PUSH2 0x5E8 PUSH1 0x20 DUP5 ADD PUSH2 0x521 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x605 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x625 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x653 JUMPI PUSH2 0x653 PUSH2 0x62B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x66B JUMPI PUSH2 0x66B PUSH2 0x62B JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD DUP2 PUSH31 0xA1F241CDF149D9C909B82DFCEC96173DC14B6B6E0EE3B1167A1A45F2006473 PUSH16 0x6C634300080E00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        246,
        4081
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x313CE567"
    },
    "38": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x313CE567"
    },
    "49": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x103"
    },
    "53": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10C"
    },
    "64": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x135"
    },
    "75": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "82": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13D"
    },
    "86": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "93": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x150"
    },
    "97": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "DUP1",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "REVERT",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "DUP1",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDDE03"
    },
    "109": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "EQ",
      "path": "1"
    },
    "110": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "120": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB6"
    },
    "124": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x18160DDD"
    },
    "131": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD9"
    },
    "135": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "DUP1",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "142": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "EQ",
      "path": "1"
    },
    "143": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF0"
    },
    "146": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "147": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "DUP1",
      "path": "1"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        246,
        4081
      ],
      "op": "REVERT",
      "path": "1"
    },
    "152": {
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "153": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0"
    },
    "156": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x189"
    },
    "159": {
      "fn": null,
      "jump": "i",
      "offset": [
        327,
        345
      ],
      "op": "JUMP",
      "path": "1"
    },
    "160": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "161": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "163": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "164": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAD"
    },
    "167": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "168": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "169": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4CC"
    },
    "172": {
      "fn": null,
      "jump": "i",
      "offset": [
        327,
        345
      ],
      "op": "JUMP",
      "path": "1"
    },
    "173": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "174": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "176": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "177": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "1"
    },
    "178": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "179": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "SUB",
      "path": "1"
    },
    "180": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "181": {
      "fn": null,
      "offset": [
        327,
        345
      ],
      "op": "RETURN",
      "path": "1"
    },
    "182": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "183": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC9"
    },
    "186": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC4"
    },
    "189": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "190": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "192": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x53D"
    },
    "195": {
      "fn": "Token.approve",
      "jump": "i",
      "offset": [
        2506,
        2708
      ],
      "op": "JUMP",
      "path": "1"
    },
    "196": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "197": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x217"
    },
    "200": {
      "fn": "Token.approve",
      "jump": "i",
      "offset": [
        2506,
        2708
      ],
      "op": "JUMP",
      "path": "1"
    },
    "201": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "202": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "204": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "205": {
      "op": "SWAP1"
    },
    "206": {
      "op": "ISZERO"
    },
    "207": {
      "op": "ISZERO"
    },
    "208": {
      "op": "DUP2"
    },
    "209": {
      "op": "MSTORE"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "212": {
      "op": "ADD"
    },
    "213": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAD"
    },
    "216": {
      "op": "JUMP"
    },
    "217": {
      "offset": [
        380,
        406
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "218": {
      "fn": "Token.approve",
      "offset": [
        380,
        406
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2"
    },
    "221": {
      "fn": "Token.approve",
      "offset": [
        380,
        406
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "223": {
      "fn": "Token.approve",
      "offset": [
        380,
        406
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "224": {
      "fn": "Token.approve",
      "offset": [
        380,
        406
      ],
      "op": "DUP2",
      "path": "1"
    },
    "225": {
      "fn": "Token.approve",
      "offset": [
        380,
        406
      ],
      "op": "JUMP",
      "path": "1"
    },
    "226": {
      "fn": "Token.approve",
      "offset": [
        380,
        406
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "227": {
      "fn": "Token.approve",
      "offset": [
        380,
        406
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "229": {
      "fn": "Token.approve",
      "offset": [
        380,
        406
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "230": {
      "op": "SWAP1"
    },
    "231": {
      "op": "DUP2"
    },
    "232": {
      "op": "MSTORE"
    },
    "233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "235": {
      "op": "ADD"
    },
    "236": {
      "offset": [
        380,
        406
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAD"
    },
    "239": {
      "op": "JUMP"
    },
    "240": {
      "fn": "Token.transferFrom",
      "offset": [
        3715,
        4078
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "241": {
      "fn": "Token.transferFrom",
      "offset": [
        3715,
        4078
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC9"
    },
    "244": {
      "fn": "Token.transferFrom",
      "offset": [
        3715,
        4078
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFE"
    },
    "247": {
      "fn": "Token.transferFrom",
      "offset": [
        3715,
        4078
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "248": {
      "fn": "Token.transferFrom",
      "offset": [
        3715,
        4078
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "250": {
      "fn": "Token.transferFrom",
      "offset": [
        3715,
        4078
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x567"
    },
    "253": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        3715,
        4078
      ],
      "op": "JUMP",
      "path": "1"
    },
    "254": {
      "fn": "Token.transferFrom",
      "offset": [
        3715,
        4078
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "255": {
      "fn": "Token.transferFrom",
      "offset": [
        3715,
        4078
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x284"
    },
    "258": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        3715,
        4078
      ],
      "op": "JUMP",
      "path": "1"
    },
    "259": {
      "offset": [
        351,
        374
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "260": {
      "fn": "Token.transferFrom",
      "offset": [
        351,
        374
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2"
    },
    "263": {
      "fn": "Token.transferFrom",
      "offset": [
        351,
        374
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "265": {
      "fn": "Token.transferFrom",
      "offset": [
        351,
        374
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "266": {
      "fn": "Token.transferFrom",
      "offset": [
        351,
        374
      ],
      "op": "DUP2",
      "path": "1"
    },
    "267": {
      "fn": "Token.transferFrom",
      "offset": [
        351,
        374
      ],
      "op": "JUMP",
      "path": "1"
    },
    "268": {
      "fn": "Token.balanceOf",
      "offset": [
        1231,
        1336
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "269": {
      "fn": "Token.balanceOf",
      "offset": [
        1231,
        1336
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2"
    },
    "272": {
      "fn": "Token.balanceOf",
      "offset": [
        1231,
        1336
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A"
    },
    "275": {
      "fn": "Token.balanceOf",
      "offset": [
        1231,
        1336
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "276": {
      "fn": "Token.balanceOf",
      "offset": [
        1231,
        1336
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "278": {
      "fn": "Token.balanceOf",
      "offset": [
        1231,
        1336
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A3"
    },
    "281": {
      "fn": "Token.balanceOf",
      "jump": "i",
      "offset": [
        1231,
        1336
      ],
      "op": "JUMP",
      "path": "1"
    },
    "282": {
      "fn": "Token.balanceOf",
      "offset": [
        1231,
        1336
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "287": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "289": {
      "op": "SHL"
    },
    "290": {
      "op": "SUB"
    },
    "291": {
      "fn": "Token.balanceOf",
      "offset": [
        1313,
        1329
      ],
      "op": "AND",
      "path": "1",
      "statement": 0
    },
    "292": {
      "fn": "Token.balanceOf",
      "offset": [
        1287,
        1294
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "294": {
      "fn": "Token.balanceOf",
      "offset": [
        1313,
        1329
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "295": {
      "fn": "Token.balanceOf",
      "offset": [
        1313,
        1329
      ],
      "op": "DUP2",
      "path": "1"
    },
    "296": {
      "fn": "Token.balanceOf",
      "offset": [
        1313,
        1329
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "297": {
      "fn": "Token.balanceOf",
      "offset": [
        1313,
        1321
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "299": {
      "fn": "Token.balanceOf",
      "offset": [
        1313,
        1329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "301": {
      "fn": "Token.balanceOf",
      "offset": [
        1313,
        1329
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "302": {
      "fn": "Token.balanceOf",
      "offset": [
        1313,
        1329
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "304": {
      "fn": "Token.balanceOf",
      "offset": [
        1313,
        1329
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "305": {
      "fn": "Token.balanceOf",
      "offset": [
        1313,
        1329
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "306": {
      "fn": "Token.balanceOf",
      "offset": [
        1313,
        1329
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "307": {
      "fn": "Token.balanceOf",
      "offset": [
        1313,
        1329
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "308": {
      "fn": "Token.balanceOf",
      "offset": [
        1231,
        1336
      ],
      "op": "JUMP",
      "path": "1"
    },
    "309": {
      "offset": [
        301,
        321
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "310": {
      "fn": "Token.balanceOf",
      "offset": [
        301,
        321
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0"
    },
    "313": {
      "fn": "Token.balanceOf",
      "offset": [
        301,
        321
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35C"
    },
    "316": {
      "fn": "Token.balanceOf",
      "jump": "i",
      "offset": [
        301,
        321
      ],
      "op": "JUMP",
      "path": "1"
    },
    "317": {
      "fn": "Token.transfer",
      "offset": [
        3270,
        3411
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "318": {
      "fn": "Token.transfer",
      "offset": [
        3270,
        3411
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC9"
    },
    "321": {
      "fn": "Token.transfer",
      "offset": [
        3270,
        3411
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14B"
    },
    "324": {
      "fn": "Token.transfer",
      "offset": [
        3270,
        3411
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "325": {
      "fn": "Token.transfer",
      "offset": [
        3270,
        3411
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "327": {
      "fn": "Token.transfer",
      "offset": [
        3270,
        3411
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x53D"
    },
    "330": {
      "fn": "Token.transfer",
      "jump": "i",
      "offset": [
        3270,
        3411
      ],
      "op": "JUMP",
      "path": "1"
    },
    "331": {
      "fn": "Token.transfer",
      "offset": [
        3270,
        3411
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "332": {
      "fn": "Token.transfer",
      "offset": [
        3270,
        3411
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x369"
    },
    "335": {
      "fn": "Token.transfer",
      "jump": "i",
      "offset": [
        3270,
        3411
      ],
      "op": "JUMP",
      "path": "1"
    },
    "336": {
      "fn": "Token.allowance",
      "offset": [
        1633,
        1815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "337": {
      "fn": "Token.allowance",
      "offset": [
        1633,
        1815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2"
    },
    "340": {
      "fn": "Token.allowance",
      "offset": [
        1633,
        1815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15E"
    },
    "343": {
      "fn": "Token.allowance",
      "offset": [
        1633,
        1815
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "344": {
      "fn": "Token.allowance",
      "offset": [
        1633,
        1815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "346": {
      "fn": "Token.allowance",
      "offset": [
        1633,
        1815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5BE"
    },
    "349": {
      "fn": "Token.allowance",
      "jump": "i",
      "offset": [
        1633,
        1815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "350": {
      "fn": "Token.allowance",
      "offset": [
        1633,
        1815
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "357": {
      "op": "SHL"
    },
    "358": {
      "op": "SUB"
    },
    "359": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1798
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 1
    },
    "360": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1798
      ],
      "op": "DUP3",
      "path": "1"
    },
    "361": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1798
      ],
      "op": "AND",
      "path": "1"
    },
    "362": {
      "fn": "Token.allowance",
      "offset": [
        1753,
        1760
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "364": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1798
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "365": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1798
      ],
      "op": "DUP2",
      "path": "1"
    },
    "366": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1798
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "367": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1790
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "369": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1798
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "371": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1798
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "372": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1798
      ],
      "op": "DUP2",
      "path": "1"
    },
    "373": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1798
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "374": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1798
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "376": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1798
      ],
      "op": "DUP1",
      "path": "1"
    },
    "377": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1798
      ],
      "op": "DUP4",
      "path": "1"
    },
    "378": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1798
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "379": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1808
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "380": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1808
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "381": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1808
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "382": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1808
      ],
      "op": "AND",
      "path": "1"
    },
    "383": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1808
      ],
      "op": "DUP3",
      "path": "1"
    },
    "384": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1808
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "385": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1808
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "386": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1808
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "387": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1808
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "388": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1808
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "389": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1808
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "390": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1808
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "391": {
      "fn": "Token.allowance",
      "offset": [
        1783,
        1808
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "392": {
      "fn": "Token.allowance",
      "offset": [
        1633,
        1815
      ],
      "op": "JUMP",
      "path": "1"
    },
    "393": {
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "394": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "396": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "1"
    },
    "397": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "398": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x196"
    },
    "401": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "402": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5F1"
    },
    "405": {
      "fn": "Token.allowance",
      "jump": "i",
      "offset": [
        327,
        345
      ],
      "op": "JUMP",
      "path": "1"
    },
    "406": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "407": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "1"
    },
    "408": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "410": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "1"
    },
    "411": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "413": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "1"
    },
    "414": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "415": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DIV",
      "path": "1"
    },
    "416": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "MUL",
      "path": "1"
    },
    "417": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "419": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "1"
    },
    "420": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "422": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "423": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "424": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP2",
      "path": "1"
    },
    "425": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "1"
    },
    "426": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "428": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "429": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "1"
    },
    "430": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "431": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "432": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "433": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP2",
      "path": "1"
    },
    "434": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP2",
      "path": "1"
    },
    "435": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "436": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "438": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "1"
    },
    "439": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "440": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "1"
    },
    "441": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "442": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C2"
    },
    "445": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "446": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5F1"
    },
    "449": {
      "fn": "Token.allowance",
      "jump": "i",
      "offset": [
        327,
        345
      ],
      "op": "JUMP",
      "path": "1"
    },
    "450": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "451": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "1"
    },
    "452": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "453": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20F"
    },
    "456": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "457": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "1"
    },
    "458": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "460": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "LT",
      "path": "1"
    },
    "461": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E4"
    },
    "464": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "465": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "468": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "1"
    },
    "469": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP4",
      "path": "1"
    },
    "470": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "471": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DIV",
      "path": "1"
    },
    "472": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "MUL",
      "path": "1"
    },
    "473": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP4",
      "path": "1"
    },
    "474": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "475": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "476": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "478": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "1"
    },
    "479": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "480": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20F"
    },
    "483": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMP",
      "path": "1"
    },
    "484": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "485": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "486": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "1"
    },
    "487": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "488": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "489": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "491": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "492": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "494": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "496": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "497": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "498": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "499": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP2",
      "path": "1"
    },
    "500": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "501": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP2",
      "path": "1"
    },
    "502": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "503": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "504": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "506": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "1"
    },
    "507": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "508": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "510": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "1"
    },
    "511": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP1",
      "path": "1"
    },
    "512": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP4",
      "path": "1"
    },
    "513": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "GT",
      "path": "1"
    },
    "514": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F2"
    },
    "517": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "518": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "519": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "520": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SUB",
      "path": "1"
    },
    "521": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "523": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "AND",
      "path": "1"
    },
    "524": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP3",
      "path": "1"
    },
    "525": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "ADD",
      "path": "1"
    },
    "526": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "527": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "528": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "POP",
      "path": "1"
    },
    "529": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "POP",
      "path": "1"
    },
    "530": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "POP",
      "path": "1"
    },
    "531": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "POP",
      "path": "1"
    },
    "532": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "POP",
      "path": "1"
    },
    "533": {
      "fn": "Token.allowance",
      "offset": [
        327,
        345
      ],
      "op": "DUP2",
      "path": "1"
    },
    "534": {
      "fn": "Token.allowance",
      "jump": "o",
      "offset": [
        327,
        345
      ],
      "op": "JUMP",
      "path": "1"
    },
    "535": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "536": {
      "fn": "Token.approve",
      "offset": [
        2597,
        2607
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 2
    },
    "537": {
      "fn": "Token.approve",
      "offset": [
        2573,
        2577
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "539": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2608
      ],
      "op": "DUP2",
      "path": "1"
    },
    "540": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2608
      ],
      "op": "DUP2",
      "path": "1"
    },
    "541": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2608
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "542": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2596
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "544": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2608
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "546": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2608
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "547": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2608
      ],
      "op": "DUP2",
      "path": "1"
    },
    "548": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2608
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "549": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2608
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "551": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2608
      ],
      "op": "DUP1",
      "path": "1"
    },
    "552": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2608
      ],
      "op": "DUP4",
      "path": "1"
    },
    "553": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2608
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "560": {
      "op": "SHL"
    },
    "561": {
      "op": "SUB"
    },
    "562": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2618
      ],
      "op": "DUP8",
      "path": "1"
    },
    "563": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2618
      ],
      "op": "AND",
      "path": "1"
    },
    "564": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2618
      ],
      "op": "DUP1",
      "path": "1"
    },
    "565": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2618
      ],
      "op": "DUP6",
      "path": "1"
    },
    "566": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2618
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "567": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2618
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "568": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2618
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "569": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2618
      ],
      "op": "DUP1",
      "path": "1"
    },
    "570": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2618
      ],
      "op": "DUP4",
      "path": "1"
    },
    "571": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2618
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "572": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2627
      ],
      "op": "DUP6",
      "path": "1"
    },
    "573": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2627
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "574": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2627
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "575": {
      "fn": "Token.approve",
      "offset": [
        2642,
        2680
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 3
    },
    "576": {
      "fn": "Token.approve",
      "offset": [
        2573,
        2577
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "577": {
      "fn": "Token.approve",
      "offset": [
        2573,
        2577
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "578": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2618
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "579": {
      "fn": "Token.approve",
      "offset": [
        2589,
        2618
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "580": {
      "fn": "Token.approve",
      "offset": [
        2642,
        2680
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "613": {
      "fn": "Token.approve",
      "offset": [
        2642,
        2680
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "614": {
      "fn": "Token.approve",
      "offset": [
        2642,
        2680
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x272"
    },
    "617": {
      "fn": "Token.approve",
      "offset": [
        2642,
        2680
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "618": {
      "fn": "Token.approve",
      "offset": [
        2621,
        2627
      ],
      "op": "DUP7",
      "path": "1"
    },
    "619": {
      "op": "DUP2"
    },
    "620": {
      "op": "MSTORE"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "623": {
      "op": "ADD"
    },
    "624": {
      "op": "SWAP1"
    },
    "625": {
      "op": "JUMP"
    },
    "626": {
      "fn": "Token.approve",
      "offset": [
        2642,
        2680
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "627": {
      "fn": "Token.approve",
      "offset": [
        2642,
        2680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "629": {
      "fn": "Token.approve",
      "offset": [
        2642,
        2680
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "630": {
      "fn": "Token.approve",
      "offset": [
        2642,
        2680
      ],
      "op": "DUP1",
      "path": "1"
    },
    "631": {
      "fn": "Token.approve",
      "offset": [
        2642,
        2680
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "632": {
      "fn": "Token.approve",
      "offset": [
        2642,
        2680
      ],
      "op": "SUB",
      "path": "1"
    },
    "633": {
      "fn": "Token.approve",
      "offset": [
        2642,
        2680
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "634": {
      "fn": "Token.approve",
      "offset": [
        2642,
        2680
      ],
      "op": "LOG3",
      "path": "1"
    },
    "635": {
      "op": "POP"
    },
    "636": {
      "fn": "Token.approve",
      "offset": [
        2697,
        2701
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x1"
    },
    "638": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "639": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "640": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "641": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "POP",
      "path": "1"
    },
    "642": {
      "fn": "Token.approve",
      "offset": [
        2506,
        2708
      ],
      "op": "POP",
      "path": "1"
    },
    "643": {
      "fn": "Token.approve",
      "jump": "o",
      "offset": [
        2506,
        2708
      ],
      "op": "JUMP",
      "path": "1"
    },
    "644": {
      "fn": "Token.transferFrom",
      "offset": [
        3715,
        4078
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "651": {
      "op": "SHL"
    },
    "652": {
      "op": "SUB"
    },
    "653": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3885
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 5
    },
    "654": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3885
      ],
      "op": "AND",
      "path": "1"
    },
    "655": {
      "fn": "Token.transferFrom",
      "offset": [
        3843,
        3847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "657": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3885
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "658": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3885
      ],
      "op": "DUP2",
      "path": "1"
    },
    "659": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3885
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "660": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3878
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "662": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3885
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "664": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3885
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "665": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3885
      ],
      "op": "DUP2",
      "path": "1"
    },
    "666": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3885
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "667": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3885
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "669": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3885
      ],
      "op": "DUP1",
      "path": "1"
    },
    "670": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3885
      ],
      "op": "DUP4",
      "path": "1"
    },
    "671": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3885
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "672": {
      "fn": "Token.transferFrom",
      "offset": [
        3886,
        3896
      ],
      "op": "CALLER",
      "path": "1"
    },
    "673": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "DUP5",
      "path": "1"
    },
    "674": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "675": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "676": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "677": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "678": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "DUP2",
      "path": "1"
    },
    "679": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "680": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3897
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "681": {
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3907
      ],
      "op": "DUP3",
      "path": "1"
    },
    "682": {
      "op": "GT"
    },
    "683": {
      "branch": 19,
      "fn": "Token.transferFrom",
      "offset": [
        3871,
        3907
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "684": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F5"
    },
    "687": {
      "branch": 19,
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "688": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "690": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "691": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "695": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "697": {
      "op": "SHL"
    },
    "698": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "DUP2",
      "path": "1"
    },
    "699": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "702": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "704": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "DUP3",
      "path": "1"
    },
    "705": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "ADD",
      "path": "1"
    },
    "706": {
      "op": "MSTORE"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "711": {
      "op": "DUP3"
    },
    "712": {
      "op": "ADD"
    },
    "713": {
      "op": "MSTORE"
    },
    "714": {
      "op": "PUSH22",
      "value": "0x496E73756666696369656E7420616C6C6F77616E6365"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "739": {
      "op": "SHL"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "742": {
      "op": "DUP3"
    },
    "743": {
      "op": "ADD"
    },
    "744": {
      "op": "MSTORE"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "747": {
      "op": "ADD"
    },
    "748": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "749": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "751": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "752": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "DUP1",
      "path": "1"
    },
    "753": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "754": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "SUB",
      "path": "1"
    },
    "755": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "756": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "757": {
      "fn": "Token.transferFrom",
      "offset": [
        3863,
        3934
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "762": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "764": {
      "op": "SHL"
    },
    "765": {
      "op": "SUB"
    },
    "766": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3987
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 6
    },
    "767": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3987
      ],
      "op": "AND",
      "path": "1"
    },
    "768": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3987
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "770": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3987
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "771": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3987
      ],
      "op": "DUP2",
      "path": "1"
    },
    "772": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3987
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "773": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3980
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "775": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3987
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "777": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3987
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "778": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3987
      ],
      "op": "DUP2",
      "path": "1"
    },
    "779": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3987
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "780": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3987
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "782": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3987
      ],
      "op": "DUP1",
      "path": "1"
    },
    "783": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3987
      ],
      "op": "DUP4",
      "path": "1"
    },
    "784": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3987
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "785": {
      "fn": "Token.transferFrom",
      "offset": [
        3988,
        3998
      ],
      "op": "CALLER",
      "path": "1"
    },
    "786": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3999
      ],
      "op": "DUP5",
      "path": "1"
    },
    "787": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3999
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "788": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3999
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "789": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3999
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "790": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3999
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "791": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3999
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "792": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3999
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "793": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        3999
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "794": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        4011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x323"
    },
    "797": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        4011
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "798": {
      "fn": "Token.transferFrom",
      "offset": [
        4004,
        4010
      ],
      "op": "DUP4",
      "path": "1"
    },
    "799": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        4003
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37F"
    },
    "802": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        3973,
        4011
      ],
      "op": "JUMP",
      "path": "1"
    },
    "803": {
      "fn": "Token.transferFrom",
      "offset": [
        3973,
        4011
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "810": {
      "op": "SHL"
    },
    "811": {
      "op": "SUB"
    },
    "812": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3958
      ],
      "op": "DUP6",
      "path": "1"
    },
    "813": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3958
      ],
      "op": "AND",
      "path": "1"
    },
    "814": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3958
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "816": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3958
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "817": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3958
      ],
      "op": "DUP2",
      "path": "1"
    },
    "818": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3958
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "819": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "821": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3958
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "823": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3958
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "824": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3958
      ],
      "op": "DUP2",
      "path": "1"
    },
    "825": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3958
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "826": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3958
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "828": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3958
      ],
      "op": "DUP1",
      "path": "1"
    },
    "829": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3958
      ],
      "op": "DUP4",
      "path": "1"
    },
    "830": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3958
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "831": {
      "fn": "Token.transferFrom",
      "offset": [
        3959,
        3969
      ],
      "op": "CALLER",
      "path": "1"
    },
    "832": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3970
      ],
      "op": "DUP5",
      "path": "1"
    },
    "833": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3970
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "834": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3970
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "835": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3970
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "836": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3970
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "837": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3970
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "838": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        3970
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "839": {
      "fn": "Token.transferFrom",
      "offset": [
        3944,
        4011
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "840": {
      "fn": "Token.transferFrom",
      "offset": [
        4021,
        4050
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 7,
      "value": "0x352"
    },
    "843": {
      "fn": "Token.transferFrom",
      "offset": [
        3952,
        3957
      ],
      "op": "DUP5",
      "path": "1"
    },
    "844": {
      "fn": "Token.transferFrom",
      "offset": [
        4038,
        4041
      ],
      "op": "DUP5",
      "path": "1"
    },
    "845": {
      "fn": "Token.transferFrom",
      "offset": [
        4043,
        4049
      ],
      "op": "DUP5",
      "path": "1"
    },
    "846": {
      "fn": "Token.transferFrom",
      "offset": [
        4021,
        4030
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39F"
    },
    "849": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        4021,
        4050
      ],
      "op": "JUMP",
      "path": "1"
    },
    "850": {
      "fn": "Token.transferFrom",
      "offset": [
        4021,
        4050
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "851": {
      "op": "POP"
    },
    "852": {
      "fn": "Token.transferFrom",
      "offset": [
        4067,
        4071
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x1"
    },
    "854": {
      "fn": "Token.transferFrom",
      "offset": [
        3715,
        4078
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "855": {
      "fn": "Token.transferFrom",
      "offset": [
        3715,
        4078
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "856": {
      "fn": "Token.transferFrom",
      "offset": [
        3715,
        4078
      ],
      "op": "POP",
      "path": "1"
    },
    "857": {
      "fn": "Token.transferFrom",
      "offset": [
        3715,
        4078
      ],
      "op": "POP",
      "path": "1"
    },
    "858": {
      "fn": "Token.transferFrom",
      "offset": [
        3715,
        4078
      ],
      "op": "POP",
      "path": "1"
    },
    "859": {
      "fn": "Token.transferFrom",
      "jump": "o",
      "offset": [
        3715,
        4078
      ],
      "op": "JUMP",
      "path": "1"
    },
    "860": {
      "offset": [
        301,
        321
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "861": {
      "fn": "Token.transferFrom",
      "offset": [
        301,
        321
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "863": {
      "fn": "Token.transferFrom",
      "offset": [
        301,
        321
      ],
      "op": "DUP1",
      "path": "1"
    },
    "864": {
      "fn": "Token.transferFrom",
      "offset": [
        301,
        321
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "865": {
      "fn": "Token.transferFrom",
      "offset": [
        301,
        321
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x196"
    },
    "868": {
      "fn": "Token.transferFrom",
      "offset": [
        301,
        321
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "869": {
      "fn": "Token.transferFrom",
      "offset": [
        301,
        321
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5F1"
    },
    "872": {
      "fn": "Token.transferFrom",
      "jump": "i",
      "offset": [
        301,
        321
      ],
      "op": "JUMP",
      "path": "1"
    },
    "873": {
      "fn": "Token.transfer",
      "offset": [
        3270,
        3411
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "874": {
      "fn": "Token.transfer",
      "offset": [
        3333,
        3337
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "876": {
      "fn": "Token.transfer",
      "offset": [
        3349,
        3383
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 9,
      "value": "0x376"
    },
    "879": {
      "fn": "Token.transfer",
      "offset": [
        3359,
        3369
      ],
      "op": "CALLER",
      "path": "1"
    },
    "880": {
      "fn": "Token.transfer",
      "offset": [
        3371,
        3374
      ],
      "op": "DUP5",
      "path": "1"
    },
    "881": {
      "fn": "Token.transfer",
      "offset": [
        3376,
        3382
      ],
      "op": "DUP5",
      "path": "1"
    },
    "882": {
      "fn": "Token.transfer",
      "offset": [
        3349,
        3358
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39F"
    },
    "885": {
      "fn": "Token.transfer",
      "jump": "i",
      "offset": [
        3349,
        3383
      ],
      "op": "JUMP",
      "path": "1"
    },
    "886": {
      "fn": "Token.transfer",
      "offset": [
        3349,
        3383
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "887": {
      "op": "POP"
    },
    "888": {
      "fn": "Token.transfer",
      "offset": [
        3400,
        3404
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x1"
    },
    "890": {
      "fn": "Token.transfer",
      "offset": [
        3270,
        3411
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "891": {
      "fn": "Token.transfer",
      "offset": [
        3270,
        3411
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "892": {
      "fn": "Token.transfer",
      "offset": [
        3270,
        3411
      ],
      "op": "POP",
      "path": "1"
    },
    "893": {
      "fn": "Token.transfer",
      "offset": [
        3270,
        3411
      ],
      "op": "POP",
      "path": "1"
    },
    "894": {
      "fn": "Token.transfer",
      "jump": "o",
      "offset": [
        3270,
        3411
      ],
      "op": "JUMP",
      "path": "1"
    },
    "895": {
      "fn": "SafeMath.sub",
      "offset": [
        217,
        346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "896": {
      "fn": "SafeMath.sub",
      "offset": [
        269,
        275
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "898": {
      "fn": "SafeMath.sub",
      "offset": [
        300,
        301
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 11
    },
    "899": {
      "fn": "SafeMath.sub",
      "offset": [
        295,
        296
      ],
      "op": "DUP3",
      "path": "0"
    },
    "900": {
      "fn": "SafeMath.sub",
      "offset": [
        295,
        301
      ],
      "op": "GT",
      "path": "0"
    },
    "901": {
      "branch": 21,
      "fn": "SafeMath.sub",
      "offset": [
        295,
        301
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "902": {
      "fn": "SafeMath.sub",
      "offset": [
        287,
        302
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38E"
    },
    "905": {
      "branch": 21,
      "fn": "SafeMath.sub",
      "offset": [
        287,
        302
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "906": {
      "fn": "SafeMath.sub",
      "offset": [
        287,
        302
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "908": {
      "fn": "SafeMath.sub",
      "offset": [
        287,
        302
      ],
      "op": "DUP1",
      "path": "0"
    },
    "909": {
      "fn": "SafeMath.sub",
      "offset": [
        287,
        302
      ],
      "op": "REVERT",
      "path": "0"
    },
    "910": {
      "fn": "SafeMath.sub",
      "offset": [
        287,
        302
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "911": {
      "fn": "SafeMath.sub",
      "offset": [
        316,
        321
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x398"
    },
    "914": {
      "fn": "SafeMath.sub",
      "offset": [
        320,
        321
      ],
      "op": "DUP3",
      "path": "0"
    },
    "915": {
      "fn": "SafeMath.sub",
      "offset": [
        316,
        317
      ],
      "op": "DUP5",
      "path": "0"
    },
    "916": {
      "fn": "SafeMath.sub",
      "offset": [
        316,
        321
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x641"
    },
    "919": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        316,
        321
      ],
      "op": "JUMP",
      "path": "0"
    },
    "920": {
      "fn": "SafeMath.sub",
      "offset": [
        316,
        321
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "921": {
      "fn": "SafeMath.sub",
      "offset": [
        312,
        321
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "922": {
      "fn": "SafeMath.sub",
      "offset": [
        217,
        346
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "923": {
      "op": "POP"
    },
    "924": {
      "op": "POP"
    },
    "925": {
      "op": "POP"
    },
    "926": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        217,
        346
      ],
      "op": "JUMP",
      "path": "0"
    },
    "927": {
      "fn": "Token._transfer",
      "offset": [
        2768,
        3064
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "934": {
      "op": "SHL"
    },
    "935": {
      "op": "SUB"
    },
    "936": {
      "fn": "Token._transfer",
      "offset": [
        2858,
        2873
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 13
    },
    "937": {
      "fn": "Token._transfer",
      "offset": [
        2858,
        2873
      ],
      "op": "AND",
      "path": "1"
    },
    "938": {
      "fn": "Token._transfer",
      "offset": [
        2858,
        2873
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "940": {
      "fn": "Token._transfer",
      "offset": [
        2858,
        2873
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "941": {
      "fn": "Token._transfer",
      "offset": [
        2858,
        2873
      ],
      "op": "DUP2",
      "path": "1"
    },
    "942": {
      "fn": "Token._transfer",
      "offset": [
        2858,
        2873
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "943": {
      "fn": "Token._transfer",
      "offset": [
        2858,
        2866
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "945": {
      "fn": "Token._transfer",
      "offset": [
        2858,
        2873
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "947": {
      "fn": "Token._transfer",
      "offset": [
        2858,
        2873
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "948": {
      "fn": "Token._transfer",
      "offset": [
        2858,
        2873
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "950": {
      "fn": "Token._transfer",
      "offset": [
        2858,
        2873
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "951": {
      "fn": "Token._transfer",
      "offset": [
        2858,
        2873
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "952": {
      "fn": "Token._transfer",
      "offset": [
        2858,
        2873
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "953": {
      "fn": "Token._transfer",
      "offset": [
        2858,
        2883
      ],
      "op": "DUP2",
      "path": "1"
    },
    "954": {
      "op": "GT"
    },
    "955": {
      "branch": 20,
      "fn": "Token._transfer",
      "offset": [
        2858,
        2883
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "956": {
      "fn": "Token._transfer",
      "offset": [
        2850,
        2908
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FE"
    },
    "959": {
      "branch": 20,
      "fn": "Token._transfer",
      "offset": [
        2850,
        2908
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "960": {
      "fn": "Token._transfer",
      "offset": [
        2850,
        2908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "962": {
      "fn": "Token._transfer",
      "offset": [
        2850,
        2908
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "963": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "967": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "969": {
      "op": "SHL"
    },
    "970": {
      "fn": "Token._transfer",
      "offset": [
        2850,
        2908
      ],
      "op": "DUP2",
      "path": "1"
    },
    "971": {
      "fn": "Token._transfer",
      "offset": [
        2850,
        2908
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "974": {
      "fn": "Token._transfer",
      "offset": [
        2850,
        2908
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "976": {
      "fn": "Token._transfer",
      "offset": [
        2850,
        2908
      ],
      "op": "DUP3",
      "path": "1"
    },
    "977": {
      "fn": "Token._transfer",
      "offset": [
        2850,
        2908
      ],
      "op": "ADD",
      "path": "1"
    },
    "978": {
      "op": "MSTORE"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "983": {
      "op": "DUP3"
    },
    "984": {
      "op": "ADD"
    },
    "985": {
      "op": "MSTORE"
    },
    "986": {
      "op": "PUSH20",
      "value": "0x496E73756666696369656E742062616C616E6365"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1009": {
      "op": "SHL"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1012": {
      "op": "DUP3"
    },
    "1013": {
      "op": "ADD"
    },
    "1014": {
      "op": "MSTORE"
    },
    "1015": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1017": {
      "op": "ADD"
    },
    "1018": {
      "fn": "Token._transfer",
      "offset": [
        2850,
        2908
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EC"
    },
    "1021": {
      "op": "JUMP"
    },
    "1022": {
      "fn": "Token._transfer",
      "offset": [
        2850,
        2908
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1029": {
      "op": "SHL"
    },
    "1030": {
      "op": "SUB"
    },
    "1031": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2951
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 14
    },
    "1032": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2951
      ],
      "op": "AND",
      "path": "1"
    },
    "1033": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1035": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1036": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2951
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1037": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2951
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1038": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1040": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1042": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2951
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1043": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1045": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1046": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2951
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1047": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2951
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1048": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2963
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x421"
    },
    "1051": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2963
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1052": {
      "fn": "Token._transfer",
      "offset": [
        2956,
        2962
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1053": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2955
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37F"
    },
    "1056": {
      "fn": "Token._transfer",
      "jump": "i",
      "offset": [
        2936,
        2963
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1057": {
      "fn": "Token._transfer",
      "offset": [
        2936,
        2963
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1064": {
      "op": "SHL"
    },
    "1065": {
      "op": "SUB"
    },
    "1066": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2933
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1067": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2933
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1068": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2933
      ],
      "op": "AND",
      "path": "1"
    },
    "1069": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1071": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2933
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1072": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2933
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1073": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2933
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1074": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1076": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1078": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2933
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1079": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1081": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2933
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1082": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2933
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1083": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2933
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1084": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2963
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1085": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2963
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1086": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2963
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1087": {
      "fn": "Token._transfer",
      "offset": [
        2918,
        2963
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1088": {
      "fn": "Token._transfer",
      "offset": [
        2989,
        3002
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 15
    },
    "1089": {
      "fn": "Token._transfer",
      "offset": [
        2989,
        3002
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1090": {
      "fn": "Token._transfer",
      "offset": [
        2989,
        3002
      ],
      "op": "AND",
      "path": "1"
    },
    "1091": {
      "fn": "Token._transfer",
      "offset": [
        2989,
        3002
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1092": {
      "fn": "Token._transfer",
      "offset": [
        2989,
        3002
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1093": {
      "fn": "Token._transfer",
      "offset": [
        2989,
        3002
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1094": {
      "fn": "Token._transfer",
      "offset": [
        2989,
        3002
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1095": {
      "fn": "Token._transfer",
      "offset": [
        2989,
        3014
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x450"
    },
    "1098": {
      "fn": "Token._transfer",
      "offset": [
        2989,
        3014
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1099": {
      "fn": "Token._transfer",
      "offset": [
        3007,
        3013
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1100": {
      "fn": "Token._transfer",
      "offset": [
        2989,
        3006
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4B1"
    },
    "1103": {
      "fn": "Token._transfer",
      "jump": "i",
      "offset": [
        2989,
        3014
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1104": {
      "fn": "Token._transfer",
      "offset": [
        2989,
        3014
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1111": {
      "op": "SHL"
    },
    "1112": {
      "op": "SUB"
    },
    "1113": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        2986
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1114": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        2986
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1115": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        2986
      ],
      "op": "AND",
      "path": "1"
    },
    "1116": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        2986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1118": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        2986
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1119": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        2986
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1120": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        2986
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1121": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        2981
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1123": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        2986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1125": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        2986
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1126": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        2986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1128": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        2986
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1129": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        2986
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1130": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        2986
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1131": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        2986
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1132": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        3014
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1133": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        3014
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1134": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        3014
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1135": {
      "fn": "Token._transfer",
      "offset": [
        2973,
        3014
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1136": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 16
    },
    "1137": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1138": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1139": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1140": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "AND",
      "path": "1"
    },
    "1141": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1142": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1175": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1176": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A4"
    },
    "1179": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1180": {
      "fn": "Token._transfer",
      "offset": [
        3050,
        3056
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1181": {
      "op": "DUP2"
    },
    "1182": {
      "op": "MSTORE"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1185": {
      "op": "ADD"
    },
    "1186": {
      "op": "SWAP1"
    },
    "1187": {
      "op": "JUMP"
    },
    "1188": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1189": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1191": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1192": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1193": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1194": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "SUB",
      "path": "1"
    },
    "1195": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1196": {
      "fn": "Token._transfer",
      "offset": [
        3029,
        3057
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1197": {
      "fn": "Token._transfer",
      "offset": [
        2768,
        3064
      ],
      "op": "POP",
      "path": "1"
    },
    "1198": {
      "fn": "Token._transfer",
      "offset": [
        2768,
        3064
      ],
      "op": "POP",
      "path": "1"
    },
    "1199": {
      "fn": "Token._transfer",
      "offset": [
        2768,
        3064
      ],
      "op": "POP",
      "path": "1"
    },
    "1200": {
      "fn": "Token._transfer",
      "jump": "o",
      "offset": [
        2768,
        3064
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1201": {
      "fn": "SafeMath.add",
      "offset": [
        82,
        211
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1202": {
      "fn": "SafeMath.add",
      "offset": [
        134,
        140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1204": {
      "fn": "SafeMath.add",
      "offset": [
        156,
        161
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x4BD"
    },
    "1207": {
      "fn": "SafeMath.add",
      "offset": [
        160,
        161
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1208": {
      "fn": "SafeMath.add",
      "offset": [
        156,
        157
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1209": {
      "fn": "SafeMath.add",
      "offset": [
        156,
        161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x658"
    },
    "1212": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        156,
        161
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1213": {
      "fn": "SafeMath.add",
      "offset": [
        156,
        161
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1214": {
      "fn": "SafeMath.add",
      "offset": [
        152,
        161
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1215": {
      "fn": "SafeMath.add",
      "offset": [
        152,
        161
      ],
      "op": "POP",
      "path": "0"
    },
    "1216": {
      "fn": "SafeMath.add",
      "offset": [
        184,
        185
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 18
    },
    "1217": {
      "fn": "SafeMath.add",
      "offset": [
        179,
        180
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1218": {
      "fn": "SafeMath.add",
      "offset": [
        179,
        185
      ],
      "op": "LT",
      "path": "0"
    },
    "1219": {
      "branch": 22,
      "fn": "SafeMath.add",
      "offset": [
        179,
        185
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1220": {
      "fn": "SafeMath.add",
      "offset": [
        171,
        186
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27E"
    },
    "1223": {
      "branch": 22,
      "fn": "SafeMath.add",
      "offset": [
        171,
        186
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1224": {
      "fn": "SafeMath.add",
      "offset": [
        171,
        186
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1226": {
      "fn": "SafeMath.add",
      "offset": [
        171,
        186
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1227": {
      "fn": "SafeMath.add",
      "offset": [
        171,
        186
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1228": {
      "op": "JUMPDEST"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1233": {
      "op": "DUP1"
    },
    "1234": {
      "op": "DUP4"
    },
    "1235": {
      "op": "MSTORE"
    },
    "1236": {
      "op": "DUP4"
    },
    "1237": {
      "op": "MLOAD"
    },
    "1238": {
      "op": "DUP1"
    },
    "1239": {
      "op": "DUP3"
    },
    "1240": {
      "op": "DUP6"
    },
    "1241": {
      "op": "ADD"
    },
    "1242": {
      "op": "MSTORE"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1245": {
      "op": "JUMPDEST"
    },
    "1246": {
      "op": "DUP2"
    },
    "1247": {
      "op": "DUP2"
    },
    "1248": {
      "op": "LT"
    },
    "1249": {
      "op": "ISZERO"
    },
    "1250": {
      "op": "PUSH2",
      "value": "0x4F9"
    },
    "1253": {
      "op": "JUMPI"
    },
    "1254": {
      "op": "DUP6"
    },
    "1255": {
      "op": "DUP2"
    },
    "1256": {
      "op": "ADD"
    },
    "1257": {
      "op": "DUP4"
    },
    "1258": {
      "op": "ADD"
    },
    "1259": {
      "op": "MLOAD"
    },
    "1260": {
      "op": "DUP6"
    },
    "1261": {
      "op": "DUP3"
    },
    "1262": {
      "op": "ADD"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1265": {
      "op": "ADD"
    },
    "1266": {
      "op": "MSTORE"
    },
    "1267": {
      "op": "DUP3"
    },
    "1268": {
      "op": "ADD"
    },
    "1269": {
      "op": "PUSH2",
      "value": "0x4DD"
    },
    "1272": {
      "op": "JUMP"
    },
    "1273": {
      "op": "JUMPDEST"
    },
    "1274": {
      "op": "DUP2"
    },
    "1275": {
      "op": "DUP2"
    },
    "1276": {
      "op": "GT"
    },
    "1277": {
      "op": "ISZERO"
    },
    "1278": {
      "op": "PUSH2",
      "value": "0x50B"
    },
    "1281": {
      "op": "JUMPI"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1286": {
      "op": "DUP4"
    },
    "1287": {
      "op": "DUP8"
    },
    "1288": {
      "op": "ADD"
    },
    "1289": {
      "op": "ADD"
    },
    "1290": {
      "op": "MSTORE"
    },
    "1291": {
      "op": "JUMPDEST"
    },
    "1292": {
      "op": "POP"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1295": {
      "op": "ADD"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1298": {
      "op": "NOT"
    },
    "1299": {
      "op": "AND"
    },
    "1300": {
      "op": "SWAP3"
    },
    "1301": {
      "op": "SWAP1"
    },
    "1302": {
      "op": "SWAP3"
    },
    "1303": {
      "op": "ADD"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1306": {
      "op": "ADD"
    },
    "1307": {
      "op": "SWAP4"
    },
    "1308": {
      "op": "SWAP3"
    },
    "1309": {
      "op": "POP"
    },
    "1310": {
      "op": "POP"
    },
    "1311": {
      "op": "POP"
    },
    "1312": {
      "jump": "o",
      "op": "JUMP"
    },
    "1313": {
      "op": "JUMPDEST"
    },
    "1314": {
      "op": "DUP1"
    },
    "1315": {
      "op": "CALLDATALOAD"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1322": {
      "op": "SHL"
    },
    "1323": {
      "op": "SUB"
    },
    "1324": {
      "op": "DUP2"
    },
    "1325": {
      "op": "AND"
    },
    "1326": {
      "op": "DUP2"
    },
    "1327": {
      "op": "EQ"
    },
    "1328": {
      "op": "PUSH2",
      "value": "0x538"
    },
    "1331": {
      "op": "JUMPI"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1334": {
      "op": "DUP1"
    },
    "1335": {
      "op": "REVERT"
    },
    "1336": {
      "op": "JUMPDEST"
    },
    "1337": {
      "op": "SWAP2"
    },
    "1338": {
      "op": "SWAP1"
    },
    "1339": {
      "op": "POP"
    },
    "1340": {
      "jump": "o",
      "op": "JUMP"
    },
    "1341": {
      "op": "JUMPDEST"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1344": {
      "op": "DUP1"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1347": {
      "op": "DUP4"
    },
    "1348": {
      "op": "DUP6"
    },
    "1349": {
      "op": "SUB"
    },
    "1350": {
      "op": "SLT"
    },
    "1351": {
      "op": "ISZERO"
    },
    "1352": {
      "op": "PUSH2",
      "value": "0x550"
    },
    "1355": {
      "op": "JUMPI"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1358": {
      "op": "DUP1"
    },
    "1359": {
      "op": "REVERT"
    },
    "1360": {
      "op": "JUMPDEST"
    },
    "1361": {
      "op": "PUSH2",
      "value": "0x559"
    },
    "1364": {
      "op": "DUP4"
    },
    "1365": {
      "op": "PUSH2",
      "value": "0x521"
    },
    "1368": {
      "jump": "i",
      "op": "JUMP"
    },
    "1369": {
      "op": "JUMPDEST"
    },
    "1370": {
      "op": "SWAP5"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1373": {
      "op": "SWAP4"
    },
    "1374": {
      "op": "SWAP1"
    },
    "1375": {
      "op": "SWAP4"
    },
    "1376": {
      "op": "ADD"
    },
    "1377": {
      "op": "CALLDATALOAD"
    },
    "1378": {
      "op": "SWAP4"
    },
    "1379": {
      "op": "POP"
    },
    "1380": {
      "op": "POP"
    },
    "1381": {
      "op": "POP"
    },
    "1382": {
      "jump": "o",
      "op": "JUMP"
    },
    "1383": {
      "op": "JUMPDEST"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1386": {
      "op": "DUP1"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1391": {
      "op": "DUP5"
    },
    "1392": {
      "op": "DUP7"
    },
    "1393": {
      "op": "SUB"
    },
    "1394": {
      "op": "SLT"
    },
    "1395": {
      "op": "ISZERO"
    },
    "1396": {
      "op": "PUSH2",
      "value": "0x57C"
    },
    "1399": {
      "op": "JUMPI"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1402": {
      "op": "DUP1"
    },
    "1403": {
      "op": "REVERT"
    },
    "1404": {
      "op": "JUMPDEST"
    },
    "1405": {
      "op": "PUSH2",
      "value": "0x585"
    },
    "1408": {
      "op": "DUP5"
    },
    "1409": {
      "op": "PUSH2",
      "value": "0x521"
    },
    "1412": {
      "jump": "i",
      "op": "JUMP"
    },
    "1413": {
      "op": "JUMPDEST"
    },
    "1414": {
      "op": "SWAP3"
    },
    "1415": {
      "op": "POP"
    },
    "1416": {
      "op": "PUSH2",
      "value": "0x593"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1421": {
      "op": "DUP6"
    },
    "1422": {
      "op": "ADD"
    },
    "1423": {
      "op": "PUSH2",
      "value": "0x521"
    },
    "1426": {
      "jump": "i",
      "op": "JUMP"
    },
    "1427": {
      "op": "JUMPDEST"
    },
    "1428": {
      "op": "SWAP2"
    },
    "1429": {
      "op": "POP"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1432": {
      "op": "DUP5"
    },
    "1433": {
      "op": "ADD"
    },
    "1434": {
      "op": "CALLDATALOAD"
    },
    "1435": {
      "op": "SWAP1"
    },
    "1436": {
      "op": "POP"
    },
    "1437": {
      "op": "SWAP3"
    },
    "1438": {
      "op": "POP"
    },
    "1439": {
      "op": "SWAP3"
    },
    "1440": {
      "op": "POP"
    },
    "1441": {
      "op": "SWAP3"
    },
    "1442": {
      "jump": "o",
      "op": "JUMP"
    },
    "1443": {
      "op": "JUMPDEST"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1448": {
      "op": "DUP3"
    },
    "1449": {
      "op": "DUP5"
    },
    "1450": {
      "op": "SUB"
    },
    "1451": {
      "op": "SLT"
    },
    "1452": {
      "op": "ISZERO"
    },
    "1453": {
      "op": "PUSH2",
      "value": "0x5B5"
    },
    "1456": {
      "op": "JUMPI"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1459": {
      "op": "DUP1"
    },
    "1460": {
      "op": "REVERT"
    },
    "1461": {
      "op": "JUMPDEST"
    },
    "1462": {
      "op": "PUSH2",
      "value": "0x398"
    },
    "1465": {
      "op": "DUP3"
    },
    "1466": {
      "op": "PUSH2",
      "value": "0x521"
    },
    "1469": {
      "jump": "i",
      "op": "JUMP"
    },
    "1470": {
      "op": "JUMPDEST"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1473": {
      "op": "DUP1"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1476": {
      "op": "DUP4"
    },
    "1477": {
      "op": "DUP6"
    },
    "1478": {
      "op": "SUB"
    },
    "1479": {
      "op": "SLT"
    },
    "1480": {
      "op": "ISZERO"
    },
    "1481": {
      "op": "PUSH2",
      "value": "0x5D1"
    },
    "1484": {
      "op": "JUMPI"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1487": {
      "op": "DUP1"
    },
    "1488": {
      "op": "REVERT"
    },
    "1489": {
      "op": "JUMPDEST"
    },
    "1490": {
      "op": "PUSH2",
      "value": "0x5DA"
    },
    "1493": {
      "op": "DUP4"
    },
    "1494": {
      "op": "PUSH2",
      "value": "0x521"
    },
    "1497": {
      "jump": "i",
      "op": "JUMP"
    },
    "1498": {
      "op": "JUMPDEST"
    },
    "1499": {
      "op": "SWAP2"
    },
    "1500": {
      "op": "POP"
    },
    "1501": {
      "op": "PUSH2",
      "value": "0x5E8"
    },
    "1504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1506": {
      "op": "DUP5"
    },
    "1507": {
      "op": "ADD"
    },
    "1508": {
      "op": "PUSH2",
      "value": "0x521"
    },
    "1511": {
      "jump": "i",
      "op": "JUMP"
    },
    "1512": {
      "op": "JUMPDEST"
    },
    "1513": {
      "op": "SWAP1"
    },
    "1514": {
      "op": "POP"
    },
    "1515": {
      "op": "SWAP3"
    },
    "1516": {
      "op": "POP"
    },
    "1517": {
      "op": "SWAP3"
    },
    "1518": {
      "op": "SWAP1"
    },
    "1519": {
      "op": "POP"
    },
    "1520": {
      "jump": "o",
      "op": "JUMP"
    },
    "1521": {
      "op": "JUMPDEST"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1524": {
      "op": "DUP2"
    },
    "1525": {
      "op": "DUP2"
    },
    "1526": {
      "op": "SHR"
    },
    "1527": {
      "op": "SWAP1"
    },
    "1528": {
      "op": "DUP3"
    },
    "1529": {
      "op": "AND"
    },
    "1530": {
      "op": "DUP1"
    },
    "1531": {
      "op": "PUSH2",
      "value": "0x605"
    },
    "1534": {
      "op": "JUMPI"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "1537": {
      "op": "DUP3"
    },
    "1538": {
      "op": "AND"
    },
    "1539": {
      "op": "SWAP2"
    },
    "1540": {
      "op": "POP"
    },
    "1541": {
      "op": "JUMPDEST"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1544": {
      "op": "DUP3"
    },
    "1545": {
      "op": "LT"
    },
    "1546": {
      "op": "DUP2"
    },
    "1547": {
      "op": "SUB"
    },
    "1548": {
      "op": "PUSH2",
      "value": "0x625"
    },
    "1551": {
      "op": "JUMPI"
    },
    "1552": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1559": {
      "op": "SHL"
    },
    "1560": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1562": {
      "op": "MSTORE"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1567": {
      "op": "MSTORE"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1572": {
      "op": "REVERT"
    },
    "1573": {
      "op": "JUMPDEST"
    },
    "1574": {
      "op": "POP"
    },
    "1575": {
      "op": "SWAP2"
    },
    "1576": {
      "op": "SWAP1"
    },
    "1577": {
      "op": "POP"
    },
    "1578": {
      "jump": "o",
      "op": "JUMP"
    },
    "1579": {
      "op": "JUMPDEST"
    },
    "1580": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1587": {
      "op": "SHL"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1590": {
      "op": "MSTORE"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1595": {
      "op": "MSTORE"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1600": {
      "op": "REVERT"
    },
    "1601": {
      "op": "JUMPDEST"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1604": {
      "op": "DUP3"
    },
    "1605": {
      "op": "DUP3"
    },
    "1606": {
      "op": "LT"
    },
    "1607": {
      "op": "ISZERO"
    },
    "1608": {
      "op": "PUSH2",
      "value": "0x653"
    },
    "1611": {
      "op": "JUMPI"
    },
    "1612": {
      "op": "PUSH2",
      "value": "0x653"
    },
    "1615": {
      "op": "PUSH2",
      "value": "0x62B"
    },
    "1618": {
      "jump": "i",
      "op": "JUMP"
    },
    "1619": {
      "op": "JUMPDEST"
    },
    "1620": {
      "op": "POP"
    },
    "1621": {
      "op": "SUB"
    },
    "1622": {
      "op": "SWAP1"
    },
    "1623": {
      "jump": "o",
      "op": "JUMP"
    },
    "1624": {
      "op": "JUMPDEST"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1627": {
      "op": "DUP3"
    },
    "1628": {
      "op": "NOT"
    },
    "1629": {
      "op": "DUP3"
    },
    "1630": {
      "op": "GT"
    },
    "1631": {
      "op": "ISZERO"
    },
    "1632": {
      "op": "PUSH2",
      "value": "0x66B"
    },
    "1635": {
      "op": "JUMPI"
    },
    "1636": {
      "op": "PUSH2",
      "value": "0x66B"
    },
    "1639": {
      "op": "PUSH2",
      "value": "0x62B"
    },
    "1642": {
      "jump": "i",
      "op": "JUMP"
    },
    "1643": {
      "op": "JUMPDEST"
    },
    "1644": {
      "op": "POP"
    },
    "1645": {
      "op": "ADD"
    },
    "1646": {
      "op": "SWAP1"
    },
    "1647": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "1e80a099eaec79e0963ddec1343691e4c9d57c63",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\nimport \"./SafeMath.sol\";\n\n/**\n    @title Bare-bones Token implementation\n    @notice Based on the ERC-20 token standard as defined at\n            https://eips.ethereum.org/EIPS/eip-20\n */\ncontract Token {\n\n    using SafeMath for uint256;\n\n    string public symbol;\n    string public name;\n    uint256 public decimals;\n    uint256 public totalSupply;\n\n    mapping(address => uint256) balances;\n    mapping(address => mapping(address => uint256)) allowed;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        uint256 _decimals,\n        uint256 _totalSupply\n    )\n        public\n    {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n        totalSupply = _totalSupply;\n        balances[msg.sender] = _totalSupply;\n        emit Transfer(address(0), msg.sender, _totalSupply);\n    }\n\n    /**\n        @notice Getter to check the current balance of an address\n        @param _owner Address to query the balance of\n        @return Token balance\n     */\n    function balanceOf(address _owner) public view returns (uint256) {\n        return balances[_owner];\n    }\n\n    /**\n        @notice Getter to check the amount of tokens that an owner allowed to a spender\n        @param _owner The address which owns the funds\n        @param _spender The address which will spend the funds\n        @return The amount of tokens still available for the spender\n     */\n    function allowance(\n        address _owner,\n        address _spender\n    )\n        public\n        view\n        returns (uint256)\n    {\n        return allowed[_owner][_spender];\n    }\n\n    /**\n        @notice Approve an address to spend the specified amount of tokens on behalf of msg.sender\n        @dev Beware that changing an allowance with this method brings the risk that someone may use both the old\n             and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n             race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n             https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        @param _spender The address which will spend the funds.\n        @param _value The amount of tokens to be spent.\n        @return Success boolean\n     */\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        emit Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /** shared logic for transfer and transferFrom */\n    function _transfer(address _from, address _to, uint256 _value) internal {\n        require(balances[_from] >= _value, \"Insufficient balance\");\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        emit Transfer(_from, _to, _value);\n    }\n\n    /**\n        @notice Transfer tokens to a specified address\n        @param _to The address to transfer to\n        @param _value The amount to be transferred\n        @return Success boolean\n     */\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        _transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /**\n        @notice Transfer tokens from one address to another\n        @param _from The address which you want to send tokens from\n        @param _to The address which you want to transfer to\n        @param _value The amount of tokens to be transferred\n        @return Success boolean\n     */\n    function transferFrom(\n        address _from,\n        address _to,\n        uint256 _value\n    )\n        public\n        returns (bool)\n    {\n        require(allowed[_from][msg.sender] >= _value, \"Insufficient allowance\");\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        _transfer(_from, _to, _value);\n        return true;\n    }\n\n}\n",
  "sourceMap": "246:3835:1:-:0;;;678:381;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;842:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;864:16:1;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;890:8:1;:20;;;920:11;:26;;;965:10;-1:-1:-1;956:20:1;;;:8;:20;;;;;;;;:35;;;1006:46;1872:25:2;;;1006:46:1;;1845:18:2;1006:46:1;;;;;;;678:381;;;;246:3835;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;246:3835:1;;;-1:-1:-1;246:3835:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:2;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:2;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:2;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:2:o;1036:685::-;1153:6;1161;1169;1177;1230:3;1218:9;1209:7;1205:23;1201:33;1198:53;;;1247:1;1244;1237:12;1198:53;1274:16;;-1:-1:-1;;;;;1339:14:2;;;1336:34;;;1366:1;1363;1356:12;1336:34;1389:61;1442:7;1433:6;1422:9;1418:22;1389:61;:::i;:::-;1379:71;;1496:2;1485:9;1481:18;1475:25;1459:41;;1525:2;1515:8;1512:16;1509:36;;;1541:1;1538;1531:12;1509:36;;1564:63;1619:7;1608:8;1597:9;1593:24;1564:63;:::i;:::-;1667:2;1652:18;;1646:25;1711:2;1696:18;;;1690:25;1036:685;;1554:73;;-1:-1:-1;1036:685:2;-1:-1:-1;;;;1036:685:2:o;1908:380::-;1987:1;1983:12;;;;2030;;;2051:61;;2105:4;2097:6;2093:17;2083:27;;2051:61;2158:2;2150:6;2147:14;2127:18;2124:38;2121:161;;2204:10;2199:3;2195:20;2192:1;2185:31;2239:4;2236:1;2229:15;2267:4;2264:1;2257:15;2121:161;;1908:380;;;:::o;:::-;246:3835:1;;;;;;",
  "sourcePath": "contracts/Token.sol",
  "type": "contract"
}
{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "AllocationsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "DistributionRoundSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "MultipleRegistrationCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Participated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Registered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RegistrationRoundSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "RegistrationRoundStopped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "VestingParametersSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToEvent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToWithdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distribution",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isCreated",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "tokensDeposited",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amountOfTokensToDistribute",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalTokensDistributed",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distributionRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endDate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegisteredUsers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVestingPortions",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVestingUnlocks",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "indexToRegistrations",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "leftoverWithdrawn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "participate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "participations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "datetime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isParticipated",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        }
      ],
      "name": "registerMultipleUsers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registrationRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endDate",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isStopped",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registrations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "datetime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "distributionAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isRegistered",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registrationsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setAddressDistributionAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_event",
          "type": "uint256"
        }
      ],
      "name": "setAddressEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountOfTokensToDistribute",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingPrecision",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "setDistributionParameters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endDate",
          "type": "uint256"
        }
      ],
      "name": "setDistributionRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_eventsCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_percents",
          "type": "uint256[]"
        }
      ],
      "name": "setEventVestingParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "internalType": "struct DistributorNative.Allocation[]",
          "name": "_allocations",
          "type": "tuple[]"
        }
      ],
      "name": "setMultipleAddressDistributionAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endDate",
          "type": "uint256"
        }
      ],
      "name": "setRegistrationRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_endDate",
          "type": "uint256"
        }
      ],
      "name": "setVestingEndDate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_unlockingTimes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_percents",
          "type": "uint256[]"
        }
      ],
      "name": "setVestingParams",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopRegistrationRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingEndDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingEventsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vestingPercentPerPortion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vestingPortionsUnlockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingPrecision",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawLeftover",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/droppenheimer/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/math/SafeMath.sol",
    "2": "contracts/DistributorNative.sol"
  },
  "ast": {
    "absolutePath": "contracts/DistributorNative.sol",
    "exportedSymbols": {
      "DistributorNative": [
        1364
      ],
      "SafeMath": [
        1676
      ]
    },
    "id": 1365,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 86,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:2"
      },
      {
        "absolutePath": "/Users/droppenheimer/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 87,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1365,
        "sourceUnit": 1677,
        "src": "58:57:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "DistributorNative",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1364,
        "linearizedBaseContracts": [
          1364
        ],
        "name": "DistributorNative",
        "nameLocation": "126:17:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 90,
            "libraryName": {
              "id": 88,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1676,
              "src": "156:8:2"
            },
            "nodeType": "UsingForDirective",
            "src": "150:28:2",
            "typeName": {
              "id": 89,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "170:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "DistributorNative.Distribution",
            "id": 101,
            "members": [
              {
                "constant": false,
                "id": 92,
                "mutability": "mutable",
                "name": "owner",
                "nameLocation": "226:5:2",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "214:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 91,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "214:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 94,
                "mutability": "mutable",
                "name": "isCreated",
                "nameLocation": "254:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "242:21:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 93,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "242:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 96,
                "mutability": "mutable",
                "name": "tokensDeposited",
                "nameLocation": "285:15:2",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "273:27:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 95,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "273:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 98,
                "mutability": "mutable",
                "name": "amountOfTokensToDistribute",
                "nameLocation": "323:26:2",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "311:38:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 97,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "311:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 100,
                "mutability": "mutable",
                "name": "totalTokensDistributed",
                "nameLocation": "371:22:2",
                "nodeType": "VariableDeclaration",
                "scope": 101,
                "src": "359:34:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 99,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "359:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Distribution",
            "nameLocation": "191:12:2",
            "nodeType": "StructDefinition",
            "scope": 1364,
            "src": "184:216:2",
            "visibility": "public"
          },
          {
            "canonicalName": "DistributorNative.Registration",
            "id": 108,
            "members": [
              {
                "constant": false,
                "id": 103,
                "mutability": "mutable",
                "name": "datetime",
                "nameLocation": "448:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 108,
                "src": "436:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 102,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "436:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 105,
                "mutability": "mutable",
                "name": "distributionAmount",
                "nameLocation": "478:18:2",
                "nodeType": "VariableDeclaration",
                "scope": 108,
                "src": "466:30:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 104,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "466:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 107,
                "mutability": "mutable",
                "name": "isRegistered",
                "nameLocation": "518:12:2",
                "nodeType": "VariableDeclaration",
                "scope": 108,
                "src": "506:24:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 106,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "506:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Registration",
            "nameLocation": "413:12:2",
            "nodeType": "StructDefinition",
            "scope": 1364,
            "src": "406:131:2",
            "visibility": "public"
          },
          {
            "canonicalName": "DistributorNative.Participation",
            "id": 113,
            "members": [
              {
                "constant": false,
                "id": 110,
                "mutability": "mutable",
                "name": "datetime",
                "nameLocation": "586:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 113,
                "src": "574:20:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 109,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "574:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 112,
                "mutability": "mutable",
                "name": "isParticipated",
                "nameLocation": "616:14:2",
                "nodeType": "VariableDeclaration",
                "scope": 113,
                "src": "604:26:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 111,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "604:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Participation",
            "nameLocation": "550:13:2",
            "nodeType": "StructDefinition",
            "scope": 1364,
            "src": "543:94:2",
            "visibility": "public"
          },
          {
            "canonicalName": "DistributorNative.RegistrationRound",
            "id": 120,
            "members": [
              {
                "constant": false,
                "id": 115,
                "mutability": "mutable",
                "name": "startDate",
                "nameLocation": "698:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 120,
                "src": "678:29:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 114,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "678:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 117,
                "mutability": "mutable",
                "name": "endDate",
                "nameLocation": "737:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 120,
                "src": "717:27:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 116,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "717:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 119,
                "mutability": "mutable",
                "name": "isStopped",
                "nameLocation": "774:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 120,
                "src": "754:29:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 118,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "754:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RegistrationRound",
            "nameLocation": "650:17:2",
            "nodeType": "StructDefinition",
            "scope": 1364,
            "src": "643:147:2",
            "visibility": "public"
          },
          {
            "canonicalName": "DistributorNative.DistributionRound",
            "id": 125,
            "members": [
              {
                "constant": false,
                "id": 122,
                "mutability": "mutable",
                "name": "startDate",
                "nameLocation": "851:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 125,
                "src": "831:29:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 121,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "831:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 124,
                "mutability": "mutable",
                "name": "endDate",
                "nameLocation": "890:7:2",
                "nodeType": "VariableDeclaration",
                "scope": 125,
                "src": "870:27:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 123,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "870:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DistributionRound",
            "nameLocation": "803:17:2",
            "nodeType": "StructDefinition",
            "scope": 1364,
            "src": "796:108:2",
            "visibility": "public"
          },
          {
            "canonicalName": "DistributorNative.Allocation",
            "id": 130,
            "members": [
              {
                "constant": false,
                "id": 127,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "958:4:2",
                "nodeType": "VariableDeclaration",
                "scope": 130,
                "src": "938:24:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 126,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "938:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 129,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "992:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 130,
                "src": "972:26:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 128,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "972:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Allocation",
            "nameLocation": "917:10:2",
            "nodeType": "StructDefinition",
            "scope": 1364,
            "src": "910:95:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "942e6bcf",
            "id": 135,
            "mutability": "mutable",
            "name": "registrations",
            "nameLocation": "1054:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 1364,
            "src": "1011:56:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Registration_$108_storage_$",
              "typeString": "mapping(address => struct DistributorNative.Registration)"
            },
            "typeName": {
              "id": 134,
              "keyType": {
                "id": 131,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1020:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1011:33:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Registration_$108_storage_$",
                "typeString": "mapping(address => struct DistributorNative.Registration)"
              },
              "valueType": {
                "id": 133,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 132,
                  "name": "Registration",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 108,
                  "src": "1031:12:2"
                },
                "referencedDeclaration": 108,
                "src": "1031:12:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Registration_$108_storage_ptr",
                  "typeString": "struct DistributorNative.Registration"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3c3ec8b7",
            "id": 139,
            "mutability": "mutable",
            "name": "indexToRegistrations",
            "nameLocation": "1116:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 1364,
            "src": "1073:63:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 138,
              "keyType": {
                "id": 136,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1082:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1073:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 137,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1093:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "aa6cb71d",
            "id": 141,
            "mutability": "mutable",
            "name": "registrationsCount",
            "nameLocation": "1185:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 1364,
            "src": "1142:61:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 140,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1142:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc954144",
            "id": 146,
            "mutability": "mutable",
            "name": "participations",
            "nameLocation": "1253:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1364,
            "src": "1210:57:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Participation_$113_storage_$",
              "typeString": "mapping(address => struct DistributorNative.Participation)"
            },
            "typeName": {
              "id": 145,
              "keyType": {
                "id": 142,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1219:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1210:34:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Participation_$113_storage_$",
                "typeString": "mapping(address => struct DistributorNative.Participation)"
              },
              "valueType": {
                "id": 144,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 143,
                  "name": "Participation",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 113,
                  "src": "1230:13:2"
                },
                "referencedDeclaration": 113,
                "src": "1230:13:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Participation_$113_storage_ptr",
                  "typeString": "struct DistributorNative.Participation"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "62b21fa1",
            "id": 150,
            "mutability": "mutable",
            "name": "addressToEvent",
            "nameLocation": "1316:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1364,
            "src": "1273:57:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 149,
              "keyType": {
                "id": 147,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1282:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1273:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 148,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "1293:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "98c32a7f",
            "id": 154,
            "mutability": "mutable",
            "name": "addressToWithdraw",
            "nameLocation": "1379:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 1364,
            "src": "1336:60:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 153,
              "keyType": {
                "id": 151,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1345:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1336:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 152,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1356:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3db5a524",
            "id": 156,
            "mutability": "mutable",
            "name": "vestingEndDate",
            "nameLocation": "1430:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 1364,
            "src": "1403:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 155,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1403:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1eeadfa8",
            "id": 158,
            "mutability": "mutable",
            "name": "vestingPrecision",
            "nameLocation": "1477:16:2",
            "nodeType": "VariableDeclaration",
            "scope": 1364,
            "src": "1450:43:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 157,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1450:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3c961fc2",
            "id": 160,
            "mutability": "mutable",
            "name": "vestingEventsCount",
            "nameLocation": "1526:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 1364,
            "src": "1499:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 159,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1499:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f1ef7ff2",
            "id": 163,
            "mutability": "mutable",
            "name": "vestingPortionsUnlockTime",
            "nameLocation": "1577:25:2",
            "nodeType": "VariableDeclaration",
            "scope": 1364,
            "src": "1550:52:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 161,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1550:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 162,
              "nodeType": "ArrayTypeName",
              "src": "1550:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "927f6aee",
            "id": 166,
            "mutability": "mutable",
            "name": "vestingPercentPerPortion",
            "nameLocation": "1635:24:2",
            "nodeType": "VariableDeclaration",
            "scope": 1364,
            "src": "1608:51:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 164,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1608:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 165,
              "nodeType": "ArrayTypeName",
              "src": "1608:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f851a440",
            "id": 168,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "1693:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1364,
            "src": "1666:32:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 167,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1666:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5ee58efc",
            "id": 171,
            "mutability": "mutable",
            "name": "distribution",
            "nameLocation": "1732:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 1364,
            "src": "1705:39:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Distribution_$101_storage",
              "typeString": "struct DistributorNative.Distribution"
            },
            "typeName": {
              "id": 170,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 169,
                "name": "Distribution",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 101,
                "src": "1705:12:2"
              },
              "referencedDeclaration": 101,
              "src": "1705:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Distribution_$101_storage_ptr",
                "typeString": "struct DistributorNative.Distribution"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1754d62d",
            "id": 174,
            "mutability": "mutable",
            "name": "registrationRound",
            "nameLocation": "1777:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 1364,
            "src": "1750:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_RegistrationRound_$120_storage",
              "typeString": "struct DistributorNative.RegistrationRound"
            },
            "typeName": {
              "id": 173,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 172,
                "name": "RegistrationRound",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 120,
                "src": "1750:17:2"
              },
              "referencedDeclaration": 120,
              "src": "1750:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_RegistrationRound_$120_storage_ptr",
                "typeString": "struct DistributorNative.RegistrationRound"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b1cde244",
            "id": 177,
            "mutability": "mutable",
            "name": "distributionRound",
            "nameLocation": "1827:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 1364,
            "src": "1800:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_DistributionRound_$125_storage",
              "typeString": "struct DistributorNative.DistributionRound"
            },
            "typeName": {
              "id": 176,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 175,
                "name": "DistributionRound",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 125,
                "src": "1800:17:2"
              },
              "referencedDeclaration": 125,
              "src": "1800:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_DistributionRound_$125_storage_ptr",
                "typeString": "struct DistributorNative.DistributionRound"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1c5f47ee",
            "id": 179,
            "mutability": "mutable",
            "name": "leftoverWithdrawn",
            "nameLocation": "1878:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 1364,
            "src": "1851:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 178,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1851:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "b198f199c43cc078ad46e5a5fabe03eba401f7417816c86af0bd2e7345c99506",
            "id": 185,
            "name": "Participated",
            "nameLocation": "1908:12:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1937:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1921:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 183,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1954:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "1946:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1946:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1920:44:2"
            },
            "src": "1902:63:2"
          },
          {
            "anonymous": false,
            "eventSelector": "6f3bf3fa84e4763a43b3d23f9d79be242d6d5c834941ff4c1111b67469e1150c",
            "id": 191,
            "name": "Registered",
            "nameLocation": "1976:10:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2003:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "1987:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1987:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2020:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "2012:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2012:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1986:44:2"
            },
            "src": "1970:61:2"
          },
          {
            "anonymous": false,
            "eventSelector": "3ed3ff891af065b7aecb80d2d3e0543afd07e2b38e36d9e98700feebf26482b3",
            "id": 195,
            "name": "MultipleRegistrationCompleted",
            "nameLocation": "2042:29:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2080:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 195,
                  "src": "2072:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2072:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2071:19:2"
            },
            "src": "2036:55:2"
          },
          {
            "anonymous": false,
            "eventSelector": "7d5e91551dc6f3038619d85da877b41440d669756a40eeb78b1c9df6c6a988d5",
            "id": 199,
            "name": "DistributionRoundSet",
            "nameLocation": "2102:20:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 197,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2131:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 199,
                  "src": "2123:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2122:19:2"
            },
            "src": "2096:46:2"
          },
          {
            "anonymous": false,
            "eventSelector": "95a21281108b566135ddaa849f46ac5edee2287699ce9443ac1490705cd63d77",
            "id": 203,
            "name": "RegistrationRoundSet",
            "nameLocation": "2153:20:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 201,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2182:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "2174:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2174:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2173:19:2"
            },
            "src": "2147:46:2"
          },
          {
            "anonymous": false,
            "eventSelector": "7069b20063a2c984d75a2165d1633fd0be67afe3680341d2fc5d0cce78c9ceea",
            "id": 207,
            "name": "RegistrationRoundStopped",
            "nameLocation": "2204:24:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 205,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2237:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 207,
                  "src": "2229:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 204,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2229:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2228:19:2"
            },
            "src": "2198:50:2"
          },
          {
            "anonymous": false,
            "eventSelector": "6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b",
            "id": 213,
            "name": "TokensWithdrawn",
            "nameLocation": "2259:15:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2291:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "2275:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2275:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 211,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2308:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "2300:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2300:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2274:41:2"
            },
            "src": "2253:63:2"
          },
          {
            "anonymous": false,
            "eventSelector": "1af3c14ce558c4a33618e1f36c8ea383fc552a672298056311fa66518719f6e0",
            "id": 217,
            "name": "VestingParametersSet",
            "nameLocation": "2327:20:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2356:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "2348:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2348:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2347:19:2"
            },
            "src": "2321:46:2"
          },
          {
            "anonymous": false,
            "eventSelector": "b470a061a328bedea790142ca3e477573b6337191c39704740003dc082e76ecf",
            "id": 221,
            "name": "AllocationsSet",
            "nameLocation": "2378:14:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2401:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "2393:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2393:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2392:19:2"
            },
            "src": "2372:40:2"
          },
          {
            "body": {
              "id": 230,
              "nodeType": "Block",
              "src": "2446:31:2",
              "statements": [
                {
                  "expression": {
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 226,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "2456:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 227,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "2464:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2456:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "2456:14:2"
                }
              ]
            },
            "id": 231,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "2438:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 231,
                  "src": "2430:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2430:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2429:16:2"
            },
            "returnParameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2446:0:2"
            },
            "scope": 1364,
            "src": "2418:59:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "2504:85:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 234,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2522:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2522:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 236,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "2536:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2522:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c6f77732061646d696e2061646472657373206f6e6c79",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2543:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b06d53b256da3ca32993bcc1dba7d24582af6e698bf24c5a501b561bd37c547",
                          "typeString": "literal_string \"Allows admin address only\""
                        },
                        "value": "Allows admin address only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b06d53b256da3ca32993bcc1dba7d24582af6e698bf24c5a501b561bd37c547",
                          "typeString": "literal_string \"Allows admin address only\""
                        }
                      ],
                      "id": 233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2514:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2514:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "2514:57:2"
                },
                {
                  "id": 241,
                  "nodeType": "PlaceholderStatement",
                  "src": "2581:1:2"
                }
              ]
            },
            "id": 243,
            "name": "onlyAdmin",
            "nameLocation": "2492:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2501:2:2"
            },
            "src": "2483:106:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "2628:111:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 246,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2646:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2646:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 248,
                            "name": "distribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "2660:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Distribution_$101_storage",
                              "typeString": "struct DistributorNative.Distribution storage ref"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 92,
                          "src": "2660:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2646:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c6c6f777320646973747269627574696f6e206f776e65722061646472657373206f6e6c79",
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2680:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03cfd2d6f58f6203da00d1b91a8b1e534b960babfc381f9ed35cff5143a31128",
                          "typeString": "literal_string \"Allows distribution owner address only\""
                        },
                        "value": "Allows distribution owner address only"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03cfd2d6f58f6203da00d1b91a8b1e534b960babfc381f9ed35cff5143a31128",
                          "typeString": "literal_string \"Allows distribution owner address only\""
                        }
                      ],
                      "id": 245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2638:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2638:83:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "2638:83:2"
                },
                {
                  "id": 254,
                  "nodeType": "PlaceholderStatement",
                  "src": "2731:1:2"
                }
              ]
            },
            "id": 256,
            "name": "onlyDistributionOwner",
            "nameLocation": "2604:21:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2625:2:2"
            },
            "src": "2595:144:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "2784:263:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 259,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2815:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2815:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "expression": {
                                "id": 261,
                                "name": "registrationRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 174,
                                "src": "2834:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RegistrationRound_$120_storage",
                                  "typeString": "struct DistributorNative.RegistrationRound storage ref"
                                }
                              },
                              "id": 262,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "startDate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 115,
                              "src": "2834:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2815:46:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 264,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2878:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2878:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "expression": {
                                "id": 266,
                                "name": "registrationRound",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 174,
                                "src": "2897:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RegistrationRound_$120_storage",
                                  "typeString": "struct DistributorNative.RegistrationRound storage ref"
                                }
                              },
                              "id": 267,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "endDate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 117,
                              "src": "2897:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2878:44:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2815:107:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2939:28:2",
                          "subExpression": {
                            "expression": {
                              "id": 270,
                              "name": "registrationRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 174,
                              "src": "2940:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RegistrationRound_$120_storage",
                                "typeString": "struct DistributorNative.RegistrationRound storage ref"
                              }
                            },
                            "id": 271,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isStopped",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 119,
                            "src": "2940:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2815:152:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526567697374726174696f6e20726f756e64206973206f766572206f72206e6f74207374617274656420796574",
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2981:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b19c2120075b9ada6e989a2e6b84efa079c0a0bb370018cdd45efd81259d87a",
                          "typeString": "literal_string \"Registration round is over or not started yet\""
                        },
                        "value": "Registration round is over or not started yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b19c2120075b9ada6e989a2e6b84efa079c0a0bb370018cdd45efd81259d87a",
                          "typeString": "literal_string \"Registration round is over or not started yet\""
                        }
                      ],
                      "id": 258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2794:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2794:235:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "2794:235:2"
                },
                {
                  "id": 277,
                  "nodeType": "PlaceholderStatement",
                  "src": "3039:1:2"
                }
              ]
            },
            "id": 279,
            "name": "onlyIfRegistrationIsNotOver",
            "nameLocation": "2754:27:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2781:2:2"
            },
            "src": "2745:302:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "3092:217:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 282,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3123:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3123:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 284,
                              "name": "distributionRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 177,
                              "src": "3142:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DistributionRound_$125_storage",
                                "typeString": "struct DistributorNative.DistributionRound storage ref"
                              }
                            },
                            "id": 285,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 122,
                            "src": "3142:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3123:46:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 287,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3185:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3185:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "id": 289,
                              "name": "distributionRound",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 177,
                              "src": "3204:17:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DistributionRound_$125_storage",
                                "typeString": "struct DistributorNative.DistributionRound storage ref"
                              }
                            },
                            "id": 290,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "endDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 124,
                            "src": "3204:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3185:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3123:106:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446973747269627574696f6e20726f756e64206973206f766572206f72206e6f74207374617274656420796574",
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3243:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54695ce4fc0c9f989aa506969a83b0662637c1f1a875f7980fb40003d30c8438",
                          "typeString": "literal_string \"Distribution round is over or not started yet\""
                        },
                        "value": "Distribution round is over or not started yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54695ce4fc0c9f989aa506969a83b0662637c1f1a875f7980fb40003d30c8438",
                          "typeString": "literal_string \"Distribution round is over or not started yet\""
                        }
                      ],
                      "id": 281,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3102:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3102:189:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "3102:189:2"
                },
                {
                  "id": 296,
                  "nodeType": "PlaceholderStatement",
                  "src": "3301:1:2"
                }
              ]
            },
            "id": 298,
            "name": "onlyIfDistributionIsNotOver",
            "nameLocation": "3062:27:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3089:2:2"
            },
            "src": "3053:256:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "3370:42:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 304,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3394:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3394:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 303,
                      "name": "_registerUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1363,
                      "src": "3380:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3380:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "3380:25:2"
                }
              ]
            },
            "functionSelector": "1aa3a008",
            "id": 309,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 301,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 300,
                  "name": "onlyIfRegistrationIsNotOver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 279,
                  "src": "3342:27:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3342:27:2"
              }
            ],
            "name": "register",
            "nameLocation": "3324:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3332:2:2"
            },
            "returnParameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3370:0:2"
            },
            "scope": 1364,
            "src": "3315:97:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 322,
              "nodeType": "Block",
              "src": "3503:40:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 319,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "3527:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 318,
                      "name": "_registerUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1363,
                      "src": "3513:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3513:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "3513:23:2"
                }
              ]
            },
            "functionSelector": "2199d5cd",
            "id": 323,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 314,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 313,
                  "name": "onlyIfRegistrationIsNotOver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 279,
                  "src": "3465:27:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3465:27:2"
              },
              {
                "id": 316,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 315,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "3493:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3493:9:2"
              }
            ],
            "name": "registerUser",
            "nameLocation": "3427:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3448:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "3440:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3440:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3439:18:2"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3503:0:2"
            },
            "scope": 1364,
            "src": "3418:125:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 374,
              "nodeType": "Block",
              "src": "3654:354:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 334,
                            "name": "_addresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 326,
                            "src": "3672:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3672:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3692:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3672:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520616464726573736573206172726179206d75737420636f6e7461696e206f6e6520656c656d656e74206174206c65617374",
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3695:55:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e23769f3895a8403a4135f625ca42de952d37c08508bd64a4a34e60a58c1d2c",
                          "typeString": "literal_string \"The addresses array must contain one element at least\""
                        },
                        "value": "The addresses array must contain one element at least"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e23769f3895a8403a4135f625ca42de952d37c08508bd64a4a34e60a58c1d2c",
                          "typeString": "literal_string \"The addresses array must contain one element at least\""
                        }
                      ],
                      "id": 333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3664:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3664:87:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 340,
                  "nodeType": "ExpressionStatement",
                  "src": "3664:87:2"
                },
                {
                  "body": {
                    "id": 367,
                    "nodeType": "Block",
                    "src": "3807:133:2",
                    "statements": [
                      {
                        "condition": {
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3825:42:2",
                          "subExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 352,
                                "name": "registrations",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 135,
                                "src": "3826:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Registration_$108_storage_$",
                                  "typeString": "mapping(address => struct DistributorNative.Registration storage ref)"
                                }
                              },
                              "id": 356,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 353,
                                  "name": "_addresses",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 326,
                                  "src": "3840:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 355,
                                "indexExpression": {
                                  "id": 354,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 342,
                                  "src": "3851:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3840:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3826:28:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Registration_$108_storage",
                                "typeString": "struct DistributorNative.Registration storage ref"
                              }
                            },
                            "id": 357,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isRegistered",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 107,
                            "src": "3826:41:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 366,
                        "nodeType": "IfStatement",
                        "src": "3821:109:2",
                        "trueBody": {
                          "id": 365,
                          "nodeType": "Block",
                          "src": "3869:61:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 360,
                                      "name": "_addresses",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 326,
                                      "src": "3901:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 362,
                                    "indexExpression": {
                                      "id": 361,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 342,
                                      "src": "3912:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3901:13:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 359,
                                  "name": "_registerUser",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1363,
                                  "src": "3887:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 363,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3887:28:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 364,
                              "nodeType": "ExpressionStatement",
                              "src": "3887:28:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 345,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 342,
                      "src": "3779:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 346,
                        "name": "_addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "3783:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3783:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3779:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 368,
                  "initializationExpression": {
                    "assignments": [
                      342
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 342,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3772:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 368,
                        "src": "3767:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 341,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3767:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 344,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3776:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3767:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3802:3:2",
                      "subExpression": {
                        "id": 349,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 342,
                        "src": "3802:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 351,
                    "nodeType": "ExpressionStatement",
                    "src": "3802:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3762:178:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 370,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3985:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3985:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 369,
                      "name": "MultipleRegistrationCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 195,
                      "src": "3955:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3955:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 373,
                  "nodeType": "EmitStatement",
                  "src": "3950:51:2"
                }
              ]
            },
            "functionSelector": "c44c209a",
            "id": 375,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 329,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 328,
                  "name": "onlyIfRegistrationIsNotOver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 279,
                  "src": "3616:27:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3616:27:2"
              },
              {
                "id": 331,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 330,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "3644:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3644:9:2"
              }
            ],
            "name": "registerMultipleUsers",
            "nameLocation": "3558:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 326,
                  "mutability": "mutable",
                  "name": "_addresses",
                  "nameLocation": "3597:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "3580:27:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 324,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3580:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 325,
                    "nodeType": "ArrayTypeName",
                    "src": "3580:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3579:29:2"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3654:0:2"
            },
            "scope": 1364,
            "src": "3549:459:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 408,
              "nodeType": "Block",
              "src": "4072:241:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4090:42:2",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 381,
                              "name": "participations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 146,
                              "src": "4091:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Participation_$113_storage_$",
                                "typeString": "mapping(address => struct DistributorNative.Participation storage ref)"
                              }
                            },
                            "id": 384,
                            "indexExpression": {
                              "expression": {
                                "id": 382,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4106:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4106:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4091:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Participation_$113_storage",
                              "typeString": "struct DistributorNative.Participation storage ref"
                            }
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isParticipated",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 112,
                          "src": "4091:41:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4164647265737320616c726561647920706172746963697061746564",
                        "id": 387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4134:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f79536feeb93b4dd1195382700429f6e23ab7f0f5e3b3f70b403ea6c8ba3756",
                          "typeString": "literal_string \"Address already participated\""
                        },
                        "value": "Address already participated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9f79536feeb93b4dd1195382700429f6e23ab7f0f5e3b3f70b403ea6c8ba3756",
                          "typeString": "literal_string \"Address already participated\""
                        }
                      ],
                      "id": 380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4082:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4082:83:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 389,
                  "nodeType": "ExpressionStatement",
                  "src": "4082:83:2"
                },
                {
                  "expression": {
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 390,
                        "name": "participations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "4184:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Participation_$113_storage_$",
                          "typeString": "mapping(address => struct DistributorNative.Participation storage ref)"
                        }
                      },
                      "id": 393,
                      "indexExpression": {
                        "expression": {
                          "id": 391,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4199:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4199:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4184:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Participation_$113_storage",
                        "typeString": "struct DistributorNative.Participation storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 395,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4227:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4227:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4244:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 394,
                        "name": "Participation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 113,
                        "src": "4213:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Participation_$113_storage_ptr_$",
                          "typeString": "type(struct DistributorNative.Participation storage pointer)"
                        }
                      },
                      "id": 398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4213:36:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Participation_$113_memory_ptr",
                        "typeString": "struct DistributorNative.Participation memory"
                      }
                    },
                    "src": "4184:65:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Participation_$113_storage",
                      "typeString": "struct DistributorNative.Participation storage ref"
                    }
                  },
                  "id": 400,
                  "nodeType": "ExpressionStatement",
                  "src": "4184:65:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 402,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4278:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4278:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 404,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4290:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4290:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 401,
                      "name": "Participated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "4265:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4265:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 407,
                  "nodeType": "EmitStatement",
                  "src": "4260:46:2"
                }
              ]
            },
            "functionSelector": "d11711a2",
            "id": 409,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 378,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 377,
                  "name": "onlyIfDistributionIsNotOver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 298,
                  "src": "4044:27:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4044:27:2"
              }
            ],
            "name": "participate",
            "nameLocation": "4023:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4034:2:2"
            },
            "returnParameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4072:0:2"
            },
            "scope": 1364,
            "src": "4014:299:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 563,
              "nodeType": "Block",
              "src": "4346:1547:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 413,
                              "name": "vestingPercentPerPortion",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "4377:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4377:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4411:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4377:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 417,
                              "name": "vestingPortionsUnlockTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "4428:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4428:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4463:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4428:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4377:87:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e6720706172616d657465727320617265206e6f7420736574",
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4478:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0444c17e7e7168bcd3d6b7cfc87b87748ed6ab9bcb37e3fdd2f31b27f2d104c",
                          "typeString": "literal_string \"Vesting parameters are not set\""
                        },
                        "value": "Vesting parameters are not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0444c17e7e7168bcd3d6b7cfc87b87748ed6ab9bcb37e3fdd2f31b27f2d104c",
                          "typeString": "literal_string \"Vesting parameters are not set\""
                        }
                      ],
                      "id": 412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4356:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4356:164:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "4356:164:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 426,
                            "name": "registrations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "4538:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Registration_$108_storage_$",
                              "typeString": "mapping(address => struct DistributorNative.Registration storage ref)"
                            }
                          },
                          "id": 429,
                          "indexExpression": {
                            "expression": {
                              "id": 427,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4552:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4552:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4538:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Registration_$108_storage",
                            "typeString": "struct DistributorNative.Registration storage ref"
                          }
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isRegistered",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 107,
                        "src": "4538:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206973206e6f742072656769737465726564",
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4578:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_683324e8a9742a40e77d771cab40076d51d328136ac839e94a043617e3e7487e",
                          "typeString": "literal_string \"Address is not registered\""
                        },
                        "value": "Address is not registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_683324e8a9742a40e77d771cab40076d51d328136ac839e94a043617e3e7487e",
                          "typeString": "literal_string \"Address is not registered\""
                        }
                      ],
                      "id": 425,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4530:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4530:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 433,
                  "nodeType": "ExpressionStatement",
                  "src": "4530:76:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 435,
                            "name": "participations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "4624:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Participation_$113_storage_$",
                              "typeString": "mapping(address => struct DistributorNative.Participation storage ref)"
                            }
                          },
                          "id": 438,
                          "indexExpression": {
                            "expression": {
                              "id": 436,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4639:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4639:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4624:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Participation_$113_storage",
                            "typeString": "struct DistributorNative.Participation storage ref"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isParticipated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 112,
                        "src": "4624:41:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206973206e6f742070617274696369706174656420696e20646973747269627574696f6e",
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4667:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cca3bbfb5900c5e061573a1d981c9d0547a47fc81812387e42acfcc8aae9e6f6",
                          "typeString": "literal_string \"Address is not participated in distribution\""
                        },
                        "value": "Address is not participated in distribution"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cca3bbfb5900c5e061573a1d981c9d0547a47fc81812387e42acfcc8aae9e6f6",
                          "typeString": "literal_string \"Address is not participated in distribution\""
                        }
                      ],
                      "id": 434,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4616:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4616:97:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 442,
                  "nodeType": "ExpressionStatement",
                  "src": "4616:97:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4731:30:2",
                        "subExpression": {
                          "baseExpression": {
                            "id": 444,
                            "name": "addressToWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 154,
                            "src": "4732:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 447,
                          "indexExpression": {
                            "expression": {
                              "id": 445,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4750:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4750:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4732:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573732068617320657865637574656420776974686472617720616c7265616479",
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4763:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98db7e4edddeb04bfc1f3d88c68cc6a4f069b36d25f84a2e3cf4e630df85638c",
                          "typeString": "literal_string \"Address has executed withdraw already\""
                        },
                        "value": "Address has executed withdraw already"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98db7e4edddeb04bfc1f3d88c68cc6a4f069b36d25f84a2e3cf4e630df85638c",
                          "typeString": "literal_string \"Address has executed withdraw already\""
                        }
                      ],
                      "id": 443,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4723:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4723:80:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "4723:80:2"
                },
                {
                  "assignments": [
                    453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 453,
                      "mutability": "mutable",
                      "name": "totalToWithdraw",
                      "nameLocation": "4822:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 563,
                      "src": "4814:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 452,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4814:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 455,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4840:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4814:27:2"
                },
                {
                  "assignments": [
                    458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 458,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "4872:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 563,
                      "src": "4851:33:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Registration_$108_storage_ptr",
                        "typeString": "struct DistributorNative.Registration"
                      },
                      "typeName": {
                        "id": 457,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 456,
                          "name": "Registration",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 108,
                          "src": "4851:12:2"
                        },
                        "referencedDeclaration": 108,
                        "src": "4851:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Registration_$108_storage_ptr",
                          "typeString": "struct DistributorNative.Registration"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 463,
                  "initialValue": {
                    "baseExpression": {
                      "id": 459,
                      "name": "registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "4887:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Registration_$108_storage_$",
                        "typeString": "mapping(address => struct DistributorNative.Registration storage ref)"
                      }
                    },
                    "id": 462,
                    "indexExpression": {
                      "expression": {
                        "id": 460,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "4901:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4901:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4887:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Registration_$108_storage",
                      "typeString": "struct DistributorNative.Registration storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4851:61:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 465,
                            "name": "registration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "4931:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Registration_$108_storage_ptr",
                              "typeString": "struct DistributorNative.Registration storage pointer"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "distributionAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 105,
                          "src": "4931:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4965:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4931:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f7468696e6720746f207769746864726177",
                        "id": 469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4968:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8722be8c02476b3c04ad274d7775873fe1475e2412f1a0723e70a682c0d07846",
                          "typeString": "literal_string \"There is nothing to withdraw\""
                        },
                        "value": "There is nothing to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8722be8c02476b3c04ad274d7775873fe1475e2412f1a0723e70a682c0d07846",
                          "typeString": "literal_string \"There is nothing to withdraw\""
                        }
                      ],
                      "id": 464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4923:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4923:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "4923:76:2"
                },
                {
                  "body": {
                    "id": 511,
                    "nodeType": "Block",
                    "src": "5070:363:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 483,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5088:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 484,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5088:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 485,
                              "name": "vestingPortionsUnlockTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "5107:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 487,
                            "indexExpression": {
                              "id": 486,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 473,
                              "src": "5133:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5107:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5088:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 510,
                        "nodeType": "IfStatement",
                        "src": "5084:339:2",
                        "trueBody": {
                          "id": 509,
                          "nodeType": "Block",
                          "src": "5137:286:2",
                          "statements": [
                            {
                              "assignments": [
                                490
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 490,
                                  "mutability": "mutable",
                                  "name": "amountWithdrawing",
                                  "nameLocation": "5164:17:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 509,
                                  "src": "5156:25:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 489,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5156:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 501,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 499,
                                    "name": "vestingPrecision",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 158,
                                    "src": "5316:16:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 494,
                                          "name": "vestingPercentPerPortion",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 166,
                                          "src": "5262:24:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                            "typeString": "uint256[] storage ref"
                                          }
                                        },
                                        "id": 496,
                                        "indexExpression": {
                                          "id": 495,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 473,
                                          "src": "5287:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "5262:27:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 491,
                                          "name": "registration",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 458,
                                          "src": "5184:12:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Registration_$108_storage_ptr",
                                            "typeString": "struct DistributorNative.Registration storage pointer"
                                          }
                                        },
                                        "id": 492,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "distributionAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 105,
                                        "src": "5184:52:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 493,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1570,
                                      "src": "5184:77:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 497,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5184:106:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 498,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1585,
                                  "src": "5184:131:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 500,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5184:149:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5156:177:2"
                            },
                            {
                              "expression": {
                                "id": 507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 502,
                                  "name": "totalToWithdraw",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 453,
                                  "src": "5352:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 505,
                                      "name": "amountWithdrawing",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 490,
                                      "src": "5390:17:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 503,
                                      "name": "totalToWithdraw",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 453,
                                      "src": "5370:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 504,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1540,
                                    "src": "5370:19:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 506,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5370:38:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5352:56:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 508,
                              "nodeType": "ExpressionStatement",
                              "src": "5352:56:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 476,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 473,
                      "src": "5027:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 477,
                        "name": "vestingPortionsUnlockTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "5031:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5031:32:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5027:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 512,
                  "initializationExpression": {
                    "assignments": [
                      473
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 473,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5020:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 512,
                        "src": "5015:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 472,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5015:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 475,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5024:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5015:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5065:3:2",
                      "subExpression": {
                        "id": 480,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 473,
                        "src": "5065:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 482,
                    "nodeType": "ExpressionStatement",
                    "src": "5065:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "5010:423:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 514,
                          "name": "totalToWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 453,
                          "src": "5451:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5469:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5451:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f7468696e6720746f20776964746864726177",
                        "id": 517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5472:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_478e7c19e57e55a2842a271f1a13ad5fef5df84fc2c91f76c50d944bf594c083",
                          "typeString": "literal_string \"There is nothing to widthdraw\""
                        },
                        "value": "There is nothing to widthdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_478e7c19e57e55a2842a271f1a13ad5fef5df84fc2c91f76c50d944bf594c083",
                          "typeString": "literal_string \"There is nothing to widthdraw\""
                        }
                      ],
                      "id": 513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5443:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5443:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "5443:61:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 521,
                          "name": "totalToWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 453,
                          "src": "5522:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 524,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5549:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DistributorNative_$1364",
                                  "typeString": "contract DistributorNative"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DistributorNative_$1364",
                                  "typeString": "contract DistributorNative"
                                }
                              ],
                              "id": 523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5541:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 522,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5541:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5541:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "5541:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5522:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f207375636820616d6f756e7420746f20776964746864726177",
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5564:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f71433d6eee7707d20e27562331c071254e48d1db58c8528f5747a41e5f415a",
                          "typeString": "literal_string \"There is no such amount to widthdraw\""
                        },
                        "value": "There is no such amount to widthdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f71433d6eee7707d20e27562331c071254e48d1db58c8528f5747a41e5f415a",
                          "typeString": "literal_string \"There is no such amount to widthdraw\""
                        }
                      ],
                      "id": 520,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5514:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5514:89:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "5514:89:2"
                },
                {
                  "expression": {
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 531,
                        "name": "addressToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "5622:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 534,
                      "indexExpression": {
                        "expression": {
                          "id": 532,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5640:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5640:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5622:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5654:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5622:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "5622:36:2"
                },
                {
                  "expression": {
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 538,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "5668:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Distribution_$101_storage",
                          "typeString": "struct DistributorNative.Distribution storage ref"
                        }
                      },
                      "id": 540,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalTokensDistributed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 100,
                      "src": "5668:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 544,
                          "name": "totalToWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 453,
                          "src": "5746:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 541,
                            "name": "distribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "5706:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Distribution_$101_storage",
                              "typeString": "struct DistributorNative.Distribution storage ref"
                            }
                          },
                          "id": 542,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalTokensDistributed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 100,
                          "src": "5706:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1540,
                        "src": "5706:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5706:56:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5668:94:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "5668:94:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 554,
                        "name": "totalToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 453,
                        "src": "5802:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 550,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5781:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5781:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5773:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 548,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5773:8:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5773:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5773:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5773:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 556,
                  "nodeType": "ExpressionStatement",
                  "src": "5773:45:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 558,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5858:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5858:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 560,
                        "name": "totalToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 453,
                        "src": "5870:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 557,
                      "name": "TokensWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "5842:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5842:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 562,
                  "nodeType": "EmitStatement",
                  "src": "5837:49:2"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 564,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "4328:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4336:2:2"
            },
            "returnParameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4346:0:2"
            },
            "scope": 1364,
            "src": "4319:1574:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 702,
              "nodeType": "Block",
              "src": "5931:1280:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 568,
                          "name": "vestingEventsCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 160,
                          "src": "5949:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5970:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5949:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e6720706172616d657465727320617265206e6f7420736574",
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5973:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0444c17e7e7168bcd3d6b7cfc87b87748ed6ab9bcb37e3fdd2f31b27f2d104c",
                          "typeString": "literal_string \"Vesting parameters are not set\""
                        },
                        "value": "Vesting parameters are not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0444c17e7e7168bcd3d6b7cfc87b87748ed6ab9bcb37e3fdd2f31b27f2d104c",
                          "typeString": "literal_string \"Vesting parameters are not set\""
                        }
                      ],
                      "id": 567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5941:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5941:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 573,
                  "nodeType": "ExpressionStatement",
                  "src": "5941:65:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6024:30:2",
                        "subExpression": {
                          "baseExpression": {
                            "id": 575,
                            "name": "addressToWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 154,
                            "src": "6025:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 578,
                          "indexExpression": {
                            "expression": {
                              "id": 576,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6043:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 577,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6043:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6025:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4164647265737320616c7265616479207769647468647261776e",
                        "id": 580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6056:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca8917725a6df42e4dc0bb30da6fee143af999467d5fb1ac49377c20600fac84",
                          "typeString": "literal_string \"Address already widthdrawn\""
                        },
                        "value": "Address already widthdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca8917725a6df42e4dc0bb30da6fee143af999467d5fb1ac49377c20600fac84",
                          "typeString": "literal_string \"Address already widthdrawn\""
                        }
                      ],
                      "id": 574,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6016:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6016:69:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "6016:69:2"
                },
                {
                  "assignments": [
                    584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 584,
                      "mutability": "mutable",
                      "name": "totalToWithdraw",
                      "nameLocation": "6104:15:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 702,
                      "src": "6096:23:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 583,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6096:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 586,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6122:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6096:27:2"
                },
                {
                  "assignments": [
                    589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 589,
                      "mutability": "mutable",
                      "name": "registration",
                      "nameLocation": "6154:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 702,
                      "src": "6133:33:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Registration_$108_storage_ptr",
                        "typeString": "struct DistributorNative.Registration"
                      },
                      "typeName": {
                        "id": 588,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 587,
                          "name": "Registration",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 108,
                          "src": "6133:12:2"
                        },
                        "referencedDeclaration": 108,
                        "src": "6133:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Registration_$108_storage_ptr",
                          "typeString": "struct DistributorNative.Registration"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 594,
                  "initialValue": {
                    "baseExpression": {
                      "id": 590,
                      "name": "registrations",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "6169:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Registration_$108_storage_$",
                        "typeString": "mapping(address => struct DistributorNative.Registration storage ref)"
                      }
                    },
                    "id": 593,
                    "indexExpression": {
                      "expression": {
                        "id": 591,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6183:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6183:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6169:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Registration_$108_storage",
                      "typeString": "struct DistributorNative.Registration storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6133:61:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 596,
                            "name": "registration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 589,
                            "src": "6213:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Registration_$108_storage_ptr",
                              "typeString": "struct DistributorNative.Registration storage pointer"
                            }
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "distributionAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 105,
                          "src": "6213:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6247:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6213:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f7468696e6720746f207769746864726177",
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6250:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8722be8c02476b3c04ad274d7775873fe1475e2412f1a0723e70a682c0d07846",
                          "typeString": "literal_string \"There is nothing to withdraw\""
                        },
                        "value": "There is nothing to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8722be8c02476b3c04ad274d7775873fe1475e2412f1a0723e70a682c0d07846",
                          "typeString": "literal_string \"There is nothing to withdraw\""
                        }
                      ],
                      "id": 595,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6205:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6205:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "6205:76:2"
                },
                {
                  "assignments": [
                    604
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 604,
                      "mutability": "mutable",
                      "name": "addressEvent",
                      "nameLocation": "6305:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 702,
                      "src": "6300:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 603,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6300:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 609,
                  "initialValue": {
                    "baseExpression": {
                      "id": 605,
                      "name": "addressToEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "6320:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 608,
                    "indexExpression": {
                      "expression": {
                        "id": 606,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6335:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6335:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6320:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6300:46:2"
                },
                {
                  "body": {
                    "id": 650,
                    "nodeType": "Block",
                    "src": "6396:363:2",
                    "statements": [
                      {
                        "assignments": [
                          621
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 621,
                            "mutability": "mutable",
                            "name": "amountWithdrawing",
                            "nameLocation": "6418:17:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 650,
                            "src": "6410:25:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 620,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6410:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 632,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 630,
                              "name": "vestingPrecision",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 158,
                              "src": "6558:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 625,
                                    "name": "vestingPercentPerPortion",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 166,
                                    "src": "6508:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 627,
                                  "indexExpression": {
                                    "id": 626,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 611,
                                    "src": "6533:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6508:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 622,
                                    "name": "registration",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 589,
                                    "src": "6438:12:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Registration_$108_storage_ptr",
                                      "typeString": "struct DistributorNative.Registration storage pointer"
                                    }
                                  },
                                  "id": 623,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "distributionAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 105,
                                  "src": "6438:48:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 624,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1570,
                                "src": "6438:69:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6438:98:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1585,
                            "src": "6438:119:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6438:137:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6410:165:2"
                      },
                      {
                        "expression": {
                          "id": 641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 633,
                              "name": "registration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 589,
                              "src": "6590:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Registration_$108_storage_ptr",
                                "typeString": "struct DistributorNative.Registration storage pointer"
                              }
                            },
                            "id": 635,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "distributionAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 105,
                            "src": "6590:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 639,
                                "name": "amountWithdrawing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 621,
                                "src": "6660:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 636,
                                  "name": "registration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 589,
                                  "src": "6624:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Registration_$108_storage_ptr",
                                    "typeString": "struct DistributorNative.Registration storage pointer"
                                  }
                                },
                                "id": 637,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "distributionAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 105,
                                "src": "6624:31:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1555,
                              "src": "6624:35:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6624:54:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6590:88:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 642,
                        "nodeType": "ExpressionStatement",
                        "src": "6590:88:2"
                      },
                      {
                        "expression": {
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 643,
                            "name": "totalToWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "6692:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 646,
                                "name": "amountWithdrawing",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 621,
                                "src": "6730:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 644,
                                "name": "totalToWithdraw",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 584,
                                "src": "6710:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1540,
                              "src": "6710:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6710:38:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6692:56:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 649,
                        "nodeType": "ExpressionStatement",
                        "src": "6692:56:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 614,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 611,
                      "src": "6373:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 615,
                      "name": "addressEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 604,
                      "src": "6377:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6373:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 651,
                  "initializationExpression": {
                    "assignments": [
                      611
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6366:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 651,
                        "src": "6361:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6361:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 613,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6370:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6361:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6391:3:2",
                      "subExpression": {
                        "id": 617,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 611,
                        "src": "6391:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 619,
                    "nodeType": "ExpressionStatement",
                    "src": "6391:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "6356:403:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 653,
                          "name": "totalToWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "6777:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6795:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6777:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f7468696e6720746f20776964746864726177",
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6798:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_478e7c19e57e55a2842a271f1a13ad5fef5df84fc2c91f76c50d944bf594c083",
                          "typeString": "literal_string \"There is nothing to widthdraw\""
                        },
                        "value": "There is nothing to widthdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_478e7c19e57e55a2842a271f1a13ad5fef5df84fc2c91f76c50d944bf594c083",
                          "typeString": "literal_string \"There is nothing to widthdraw\""
                        }
                      ],
                      "id": 652,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6769:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6769:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "6769:61:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 660,
                          "name": "totalToWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "6848:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 663,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6875:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DistributorNative_$1364",
                                  "typeString": "contract DistributorNative"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_DistributorNative_$1364",
                                  "typeString": "contract DistributorNative"
                                }
                              ],
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6867:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 661,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6867:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6867:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "6867:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6848:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f207375636820616d6f756e7420746f20776964746864726177",
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6890:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f71433d6eee7707d20e27562331c071254e48d1db58c8528f5747a41e5f415a",
                          "typeString": "literal_string \"There is no such amount to widthdraw\""
                        },
                        "value": "There is no such amount to widthdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f71433d6eee7707d20e27562331c071254e48d1db58c8528f5747a41e5f415a",
                          "typeString": "literal_string \"There is no such amount to widthdraw\""
                        }
                      ],
                      "id": 659,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6840:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6840:89:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "6840:89:2"
                },
                {
                  "expression": {
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 670,
                        "name": "addressToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "6940:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 673,
                      "indexExpression": {
                        "expression": {
                          "id": 671,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6958:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6958:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6940:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6972:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6940:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 676,
                  "nodeType": "ExpressionStatement",
                  "src": "6940:36:2"
                },
                {
                  "expression": {
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 677,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "6986:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Distribution_$101_storage",
                          "typeString": "struct DistributorNative.Distribution storage ref"
                        }
                      },
                      "id": 679,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalTokensDistributed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 100,
                      "src": "6986:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 683,
                          "name": "totalToWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "7064:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 680,
                            "name": "distribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "7024:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Distribution_$101_storage",
                              "typeString": "struct DistributorNative.Distribution storage ref"
                            }
                          },
                          "id": 681,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalTokensDistributed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 100,
                          "src": "7024:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1540,
                        "src": "7024:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7024:56:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6986:94:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 686,
                  "nodeType": "ExpressionStatement",
                  "src": "6986:94:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 693,
                        "name": "totalToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "7120:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 689,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7099:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7099:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7091:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 687,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7091:8:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7091:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "7091:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7091:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "7091:45:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 697,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7176:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7176:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 699,
                        "name": "totalToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "7188:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 696,
                      "name": "TokensWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "7160:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7160:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "EmitStatement",
                  "src": "7155:49:2"
                }
              ]
            },
            "functionSelector": "9bdeb335",
            "id": 703,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawEvent",
            "nameLocation": "5908:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5921:2:2"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5931:0:2"
            },
            "scope": 1364,
            "src": "5899:1312:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 776,
              "nodeType": "Block",
              "src": "7337:571:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 714,
                          "name": "_eventsCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 705,
                          "src": "7355:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 715,
                            "name": "_percents",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "7371:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7371:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7355:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4576656e747320636f756c64206d75737420626520657175616c207769746820506572636570742050657220506f7274696f6e206c656e677468",
                        "id": 718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7389:60:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a196bf0d372aaf0489e0eba7b6f07521b3f823a480dbeb40545f887bf21a61db",
                          "typeString": "literal_string \"Events could must be equal with Percept Per Portion length\""
                        },
                        "value": "Events could must be equal with Percept Per Portion length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a196bf0d372aaf0489e0eba7b6f07521b3f823a480dbeb40545f887bf21a61db",
                          "typeString": "literal_string \"Events could must be equal with Percept Per Portion length\""
                        }
                      ],
                      "id": 713,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7347:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7347:103:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "7347:103:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 722,
                          "name": "distribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "7468:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Distribution_$101_storage",
                            "typeString": "struct DistributorNative.Distribution storage ref"
                          }
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isCreated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94,
                        "src": "7468:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446973747269627574696f6e206973206e6f742063726561746564",
                        "id": 724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7492:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_167bcb7f48d0e2c56172622a726645d7e96b3527bed84fbc2f0ea6500678d82f",
                          "typeString": "literal_string \"Distribution is not created\""
                        },
                        "value": "Distribution is not created"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_167bcb7f48d0e2c56172622a726645d7e96b3527bed84fbc2f0ea6500678d82f",
                          "typeString": "literal_string \"Distribution is not created\""
                        }
                      ],
                      "id": 721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7460:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7460:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "7460:62:2"
                },
                {
                  "expression": {
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 727,
                      "name": "vestingEventsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 160,
                      "src": "7533:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 728,
                      "name": "_eventsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 705,
                      "src": "7554:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7533:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 730,
                  "nodeType": "ExpressionStatement",
                  "src": "7533:33:2"
                },
                {
                  "assignments": [
                    732
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 732,
                      "mutability": "mutable",
                      "name": "precision",
                      "nameLocation": "7585:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 776,
                      "src": "7577:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 731,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7577:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 734,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7597:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7577:21:2"
                },
                {
                  "body": {
                    "id": 762,
                    "nodeType": "Block",
                    "src": "7651:121:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 748,
                                "name": "_percents",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 708,
                                "src": "7695:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 750,
                              "indexExpression": {
                                "id": 749,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 736,
                                "src": "7705:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7695:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 745,
                              "name": "vestingPercentPerPortion",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "7665:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "7665:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7665:43:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 752,
                        "nodeType": "ExpressionStatement",
                        "src": "7665:43:2"
                      },
                      {
                        "expression": {
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 753,
                            "name": "precision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 732,
                            "src": "7722:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 756,
                                  "name": "_percents",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 708,
                                  "src": "7748:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 758,
                                "indexExpression": {
                                  "id": 757,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 736,
                                  "src": "7758:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7748:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 754,
                                "name": "precision",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 732,
                                "src": "7734:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1540,
                              "src": "7734:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7734:27:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7722:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 761,
                        "nodeType": "ExpressionStatement",
                        "src": "7722:39:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 739,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 736,
                      "src": "7628:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 740,
                      "name": "_eventsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 705,
                      "src": "7632:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7628:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 763,
                  "initializationExpression": {
                    "assignments": [
                      736
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 736,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7621:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 763,
                        "src": "7613:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 735,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7613:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 738,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7625:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7613:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7646:3:2",
                      "subExpression": {
                        "id": 742,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "7646:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 744,
                    "nodeType": "ExpressionStatement",
                    "src": "7646:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "7608:164:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 765,
                          "name": "vestingPrecision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 158,
                          "src": "7790:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 766,
                          "name": "precision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 732,
                          "src": "7810:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7790:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "507265636973696f6e2070657263656e7473206973737565",
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7821:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c10394c7dd6ffd8b0d09c7b097bb96bf4cea12a26ad8d8642e2c0124705fc1a2",
                          "typeString": "literal_string \"Precision percents issue\""
                        },
                        "value": "Precision percents issue"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c10394c7dd6ffd8b0d09c7b097bb96bf4cea12a26ad8d8642e2c0124705fc1a2",
                          "typeString": "literal_string \"Precision percents issue\""
                        }
                      ],
                      "id": 764,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7782:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7782:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "7782:66:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 772,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7885:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "7885:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 771,
                      "name": "VestingParametersSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "7864:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7864:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 775,
                  "nodeType": "EmitStatement",
                  "src": "7859:42:2"
                }
              ]
            },
            "functionSelector": "d64f6cb6",
            "id": 777,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 711,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 710,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "7327:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "7327:9:2"
              }
            ],
            "name": "setEventVestingParams",
            "nameLocation": "7226:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 705,
                  "mutability": "mutable",
                  "name": "_eventsCount",
                  "nameLocation": "7265:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "7257:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7257:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 708,
                  "mutability": "mutable",
                  "name": "_percents",
                  "nameLocation": "7304:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 777,
                  "src": "7287:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 706,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7287:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 707,
                    "nodeType": "ArrayTypeName",
                    "src": "7287:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7247:72:2"
            },
            "returnParameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7337:0:2"
            },
            "scope": 1364,
            "src": "7217:691:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 898,
              "nodeType": "Block",
              "src": "8041:1076:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 789,
                              "name": "vestingPercentPerPortion",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "8072:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8072:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8107:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8072:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 793,
                              "name": "vestingPortionsUnlockTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "8124:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 794,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8124:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8160:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8124:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8072:89:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e6720706172616d657465727320616c726561647920736574",
                        "id": 798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8175:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9bee3670ca428868f54eee6ae44e2b7bacf303edabbc00140ea9c52029d9802",
                          "typeString": "literal_string \"Vesting parameters already set\""
                        },
                        "value": "Vesting parameters already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9bee3670ca428868f54eee6ae44e2b7bacf303edabbc00140ea9c52029d9802",
                          "typeString": "literal_string \"Vesting parameters already set\""
                        }
                      ],
                      "id": 788,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8051:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8051:166:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "8051:166:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 802,
                            "name": "_unlockingTimes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 780,
                            "src": "8235:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8235:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 804,
                            "name": "_percents",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 783,
                            "src": "8261:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8261:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8235:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e6c6f636b696e672054696d6573206c656e677468206d75737420626520657175616c20776974682050657263656e742050657220506f7274696f6e206c656e677468",
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8279:70:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62f9ba2f1997d78029b3b490ff328eda5fbf189bd077191e4359443b9dec09de",
                          "typeString": "literal_string \"Unlocking Times length must be equal with Percent Per Portion length\""
                        },
                        "value": "Unlocking Times length must be equal with Percent Per Portion length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62f9ba2f1997d78029b3b490ff328eda5fbf189bd077191e4359443b9dec09de",
                          "typeString": "literal_string \"Unlocking Times length must be equal with Percent Per Portion length\""
                        }
                      ],
                      "id": 801,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8227:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8227:123:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "8227:123:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 811,
                          "name": "distribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "8368:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Distribution_$101_storage",
                            "typeString": "struct DistributorNative.Distribution storage ref"
                          }
                        },
                        "id": 812,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isCreated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94,
                        "src": "8368:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446973747269627574696f6e206973206e6f742063726561746564",
                        "id": 813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8392:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_167bcb7f48d0e2c56172622a726645d7e96b3527bed84fbc2f0ea6500678d82f",
                          "typeString": "literal_string \"Distribution is not created\""
                        },
                        "value": "Distribution is not created"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_167bcb7f48d0e2c56172622a726645d7e96b3527bed84fbc2f0ea6500678d82f",
                          "typeString": "literal_string \"Distribution is not created\""
                        }
                      ],
                      "id": 810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8360:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8360:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 815,
                  "nodeType": "ExpressionStatement",
                  "src": "8360:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 817,
                            "name": "_unlockingTimes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 780,
                            "src": "8440:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 819,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8456:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8440:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 820,
                            "name": "distributionRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 177,
                            "src": "8461:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DistributionRound_$125_storage",
                              "typeString": "struct DistributorNative.DistributionRound storage ref"
                            }
                          },
                          "id": 821,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 124,
                          "src": "8461:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8440:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e6c6f636b2074696d65206d7573742062652061667465722074686520646973747269627574696f6e20656e6473",
                        "id": 823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8488:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_457a130258d1b821d0185404e238948fe09a876b7da79ff7f808be5e172e88bb",
                          "typeString": "literal_string \"Unlock time must be after the distribution ends\""
                        },
                        "value": "Unlock time must be after the distribution ends"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_457a130258d1b821d0185404e238948fe09a876b7da79ff7f808be5e172e88bb",
                          "typeString": "literal_string \"Unlock time must be after the distribution ends\""
                        }
                      ],
                      "id": 816,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8432:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8432:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 825,
                  "nodeType": "ExpressionStatement",
                  "src": "8432:106:2"
                },
                {
                  "assignments": [
                    827
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 827,
                      "mutability": "mutable",
                      "name": "precision",
                      "nameLocation": "8557:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 898,
                      "src": "8549:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 826,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8549:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 829,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8569:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8549:21:2"
                },
                {
                  "body": {
                    "id": 884,
                    "nodeType": "Block",
                    "src": "8633:340:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 841,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 831,
                            "src": "8651:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8655:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8651:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 858,
                        "nodeType": "IfStatement",
                        "src": "8647:141:2",
                        "trueBody": {
                          "id": 857,
                          "nodeType": "Block",
                          "src": "8658:130:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 853,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 845,
                                        "name": "_unlockingTimes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 780,
                                        "src": "8684:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 847,
                                      "indexExpression": {
                                        "id": 846,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 831,
                                        "src": "8700:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8684:18:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 848,
                                        "name": "_unlockingTimes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 780,
                                        "src": "8705:15:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 852,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 851,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 849,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 831,
                                          "src": "8721:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 850,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8725:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "8721:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8705:22:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8684:43:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "556e6c6f636b2074696d65206d7573742062652067726561746572207468616e2070726576696f7573",
                                    "id": 854,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8729:43:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_1d0c384a0174d033c2264de06dc003fc1f10f9caccdc75319805fb7f12d2e603",
                                      "typeString": "literal_string \"Unlock time must be greater than previous\""
                                    },
                                    "value": "Unlock time must be greater than previous"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_1d0c384a0174d033c2264de06dc003fc1f10f9caccdc75319805fb7f12d2e603",
                                      "typeString": "literal_string \"Unlock time must be greater than previous\""
                                    }
                                  ],
                                  "id": 844,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "8676:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8676:97:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 856,
                              "nodeType": "ExpressionStatement",
                              "src": "8676:97:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 862,
                                "name": "_unlockingTimes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 780,
                                "src": "8833:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 864,
                              "indexExpression": {
                                "id": 863,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 831,
                                "src": "8849:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8833:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 859,
                              "name": "vestingPortionsUnlockTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "8802:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "8802:30:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8802:50:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 866,
                        "nodeType": "ExpressionStatement",
                        "src": "8802:50:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 870,
                                "name": "_percents",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 783,
                                "src": "8896:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 872,
                              "indexExpression": {
                                "id": 871,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 831,
                                "src": "8906:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8896:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 867,
                              "name": "vestingPercentPerPortion",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "8866:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "8866:29:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8866:43:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 874,
                        "nodeType": "ExpressionStatement",
                        "src": "8866:43:2"
                      },
                      {
                        "expression": {
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 875,
                            "name": "precision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 827,
                            "src": "8923:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 878,
                                  "name": "_percents",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 783,
                                  "src": "8949:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 880,
                                "indexExpression": {
                                  "id": 879,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 831,
                                  "src": "8959:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8949:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 876,
                                "name": "precision",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 827,
                                "src": "8935:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1540,
                              "src": "8935:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8935:27:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8923:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 883,
                        "nodeType": "ExpressionStatement",
                        "src": "8923:39:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 834,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 831,
                      "src": "8600:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 835,
                        "name": "_unlockingTimes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "8604:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8604:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8600:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 885,
                  "initializationExpression": {
                    "assignments": [
                      831
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 831,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8593:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 885,
                        "src": "8585:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 830,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8585:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 833,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8597:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8585:13:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8628:3:2",
                      "subExpression": {
                        "id": 838,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 831,
                        "src": "8628:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 840,
                    "nodeType": "ExpressionStatement",
                    "src": "8628:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "8580:393:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 887,
                          "name": "vestingPrecision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 158,
                          "src": "8999:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 888,
                          "name": "precision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 827,
                          "src": "9019:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8999:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "507265636973696f6e2070657263656e7473206973737565",
                        "id": 890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9030:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c10394c7dd6ffd8b0d09c7b097bb96bf4cea12a26ad8d8642e2c0124705fc1a2",
                          "typeString": "literal_string \"Precision percents issue\""
                        },
                        "value": "Precision percents issue"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c10394c7dd6ffd8b0d09c7b097bb96bf4cea12a26ad8d8642e2c0124705fc1a2",
                          "typeString": "literal_string \"Precision percents issue\""
                        }
                      ],
                      "id": 886,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8991:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8991:66:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "8991:66:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 894,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "9094:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "9094:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 893,
                      "name": "VestingParametersSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "9073:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9073:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 897,
                  "nodeType": "EmitStatement",
                  "src": "9068:42:2"
                }
              ]
            },
            "functionSelector": "f4b7a413",
            "id": 899,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 786,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 785,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "8031:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "8031:9:2"
              }
            ],
            "name": "setVestingParams",
            "nameLocation": "7923:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "_unlockingTimes",
                  "nameLocation": "7966:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 899,
                  "src": "7949:32:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 778,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7949:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 779,
                    "nodeType": "ArrayTypeName",
                    "src": "7949:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 783,
                  "mutability": "mutable",
                  "name": "_percents",
                  "nameLocation": "8008:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 899,
                  "src": "7991:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 781,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "7991:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 782,
                    "nodeType": "ArrayTypeName",
                    "src": "7991:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7939:84:2"
            },
            "returnParameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8041:0:2"
            },
            "scope": 1364,
            "src": "7914:1203:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 959,
              "nodeType": "Block",
              "src": "9220:470:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 909,
                            "name": "_allocations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "9238:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Allocation_$130_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct DistributorNative.Allocation memory[] memory"
                            }
                          },
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9238:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9260:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9238:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520616c6c6f636174696f6e206172726179206d75737420636f6e7461696e206f6e6520656c656d656e74206174206c65617374",
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9263:56:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3fec865b47df57a49909876103c394ac5257e947fd90e2a3c4403750d27061a3",
                          "typeString": "literal_string \"The allocation array must contain one element at least\""
                        },
                        "value": "The allocation array must contain one element at least"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3fec865b47df57a49909876103c394ac5257e947fd90e2a3c4403750d27061a3",
                          "typeString": "literal_string \"The allocation array must contain one element at least\""
                        }
                      ],
                      "id": 908,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9230:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9230:90:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 915,
                  "nodeType": "ExpressionStatement",
                  "src": "9230:90:2"
                },
                {
                  "body": {
                    "id": 952,
                    "nodeType": "Block",
                    "src": "9378:259:2",
                    "statements": [
                      {
                        "assignments": [
                          929
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 929,
                            "mutability": "mutable",
                            "name": "allocation",
                            "nameLocation": "9410:10:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 952,
                            "src": "9392:28:2",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Allocation_$130_memory_ptr",
                              "typeString": "struct DistributorNative.Allocation"
                            },
                            "typeName": {
                              "id": 928,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 927,
                                "name": "Allocation",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 130,
                                "src": "9392:10:2"
                              },
                              "referencedDeclaration": 130,
                              "src": "9392:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Allocation_$130_storage_ptr",
                                "typeString": "struct DistributorNative.Allocation"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 933,
                        "initialValue": {
                          "baseExpression": {
                            "id": 930,
                            "name": "_allocations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "9423:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Allocation_$130_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct DistributorNative.Allocation memory[] memory"
                            }
                          },
                          "id": 932,
                          "indexExpression": {
                            "id": 931,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 917,
                            "src": "9436:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9423:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Allocation_$130_memory_ptr",
                            "typeString": "struct DistributorNative.Allocation memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9392:46:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 935,
                                  "name": "registrations",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 135,
                                  "src": "9460:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Registration_$108_storage_$",
                                    "typeString": "mapping(address => struct DistributorNative.Registration storage ref)"
                                  }
                                },
                                "id": 938,
                                "indexExpression": {
                                  "expression": {
                                    "id": 936,
                                    "name": "allocation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 929,
                                    "src": "9474:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Allocation_$130_memory_ptr",
                                      "typeString": "struct DistributorNative.Allocation memory"
                                    }
                                  },
                                  "id": 937,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "user",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 127,
                                  "src": "9474:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9460:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Registration_$108_storage",
                                  "typeString": "struct DistributorNative.Registration storage ref"
                                }
                              },
                              "id": 939,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isRegistered",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 107,
                              "src": "9460:43:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f76696465642061646472657373206973206e6f742072656769737465726564",
                              "id": 940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9505:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a6750cbe154bbb2af5f3de1081ead6ecdc92cad0c5272977486c2cb379c26b65",
                                "typeString": "literal_string \"Provided address is not registered\""
                              },
                              "value": "Provided address is not registered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a6750cbe154bbb2af5f3de1081ead6ecdc92cad0c5272977486c2cb379c26b65",
                                "typeString": "literal_string \"Provided address is not registered\""
                              }
                            ],
                            "id": 934,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9452:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9452:90:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 942,
                        "nodeType": "ExpressionStatement",
                        "src": "9452:90:2"
                      },
                      {
                        "expression": {
                          "id": 950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 943,
                                "name": "registrations",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 135,
                                "src": "9557:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Registration_$108_storage_$",
                                  "typeString": "mapping(address => struct DistributorNative.Registration storage ref)"
                                }
                              },
                              "id": 946,
                              "indexExpression": {
                                "expression": {
                                  "id": 944,
                                  "name": "allocation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 929,
                                  "src": "9571:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Allocation_$130_memory_ptr",
                                    "typeString": "struct DistributorNative.Allocation memory"
                                  }
                                },
                                "id": 945,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "user",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 127,
                                "src": "9571:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9557:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Registration_$108_storage",
                                "typeString": "struct DistributorNative.Registration storage ref"
                              }
                            },
                            "id": 947,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "distributionAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 105,
                            "src": "9557:49:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 948,
                              "name": "allocation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 929,
                              "src": "9609:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Allocation_$130_memory_ptr",
                                "typeString": "struct DistributorNative.Allocation memory"
                              }
                            },
                            "id": 949,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 129,
                            "src": "9609:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9557:69:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 951,
                        "nodeType": "ExpressionStatement",
                        "src": "9557:69:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 920,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 917,
                      "src": "9348:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 921,
                        "name": "_allocations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 903,
                        "src": "9352:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Allocation_$130_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DistributorNative.Allocation memory[] memory"
                        }
                      },
                      "id": 922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9352:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9348:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 953,
                  "initializationExpression": {
                    "assignments": [
                      917
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 917,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9341:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 953,
                        "src": "9336:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 916,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9336:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 919,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9345:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9336:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9373:3:2",
                      "subExpression": {
                        "id": 924,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 917,
                        "src": "9373:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 926,
                    "nodeType": "ExpressionStatement",
                    "src": "9373:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "9331:306:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 955,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "9667:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "9667:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 954,
                      "name": "AllocationsSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 221,
                      "src": "9652:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9652:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 958,
                  "nodeType": "EmitStatement",
                  "src": "9647:36:2"
                }
              ]
            },
            "functionSelector": "e5664d84",
            "id": 960,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 906,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 905,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "9210:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "9210:9:2"
              }
            ],
            "name": "setMultipleAddressDistributionAmount",
            "nameLocation": "9132:36:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 903,
                  "mutability": "mutable",
                  "name": "_allocations",
                  "nameLocation": "9189:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 960,
                  "src": "9169:32:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Allocation_$130_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct DistributorNative.Allocation[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 901,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 900,
                        "name": "Allocation",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 130,
                        "src": "9169:10:2"
                      },
                      "referencedDeclaration": 130,
                      "src": "9169:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Allocation_$130_storage_ptr",
                        "typeString": "struct DistributorNative.Allocation"
                      }
                    },
                    "id": 902,
                    "nodeType": "ArrayTypeName",
                    "src": "9169:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Allocation_$130_storage_$dyn_storage_ptr",
                      "typeString": "struct DistributorNative.Allocation[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9168:34:2"
            },
            "returnParameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9220:0:2"
            },
            "scope": 1364,
            "src": "9123:567:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 984,
              "nodeType": "Block",
              "src": "9786:163:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 970,
                            "name": "registrations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "9804:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Registration_$108_storage_$",
                              "typeString": "mapping(address => struct DistributorNative.Registration storage ref)"
                            }
                          },
                          "id": 972,
                          "indexExpression": {
                            "id": 971,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 962,
                            "src": "9818:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9804:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Registration_$108_storage",
                            "typeString": "struct DistributorNative.Registration storage ref"
                          }
                        },
                        "id": 973,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isRegistered",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 107,
                        "src": "9804:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f76696465642061646472657373206973206e6f742072656769737465726564",
                        "id": 974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9842:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6750cbe154bbb2af5f3de1081ead6ecdc92cad0c5272977486c2cb379c26b65",
                          "typeString": "literal_string \"Provided address is not registered\""
                        },
                        "value": "Provided address is not registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6750cbe154bbb2af5f3de1081ead6ecdc92cad0c5272977486c2cb379c26b65",
                          "typeString": "literal_string \"Provided address is not registered\""
                        }
                      ],
                      "id": 969,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9796:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9796:83:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 976,
                  "nodeType": "ExpressionStatement",
                  "src": "9796:83:2"
                },
                {
                  "expression": {
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 977,
                          "name": "registrations",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "9890:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Registration_$108_storage_$",
                            "typeString": "mapping(address => struct DistributorNative.Registration storage ref)"
                          }
                        },
                        "id": 979,
                        "indexExpression": {
                          "id": 978,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 962,
                          "src": "9904:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9890:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Registration_$108_storage",
                          "typeString": "struct DistributorNative.Registration storage ref"
                        }
                      },
                      "id": 980,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "distributionAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 105,
                      "src": "9890:42:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 981,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 964,
                      "src": "9935:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9890:52:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 983,
                  "nodeType": "ExpressionStatement",
                  "src": "9890:52:2"
                }
              ]
            },
            "functionSelector": "bb0f0d51",
            "id": 985,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 967,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 966,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "9776:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "9776:9:2"
              }
            ],
            "name": "setAddressDistributionAmount",
            "nameLocation": "9705:28:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 962,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "9742:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 985,
                  "src": "9734:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9734:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 964,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9760:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 985,
                  "src": "9752:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9752:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9733:35:2"
            },
            "returnParameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9786:0:2"
            },
            "scope": 1364,
            "src": "9696:253:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1025,
              "nodeType": "Block",
              "src": "10117:285:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10135:23:2",
                        "subExpression": {
                          "expression": {
                            "id": 997,
                            "name": "distribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "10136:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Distribution_$101_storage",
                              "typeString": "struct DistributorNative.Distribution storage ref"
                            }
                          },
                          "id": 998,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isCreated",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 94,
                          "src": "10136:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446973747269627574696f6e20616c72656164792063726561746564",
                        "id": 1000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10160:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5bf2b6316a5ca04513a221f69190b238009fea5f22ff12dca36a426f829fcc55",
                          "typeString": "literal_string \"Distribution already created\""
                        },
                        "value": "Distribution already created"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5bf2b6316a5ca04513a221f69190b238009fea5f22ff12dca36a426f829fcc55",
                          "typeString": "literal_string \"Distribution already created\""
                        }
                      ],
                      "id": 996,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10127:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10127:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1002,
                  "nodeType": "ExpressionStatement",
                  "src": "10127:64:2"
                },
                {
                  "expression": {
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1003,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "10202:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Distribution_$101_storage",
                          "typeString": "struct DistributorNative.Distribution storage ref"
                        }
                      },
                      "id": 1005,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92,
                      "src": "10202:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1006,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 991,
                      "src": "10223:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10202:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1008,
                  "nodeType": "ExpressionStatement",
                  "src": "10202:27:2"
                },
                {
                  "expression": {
                    "id": 1013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1009,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "10239:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Distribution_$101_storage",
                          "typeString": "struct DistributorNative.Distribution storage ref"
                        }
                      },
                      "id": 1011,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amountOfTokensToDistribute",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 98,
                      "src": "10239:39:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1012,
                      "name": "_amountOfTokensToDistribute",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 987,
                      "src": "10281:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10239:69:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1014,
                  "nodeType": "ExpressionStatement",
                  "src": "10239:69:2"
                },
                {
                  "expression": {
                    "id": 1017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1015,
                      "name": "vestingPrecision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 158,
                      "src": "10319:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1016,
                      "name": "_vestingPrecision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "10338:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10319:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1018,
                  "nodeType": "ExpressionStatement",
                  "src": "10319:36:2"
                },
                {
                  "expression": {
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1019,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "10366:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Distribution_$101_storage",
                          "typeString": "struct DistributorNative.Distribution storage ref"
                        }
                      },
                      "id": 1021,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isCreated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 94,
                      "src": "10366:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10391:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "10366:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1024,
                  "nodeType": "ExpressionStatement",
                  "src": "10366:29:2"
                }
              ]
            },
            "functionSelector": "dc865c82",
            "id": 1026,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 994,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 993,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "10107:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "10107:9:2"
              }
            ],
            "name": "setDistributionParameters",
            "nameLocation": "9964:25:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 987,
                  "mutability": "mutable",
                  "name": "_amountOfTokensToDistribute",
                  "nameLocation": "10007:27:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "9999:35:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9999:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 989,
                  "mutability": "mutable",
                  "name": "_vestingPrecision",
                  "nameLocation": "10052:17:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "10044:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10044:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 991,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "10087:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1026,
                  "src": "10079:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10079:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9989:110:2"
            },
            "returnParameters": {
              "id": 995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10117:0:2"
            },
            "scope": 1364,
            "src": "9955:447:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1063,
              "nodeType": "Block",
              "src": "10493:264:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1036,
                            "name": "_startDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1028,
                            "src": "10524:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 1037,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10538:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10538:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10524:29:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1040,
                            "name": "_endDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1030,
                            "src": "10569:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1041,
                            "name": "_startDate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1028,
                            "src": "10580:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10569:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10524:66:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10503:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10503:97:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "10503:97:2"
                },
                {
                  "expression": {
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1046,
                        "name": "registrationRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "10611:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegistrationRound_$120_storage",
                          "typeString": "struct DistributorNative.RegistrationRound storage ref"
                        }
                      },
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "startDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 115,
                      "src": "10611:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1049,
                      "name": "_startDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1028,
                      "src": "10641:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10611:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1051,
                  "nodeType": "ExpressionStatement",
                  "src": "10611:40:2"
                },
                {
                  "expression": {
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1052,
                        "name": "registrationRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "10661:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegistrationRound_$120_storage",
                          "typeString": "struct DistributorNative.RegistrationRound storage ref"
                        }
                      },
                      "id": 1054,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "endDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 117,
                      "src": "10661:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1055,
                      "name": "_endDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1030,
                      "src": "10689:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10661:36:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1057,
                  "nodeType": "ExpressionStatement",
                  "src": "10661:36:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1059,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "10734:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "10734:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1058,
                      "name": "RegistrationRoundSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "10713:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10713:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1062,
                  "nodeType": "EmitStatement",
                  "src": "10708:42:2"
                }
              ]
            },
            "functionSelector": "8444f153",
            "id": 1064,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1033,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1032,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "10483:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "10483:9:2"
              }
            ],
            "name": "setRegistrationRound",
            "nameLocation": "10417:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1028,
                  "mutability": "mutable",
                  "name": "_startDate",
                  "nameLocation": "10446:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "10438:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10438:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1030,
                  "mutability": "mutable",
                  "name": "_endDate",
                  "nameLocation": "10466:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1064,
                  "src": "10458:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10458:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10437:38:2"
            },
            "returnParameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10493:0:2"
            },
            "scope": 1364,
            "src": "10408:349:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1099,
              "nodeType": "Block",
              "src": "10848:383:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1074,
                          "name": "distribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "10866:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Distribution_$101_storage",
                            "typeString": "struct DistributorNative.Distribution storage ref"
                          }
                        },
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isCreated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94,
                        "src": "10866:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446973747269627574696f6e20706172616d657465727320617265206e6f7420736574",
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10890:37:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_adf2d3e2119a3cf8779423e746fa2f1f800e878c5fd70688de2a7f0ba3de74f9",
                          "typeString": "literal_string \"Distribution parameters are not set\""
                        },
                        "value": "Distribution parameters are not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_adf2d3e2119a3cf8779423e746fa2f1f800e878c5fd70688de2a7f0ba3de74f9",
                          "typeString": "literal_string \"Distribution parameters are not set\""
                        }
                      ],
                      "id": 1073,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10858:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10858:70:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1078,
                  "nodeType": "ExpressionStatement",
                  "src": "10858:70:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1080,
                          "name": "_startDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1066,
                          "src": "10946:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 1081,
                            "name": "registrationRound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "10959:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RegistrationRound_$120_storage",
                              "typeString": "struct DistributorNative.RegistrationRound storage ref"
                            }
                          },
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "endDate",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 117,
                          "src": "10959:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10946:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446973747269627574696f6e20726f756e64206d757374206265206c61746572207468616e20726567697374726174696f6e20726f756e64",
                        "id": 1084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10986:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a4b7be7b7ae3352ab136cf08a09f76259ebd44eadb6da95a0940741b02834f4",
                          "typeString": "literal_string \"Distribution round must be later than registration round\""
                        },
                        "value": "Distribution round must be later than registration round"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a4b7be7b7ae3352ab136cf08a09f76259ebd44eadb6da95a0940741b02834f4",
                          "typeString": "literal_string \"Distribution round must be later than registration round\""
                        }
                      ],
                      "id": 1079,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10938:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10938:107:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "10938:107:2"
                },
                {
                  "expression": {
                    "id": 1092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1087,
                      "name": "distributionRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "11056:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DistributionRound_$125_storage",
                        "typeString": "struct DistributorNative.DistributionRound storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1089,
                          "name": "_startDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1066,
                          "src": "11119:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1090,
                          "name": "_endDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1068,
                          "src": "11152:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1088,
                        "name": "DistributionRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "11076:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DistributionRound_$125_storage_ptr_$",
                          "typeString": "type(struct DistributorNative.DistributionRound storage pointer)"
                        }
                      },
                      "id": 1091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "startDate",
                        "endDate"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "11076:95:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DistributionRound_$125_memory_ptr",
                        "typeString": "struct DistributorNative.DistributionRound memory"
                      }
                    },
                    "src": "11056:115:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DistributionRound_$125_storage",
                      "typeString": "struct DistributorNative.DistributionRound storage ref"
                    }
                  },
                  "id": 1093,
                  "nodeType": "ExpressionStatement",
                  "src": "11056:115:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1095,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "11208:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "11208:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1094,
                      "name": "DistributionRoundSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 199,
                      "src": "11187:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11187:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1098,
                  "nodeType": "EmitStatement",
                  "src": "11182:42:2"
                }
              ]
            },
            "functionSelector": "793a2954",
            "id": 1100,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1071,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1070,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "10838:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "10838:9:2"
              }
            ],
            "name": "setDistributionRound",
            "nameLocation": "10772:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1066,
                  "mutability": "mutable",
                  "name": "_startDate",
                  "nameLocation": "10801:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "10793:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1065,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10793:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1068,
                  "mutability": "mutable",
                  "name": "_endDate",
                  "nameLocation": "10821:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "10813:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10813:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10792:38:2"
            },
            "returnParameters": {
              "id": 1072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10848:0:2"
            },
            "scope": 1364,
            "src": "10763:468:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1136,
              "nodeType": "Block",
              "src": "11299:420:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1108,
                              "name": "vestingPercentPerPortion",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "11330:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11330:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11364:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11330:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1112,
                              "name": "vestingPortionsUnlockTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 163,
                              "src": "11381:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11381:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11416:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11381:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11330:87:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e6720706172616d657465727320617265206e6f7420736574",
                        "id": 1117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11431:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0444c17e7e7168bcd3d6b7cfc87b87748ed6ab9bcb37e3fdd2f31b27f2d104c",
                          "typeString": "literal_string \"Vesting parameters are not set\""
                        },
                        "value": "Vesting parameters are not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0444c17e7e7168bcd3d6b7cfc87b87748ed6ab9bcb37e3fdd2f31b27f2d104c",
                          "typeString": "literal_string \"Vesting parameters are not set\""
                        }
                      ],
                      "id": 1107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11309:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11309:164:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1119,
                  "nodeType": "ExpressionStatement",
                  "src": "11309:164:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1121,
                          "name": "_endDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1102,
                          "src": "11504:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1122,
                            "name": "vestingPortionsUnlockTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 163,
                            "src": "11515:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1127,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1123,
                                "name": "vestingPortionsUnlockTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 163,
                                "src": "11541:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 1124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "11541:32:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11576:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11541:36:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11515:63:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11504:74:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206c61737420646179206f662074686520646973747269627574696f6e206d757374206265206c61746572207468616e20746865206c61737420756e6c6f636b2074696d65",
                        "id": 1129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11592:74:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef5e4de852da402aa80ffa3b7f845a32c9c60cf363da259f81461c45e4bb0b5a",
                          "typeString": "literal_string \"The last day of the distribution must be later than the last unlock time\""
                        },
                        "value": "The last day of the distribution must be later than the last unlock time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef5e4de852da402aa80ffa3b7f845a32c9c60cf363da259f81461c45e4bb0b5a",
                          "typeString": "literal_string \"The last day of the distribution must be later than the last unlock time\""
                        }
                      ],
                      "id": 1120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11483:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11483:193:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1131,
                  "nodeType": "ExpressionStatement",
                  "src": "11483:193:2"
                },
                {
                  "expression": {
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1132,
                      "name": "vestingEndDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "11687:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1133,
                      "name": "_endDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "11704:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11687:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1135,
                  "nodeType": "ExpressionStatement",
                  "src": "11687:25:2"
                }
              ]
            },
            "functionSelector": "72c0fe1d",
            "id": 1137,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1105,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1104,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "11289:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "11289:9:2"
              }
            ],
            "name": "setVestingEndDate",
            "nameLocation": "11246:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1102,
                  "mutability": "mutable",
                  "name": "_endDate",
                  "nameLocation": "11272:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1137,
                  "src": "11264:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11264:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11263:18:2"
            },
            "returnParameters": {
              "id": 1106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11299:0:2"
            },
            "scope": 1364,
            "src": "11237:482:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1180,
              "nodeType": "Block",
              "src": "11794:288:2",
              "statements": [
                {
                  "assignments": [
                    1147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1147,
                      "mutability": "mutable",
                      "name": "addresses",
                      "nameLocation": "11821:9:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1180,
                      "src": "11804:26:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11804:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1146,
                        "nodeType": "ArrayTypeName",
                        "src": "11804:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1153,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1151,
                        "name": "registrationsCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "11847:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11833:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1148,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11837:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1149,
                        "nodeType": "ArrayTypeName",
                        "src": "11837:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11833:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11804:62:2"
                },
                {
                  "body": {
                    "id": 1176,
                    "nodeType": "Block",
                    "src": "11923:126:2",
                    "statements": [
                      {
                        "assignments": [
                          1165
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1165,
                            "mutability": "mutable",
                            "name": "registrationAddress",
                            "nameLocation": "11945:19:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1176,
                            "src": "11937:27:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1164,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11937:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1169,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1166,
                            "name": "indexToRegistrations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "11967:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 1168,
                          "indexExpression": {
                            "id": 1167,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1155,
                            "src": "11988:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11967:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11937:53:2"
                      },
                      {
                        "expression": {
                          "id": 1174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1170,
                              "name": "addresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1147,
                              "src": "12004:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1172,
                            "indexExpression": {
                              "id": 1171,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1155,
                              "src": "12014:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12004:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1173,
                            "name": "registrationAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1165,
                            "src": "12019:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12004:34:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1175,
                        "nodeType": "ExpressionStatement",
                        "src": "12004:34:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1158,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1155,
                      "src": "11894:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1159,
                      "name": "registrationsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "11898:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11894:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1177,
                  "initializationExpression": {
                    "assignments": [
                      1155
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1155,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11887:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1177,
                        "src": "11882:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1154,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11882:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1157,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11891:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11882:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11918:3:2",
                      "subExpression": {
                        "id": 1161,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1155,
                        "src": "11918:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1163,
                    "nodeType": "ExpressionStatement",
                    "src": "11918:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "11877:172:2"
                },
                {
                  "expression": {
                    "id": 1178,
                    "name": "addresses",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1147,
                    "src": "12066:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 1142,
                  "id": 1179,
                  "nodeType": "Return",
                  "src": "12059:16:2"
                }
              ]
            },
            "functionSelector": "7073c072",
            "id": 1181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRegisteredUsers",
            "nameLocation": "11734:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11752:2:2"
            },
            "returnParameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1141,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1181,
                  "src": "11776:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1139,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "11776:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1140,
                    "nodeType": "ArrayTypeName",
                    "src": "11776:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11775:18:2"
            },
            "scope": 1364,
            "src": "11725:357:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1189,
              "nodeType": "Block",
              "src": "12157:48:2",
              "statements": [
                {
                  "expression": {
                    "id": 1187,
                    "name": "vestingPercentPerPortion",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 166,
                    "src": "12174:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1186,
                  "id": 1188,
                  "nodeType": "Return",
                  "src": "12167:31:2"
                }
              ]
            },
            "functionSelector": "7e87c053",
            "id": 1190,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingPortions",
            "nameLocation": "12097:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12115:2:2"
            },
            "returnParameters": {
              "id": 1186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1185,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "12139:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1183,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12139:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1184,
                    "nodeType": "ArrayTypeName",
                    "src": "12139:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12138:18:2"
            },
            "scope": 1364,
            "src": "12088:117:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1198,
              "nodeType": "Block",
              "src": "12278:49:2",
              "statements": [
                {
                  "expression": {
                    "id": 1196,
                    "name": "vestingPortionsUnlockTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 163,
                    "src": "12295:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1195,
                  "id": 1197,
                  "nodeType": "Return",
                  "src": "12288:32:2"
                }
              ]
            },
            "functionSelector": "1ba7dd1e",
            "id": 1199,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVestingUnlocks",
            "nameLocation": "12219:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12236:2:2"
            },
            "returnParameters": {
              "id": 1195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1194,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1199,
                  "src": "12260:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1192,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "12260:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1193,
                    "nodeType": "ArrayTypeName",
                    "src": "12260:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12259:18:2"
            },
            "scope": 1364,
            "src": "12210:117:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1215,
              "nodeType": "Block",
              "src": "12383:108:2",
              "statements": [
                {
                  "expression": {
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1204,
                        "name": "registrationRound",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "12393:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RegistrationRound_$120_storage",
                          "typeString": "struct DistributorNative.RegistrationRound storage ref"
                        }
                      },
                      "id": 1206,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isStopped",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119,
                      "src": "12393:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12423:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12393:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1209,
                  "nodeType": "ExpressionStatement",
                  "src": "12393:34:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1211,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "12468:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "12468:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1210,
                      "name": "RegistrationRoundStopped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "12443:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12443:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1214,
                  "nodeType": "EmitStatement",
                  "src": "12438:46:2"
                }
              ]
            },
            "functionSelector": "23e8e9bf",
            "id": 1216,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1202,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1201,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "12373:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "12373:9:2"
              }
            ],
            "name": "stopRegistrationRound",
            "nameLocation": "12342:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12363:2:2"
            },
            "returnParameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12383:0:2"
            },
            "scope": 1364,
            "src": "12333:158:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1231,
              "nodeType": "Block",
              "src": "12582:49:2",
              "statements": [
                {
                  "expression": {
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1225,
                        "name": "addressToEvent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "12591:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1227,
                      "indexExpression": {
                        "id": 1226,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1218,
                        "src": "12606:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12591:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1228,
                      "name": "_event",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1220,
                      "src": "12618:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12591:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1230,
                  "nodeType": "ExpressionStatement",
                  "src": "12591:33:2"
                }
              ]
            },
            "functionSelector": "f5682523",
            "id": 1232,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1223,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1222,
                  "name": "onlyDistributionOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 256,
                  "src": "12560:21:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "12560:21:2"
              }
            ],
            "name": "setAddressEvent",
            "nameLocation": "12506:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1218,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "12530:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1232,
                  "src": "12522:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12522:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1220,
                  "mutability": "mutable",
                  "name": "_event",
                  "nameLocation": "12545:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1232,
                  "src": "12540:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1219,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12540:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12521:31:2"
            },
            "returnParameters": {
              "id": 1224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12582:0:2"
            },
            "scope": 1364,
            "src": "12497:134:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1265,
              "nodeType": "Block",
              "src": "12699:385:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1238,
                          "name": "distribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "12717:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Distribution_$101_storage",
                            "typeString": "struct DistributorNative.Distribution storage ref"
                          }
                        },
                        "id": 1239,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isCreated",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 94,
                        "src": "12717:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446973747269627574696f6e206973206e6f742063726561746564",
                        "id": 1240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12741:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_167bcb7f48d0e2c56172622a726645d7e96b3527bed84fbc2f0ea6500678d82f",
                          "typeString": "literal_string \"Distribution is not created\""
                        },
                        "value": "Distribution is not created"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_167bcb7f48d0e2c56172622a726645d7e96b3527bed84fbc2f0ea6500678d82f",
                          "typeString": "literal_string \"Distribution is not created\""
                        }
                      ],
                      "id": 1237,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12709:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12709:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1242,
                  "nodeType": "ExpressionStatement",
                  "src": "12709:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "12789:29:2",
                        "subExpression": {
                          "expression": {
                            "id": 1244,
                            "name": "distribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "12790:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Distribution_$101_storage",
                              "typeString": "struct DistributorNative.Distribution storage ref"
                            }
                          },
                          "id": 1245,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokensDeposited",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 96,
                          "src": "12790:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e7320686173206265656e206465706f736974656420616c7265616479",
                        "id": 1247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12820:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c46599282a3cb0c82ad6e9abbe1559f7ccd2b385fa93fef5f9f26beb5db038c5",
                          "typeString": "literal_string \"Tokens has been deposited already\""
                        },
                        "value": "Tokens has been deposited already"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c46599282a3cb0c82ad6e9abbe1559f7ccd2b385fa93fef5f9f26beb5db038c5",
                          "typeString": "literal_string \"Tokens has been deposited already\""
                        }
                      ],
                      "id": 1243,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12781:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12781:75:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1249,
                  "nodeType": "ExpressionStatement",
                  "src": "12781:75:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1251,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12887:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "12887:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1253,
                            "name": "distribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "12900:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Distribution_$101_storage",
                              "typeString": "struct DistributorNative.Distribution storage ref"
                            }
                          },
                          "id": 1254,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountOfTokensToDistribute",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 98,
                          "src": "12900:39:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12887:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206465706f73697420616d6f756e74206973206e6f7420657175616c20746f207468652070726573657420616d6f756e74206f6620646973747269627574696f6e20746f6b656e73",
                        "id": 1256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12953:77:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d55b08f39a079e877c013969b8124da9c9eab18c8ebeed3eba34463698207270",
                          "typeString": "literal_string \"The deposit amount is not equal to the preset amount of distribution tokens\""
                        },
                        "value": "The deposit amount is not equal to the preset amount of distribution tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d55b08f39a079e877c013969b8124da9c9eab18c8ebeed3eba34463698207270",
                          "typeString": "literal_string \"The deposit amount is not equal to the preset amount of distribution tokens\""
                        }
                      ],
                      "id": 1250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12866:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12866:165:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1258,
                  "nodeType": "ExpressionStatement",
                  "src": "12866:165:2"
                },
                {
                  "expression": {
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1259,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "13042:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Distribution_$101_storage",
                          "typeString": "struct DistributorNative.Distribution storage ref"
                        }
                      },
                      "id": 1261,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokensDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 96,
                      "src": "13042:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13073:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "13042:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1264,
                  "nodeType": "ExpressionStatement",
                  "src": "13042:35:2"
                }
              ]
            },
            "functionSelector": "7c4b414d",
            "id": 1266,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1235,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1234,
                  "name": "onlyDistributionOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 256,
                  "src": "12677:21:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "12677:21:2"
              }
            ],
            "name": "depositTokens",
            "nameLocation": "12646:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12659:2:2"
            },
            "returnParameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12699:0:2"
            },
            "scope": 1364,
            "src": "12637:447:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1321,
              "nodeType": "Block",
              "src": "13135:505:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1272,
                          "name": "vestingEndDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "13153:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13170:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13153:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e6720656e642064617465206973206e6f7420736574",
                        "id": 1275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13173:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b05bdb58bb41862d064e2f9d65abed80baf28fbdde7acc0ca653129d4028b972",
                          "typeString": "literal_string \"Vesting end date is not set\""
                        },
                        "value": "Vesting end date is not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b05bdb58bb41862d064e2f9d65abed80baf28fbdde7acc0ca653129d4028b972",
                          "typeString": "literal_string \"Vesting end date is not set\""
                        }
                      ],
                      "id": 1271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13145:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13145:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "13145:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1279,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "13221:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13221:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1281,
                          "name": "vestingEndDate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "13240:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13221:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56657374696e6720706572696f64206973206e6f742066696e697368656420796574",
                        "id": 1283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13256:36:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b7de02fb2223f5143a64844e69edf6b188207aa494707574869a4f4e27100eb",
                          "typeString": "literal_string \"Vesting period is not finished yet\""
                        },
                        "value": "Vesting period is not finished yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b7de02fb2223f5143a64844e69edf6b188207aa494707574869a4f4e27100eb",
                          "typeString": "literal_string \"Vesting period is not finished yet\""
                        }
                      ],
                      "id": 1278,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13213:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13213:80:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1285,
                  "nodeType": "ExpressionStatement",
                  "src": "13213:80:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "13311:18:2",
                        "subExpression": {
                          "id": 1287,
                          "name": "leftoverWithdrawn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 179,
                          "src": "13312:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6566746f76657220616c72656164792077697468647261776e",
                        "id": 1289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13331:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e8533147597da99d7adef888a1216db6bd5d91d2945c83f5421c96055a52aef",
                          "typeString": "literal_string \"Leftover already withdrawn\""
                        },
                        "value": "Leftover already withdrawn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e8533147597da99d7adef888a1216db6bd5d91d2945c83f5421c96055a52aef",
                          "typeString": "literal_string \"Leftover already withdrawn\""
                        }
                      ],
                      "id": 1286,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13303:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13303:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1291,
                  "nodeType": "ExpressionStatement",
                  "src": "13303:57:2"
                },
                {
                  "assignments": [
                    1293
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1293,
                      "mutability": "mutable",
                      "name": "leftover",
                      "nameLocation": "13379:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1321,
                      "src": "13371:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1292,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13371:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1300,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1297,
                          "name": "distribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "13434:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Distribution_$101_storage",
                            "typeString": "struct DistributorNative.Distribution storage ref"
                          }
                        },
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalTokensDistributed",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 100,
                        "src": "13434:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 1294,
                          "name": "distribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "13390:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Distribution_$101_storage",
                            "typeString": "struct DistributorNative.Distribution storage ref"
                          }
                        },
                        "id": 1295,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountOfTokensToDistribute",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 98,
                        "src": "13390:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1555,
                      "src": "13390:43:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13390:80:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13371:99:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1302,
                          "name": "leftover",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "13488:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13499:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13488:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f7468696e6720746f207769746864726177",
                        "id": 1305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13502:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8722be8c02476b3c04ad274d7775873fe1475e2412f1a0723e70a682c0d07846",
                          "typeString": "literal_string \"There is nothing to withdraw\""
                        },
                        "value": "There is nothing to withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8722be8c02476b3c04ad274d7775873fe1475e2412f1a0723e70a682c0d07846",
                          "typeString": "literal_string \"There is nothing to withdraw\""
                        }
                      ],
                      "id": 1301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13480:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13480:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1307,
                  "nodeType": "ExpressionStatement",
                  "src": "13480:53:2"
                },
                {
                  "expression": {
                    "id": 1310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1308,
                      "name": "leftoverWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "13552:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13572:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "13552:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1311,
                  "nodeType": "ExpressionStatement",
                  "src": "13552:24:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1318,
                        "name": "leftover",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1293,
                        "src": "13624:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1314,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "13603:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "13603:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13595:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13595:8:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13595:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "13595:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13595:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1320,
                  "nodeType": "ExpressionStatement",
                  "src": "13595:38:2"
                }
              ]
            },
            "functionSelector": "a525d237",
            "id": 1322,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1269,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1268,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 243,
                  "src": "13125:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "13125:9:2"
              }
            ],
            "name": "withdrawLeftover",
            "nameLocation": "13099:16:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13115:2:2"
            },
            "returnParameters": {
              "id": 1270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13135:0:2"
            },
            "scope": 1364,
            "src": "13090:550:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1362,
              "nodeType": "Block",
              "src": "13695:320:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "13713:37:2",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1328,
                              "name": "registrations",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 135,
                              "src": "13714:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Registration_$108_storage_$",
                                "typeString": "mapping(address => struct DistributorNative.Registration storage ref)"
                              }
                            },
                            "id": 1330,
                            "indexExpression": {
                              "id": 1329,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1324,
                              "src": "13728:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13714:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Registration_$108_storage",
                              "typeString": "struct DistributorNative.Registration storage ref"
                            }
                          },
                          "id": 1331,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isRegistered",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 107,
                          "src": "13714:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4164647265737320616c72656164792072656769737465726564",
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13752:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2",
                          "typeString": "literal_string \"Address already registered\""
                        },
                        "value": "Address already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ec0d22cb3a7ae925c074c3eaa428cb3b43ff37aa3eaec736ebc828248435dc2",
                          "typeString": "literal_string \"Address already registered\""
                        }
                      ],
                      "id": 1327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13705:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13705:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1335,
                  "nodeType": "ExpressionStatement",
                  "src": "13705:76:2"
                },
                {
                  "expression": {
                    "id": 1345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1336,
                        "name": "registrations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "13800:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Registration_$108_storage_$",
                          "typeString": "mapping(address => struct DistributorNative.Registration storage ref)"
                        }
                      },
                      "id": 1338,
                      "indexExpression": {
                        "id": 1337,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1324,
                        "src": "13814:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13800:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Registration_$108_storage",
                        "typeString": "struct DistributorNative.Registration storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1340,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "13839:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13839:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 1342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13856:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 1343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13859:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1339,
                        "name": "Registration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "13826:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Registration_$108_storage_ptr_$",
                          "typeString": "type(struct DistributorNative.Registration storage pointer)"
                        }
                      },
                      "id": 1344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13826:38:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Registration_$108_memory_ptr",
                        "typeString": "struct DistributorNative.Registration memory"
                      }
                    },
                    "src": "13800:64:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Registration_$108_storage",
                      "typeString": "struct DistributorNative.Registration storage ref"
                    }
                  },
                  "id": 1346,
                  "nodeType": "ExpressionStatement",
                  "src": "13800:64:2"
                },
                {
                  "expression": {
                    "id": 1351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1347,
                        "name": "indexToRegistrations",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "13874:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1349,
                      "indexExpression": {
                        "id": 1348,
                        "name": "registrationsCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 141,
                        "src": "13895:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13874:40:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1350,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1324,
                      "src": "13917:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13874:51:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1352,
                  "nodeType": "ExpressionStatement",
                  "src": "13874:51:2"
                },
                {
                  "expression": {
                    "id": 1354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "13935:20:2",
                    "subExpression": {
                      "id": 1353,
                      "name": "registrationsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "13935:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1355,
                  "nodeType": "ExpressionStatement",
                  "src": "13935:20:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1357,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1324,
                        "src": "13982:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1358,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "13992:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "13992:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1356,
                      "name": "Registered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "13971:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13971:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1361,
                  "nodeType": "EmitStatement",
                  "src": "13966:42:2"
                }
              ]
            },
            "id": 1363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerUser",
            "nameLocation": "13655:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1324,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "13677:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "13669:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13669:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13668:18:2"
            },
            "returnParameters": {
              "id": 1326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13695:0:2"
            },
            "scope": 1364,
            "src": "13646:369:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 1365,
        "src": "117:13900:2",
        "usedErrors": []
      }
    ],
    "src": "33:13985:2"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620029633803806200296383398101604081905262000034916200005a565b600b80546001600160a01b0319166001600160a01b03929092169190911790556200008c565b6000602082840312156200006d57600080fd5b81516001600160a01b03811681146200008557600080fd5b9392505050565b6128c7806200009c6000396000f3fe60806040526004361061021a5760003560e01c80638444f15311610123578063c44c209a116100ab578063f1ef7ff21161006f578063f1ef7ff2146106a4578063f4b7a413146106c4578063f5682523146106e4578063f851a44014610704578063fc9541441461072457600080fd5b8063c44c209a1461060f578063d11711a21461062f578063d64f6cb614610644578063dc865c8214610664578063e5664d841461068457600080fd5b80639bdeb335116100f25780639bdeb3351461057f578063a525d23714610594578063aa6cb71d146105a9578063b1cde244146105bf578063bb0f0d51146105ef57600080fd5b80638444f153146104d0578063927f6aee146104f0578063942e6bcf1461051057806398c32a7f1461054f57600080fd5b80633ccfd60b116101a65780637073c072116101755780637073c0721461045157806372c0fe1d14610473578063793a2954146104935780637c4b414d146104b35780637e87c053146104bb57600080fd5b80633ccfd60b146103835780633db5a524146103985780635ee58efc146103ae57806362b21fa11461042457600080fd5b80631eeadfa8116101ed5780631eeadfa8146102c65780632199d5cd146102ea57806323e8e9bf1461030a5780633c3ec8b71461031f5780633c961fc21461036d57600080fd5b80631754d62d1461021f5780631aa3a008146102635780631ba7dd1e1461027a5780631c5f47ee1461029c575b600080fd5b34801561022b57600080fd5b50600f5460105460115461024192919060ff1683565b6040805193845260208401929092521515908201526060015b60405180910390f35b34801561026f57600080fd5b50610278610770565b005b34801561028657600080fd5b5061028f6107c3565b60405161025a91906121a7565b3480156102a857600080fd5b506014546102b69060ff1681565b604051901515815260200161025a565b3480156102d257600080fd5b506102dc60075481565b60405190815260200161025a565b3480156102f657600080fd5b50610278610305366004612207565b61081b565b34801561031657600080fd5b50610278610890565b34801561032b57600080fd5b5061035561033a366004612222565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161025a565b34801561037957600080fd5b506102dc60085481565b34801561038f57600080fd5b50610278610903565b3480156103a457600080fd5b506102dc60065481565b3480156103ba57600080fd5b50600c54600d54600e546103ec926001600160a01b0381169260ff600160a01b8304811693600160a81b909304169185565b604080516001600160a01b0390961686529315156020860152911515928401929092526060830191909152608082015260a00161025a565b34801561043057600080fd5b506102dc61043f366004612207565b60046020526000908152604090205481565b34801561045d57600080fd5b50610466610c3e565b60405161025a919061223b565b34801561047f57600080fd5b5061027861048e366004612222565b610cf8565b34801561049f57600080fd5b506102786104ae36600461227c565b610e05565b610278610f63565b3480156104c757600080fd5b5061028f6110ba565b3480156104dc57600080fd5b506102786104eb36600461227c565b611110565b3480156104fc57600080fd5b506102dc61050b366004612222565b61118c565b34801561051c57600080fd5b5061024161052b366004612207565b60006020819052908152604090208054600182015460029092015490919060ff1683565b34801561055b57600080fd5b506102b661056a366004612207565b60056020526000908152604090205460ff1681565b34801561058b57600080fd5b506102786111ad565b3480156105a057600080fd5b506102786113ef565b3480156105b557600080fd5b506102dc60025481565b3480156105cb57600080fd5b506012546013546105da919082565b6040805192835260208301919091520161025a565b3480156105fb57600080fd5b5061027861060a36600461229e565b61158e565b34801561061b57600080fd5b5061027861062a36600461235c565b611612565b34801561063b57600080fd5b506102786117a5565b34801561065057600080fd5b5061027861065f36600461245f565b6118ee565b34801561067057600080fd5b5061027861067f3660046124a6565b611ac8565b34801561069057600080fd5b5061027861069f3660046124db565b611b81565b3480156106b057600080fd5b506102dc6106bf366004612222565b611ceb565b3480156106d057600080fd5b506102786106df36600461258d565b611cfb565b3480156106f057600080fd5b506102786106ff36600461229e565b611ffa565b34801561071057600080fd5b50600b54610355906001600160a01b031681565b34801561073057600080fd5b5061075b61073f366004612207565b6003602052600090815260409020805460019091015460ff1682565b6040805192835290151560208301520161025a565b600f54421080159061078457506010544211155b8015610793575060115460ff16155b6107b85760405162461bcd60e51b81526004016107af906125e7565b60405180910390fd5b6107c133612040565b565b6060600980548060200260200160405190810160405280929190818152602001828054801561081157602002820191906000526020600020905b8154815260200190600101908083116107fd575b5050505050905090565b600f54421080159061082f57506010544211155b801561083e575060115460ff16155b61085a5760405162461bcd60e51b81526004016107af906125e7565b600b546001600160a01b031633146108845760405162461bcd60e51b81526004016107af90612634565b61088d81612040565b50565b600b546001600160a01b031633146108ba5760405162461bcd60e51b81526004016107af90612634565b6011805460ff191660011790556040517f7069b20063a2c984d75a2165d1633fd0be67afe3680341d2fc5d0cce78c9ceea906108f99042815260200190565b60405180910390a1565b600a5415801590610915575060095415155b6109315760405162461bcd60e51b81526004016107af9061266b565b3360009081526020819052604090206002015460ff166109935760405162461bcd60e51b815260206004820152601960248201527f41646472657373206973206e6f7420726567697374657265640000000000000060448201526064016107af565b3360009081526003602052604090206001015460ff16610a095760405162461bcd60e51b815260206004820152602b60248201527f41646472657373206973206e6f742070617274696369706174656420696e206460448201526a34b9ba3934b13aba34b7b760a91b60648201526084016107af565b3360009081526005602052604090205460ff1615610a775760405162461bcd60e51b815260206004820152602560248201527f416464726573732068617320657865637574656420776974686472617720616c604482015264726561647960d81b60648201526084016107af565b3360009081526020819052604081206001810154610aa75760405162461bcd60e51b81526004016107af906126a2565b60005b600954811015610b3c5760098181548110610ac757610ac76126d9565b90600052602060002001544210610b2a576000610b1a600754610b14600a8581548110610af657610af66126d9565b9060005260206000200154866001015461217090919063ffffffff16565b90612183565b9050610b26848261218f565b9350505b80610b3481612705565b915050610aaa565b5060008211610b8d5760405162461bcd60e51b815260206004820152601d60248201527f5468657265206973206e6f7468696e6720746f2077696474686472617700000060448201526064016107af565b47821115610bad5760405162461bcd60e51b81526004016107af9061271e565b336000908152600560205260409020805460ff19166001179055600e54610bd4908361218f565b600e55604051339083156108fc029084906000818181858888f19350505050158015610c04573d6000803e3d6000fd5b5060405182815233907f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b9060200160405180910390a25050565b6060600060025467ffffffffffffffff811115610c5d57610c5d6122c8565b604051908082528060200260200182016040528015610c86578160200160208202803683370190505b50905060005b600254811015610cf25760008181526001602052604090205482516001600160a01b03909116908190849084908110610cc757610cc76126d9565b6001600160a01b03909216602092830291909101909101525080610cea81612705565b915050610c8c565b50919050565b600b546001600160a01b03163314610d225760405162461bcd60e51b81526004016107af90612634565b600a5415801590610d34575060095415155b610d505760405162461bcd60e51b81526004016107af9061266b565b60098054610d6090600190612762565b81548110610d7057610d706126d9565b90600052602060002001548111610e005760405162461bcd60e51b815260206004820152604860248201527f546865206c61737420646179206f662074686520646973747269627574696f6e60448201527f206d757374206265206c61746572207468616e20746865206c61737420756e6c6064820152676f636b2074696d6560c01b608482015260a4016107af565b600655565b600b546001600160a01b03163314610e2f5760405162461bcd60e51b81526004016107af90612634565b600c54600160a01b900460ff16610e945760405162461bcd60e51b815260206004820152602360248201527f446973747269627574696f6e20706172616d657465727320617265206e6f74206044820152621cd95d60ea1b60648201526084016107af565b6010548211610f0b5760405162461bcd60e51b815260206004820152603860248201527f446973747269627574696f6e20726f756e64206d757374206265206c6174657260448201527f207468616e20726567697374726174696f6e20726f756e64000000000000000060648201526084016107af565b60408051808201825283815260200182905260128390556013829055517f7d5e91551dc6f3038619d85da877b41440d669756a40eeb78b1c9df6c6a988d590610f579042815260200190565b60405180910390a15050565b600c546001600160a01b03163314610f8d5760405162461bcd60e51b81526004016107af90612779565b600c54600160a01b900460ff16610fb65760405162461bcd60e51b81526004016107af906127bf565b600c54600160a81b900460ff161561101a5760405162461bcd60e51b815260206004820152602160248201527f546f6b656e7320686173206265656e206465706f736974656420616c726561646044820152607960f81b60648201526084016107af565b600d5434146110a55760405162461bcd60e51b815260206004820152604b60248201527f546865206465706f73697420616d6f756e74206973206e6f7420657175616c2060448201527f746f207468652070726573657420616d6f756e74206f6620646973747269627560648201526a74696f6e20746f6b656e7360a81b608482015260a4016107af565b600c805460ff60a81b1916600160a81b179055565b6060600a80548060200260200160405190810160405280929190818152602001828054801561081157602002820191906000526020600020908154815260200190600101908083116107fd575050505050905090565b600b546001600160a01b0316331461113a5760405162461bcd60e51b81526004016107af90612634565b42821015801561114957508181115b61115257600080fd5b600f82905560108190556040514281527f95a21281108b566135ddaa849f46ac5edee2287699ce9443ac1490705cd63d7790602001610f57565b600a818154811061119c57600080fd5b600091825260209091200154905081565b6000600854116111cf5760405162461bcd60e51b81526004016107af9061266b565b3360009081526005602052604090205460ff161561122f5760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320616c7265616479207769647468647261776e00000000000060448201526064016107af565b336000908152602081905260408120600181015461125f5760405162461bcd60e51b81526004016107af906126a2565b33600090815260046020526040812054905b818110156112ec5760006112b5600754610b14600a8581548110611297576112976126d9565b9060005260206000200154876001015461217090919063ffffffff16565b60018501549091506112c7908261219b565b60018501556112d6858261218f565b94505080806112e490612705565b915050611271565b506000831161133d5760405162461bcd60e51b815260206004820152601d60248201527f5468657265206973206e6f7468696e6720746f2077696474686472617700000060448201526064016107af565b4783111561135d5760405162461bcd60e51b81526004016107af9061271e565b336000908152600560205260409020805460ff19166001179055600e54611384908461218f565b600e55604051339084156108fc029085906000818181858888f193505050501580156113b4573d6000803e3d6000fd5b5060405183815233907f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b9060200160405180910390a2505050565b600b546001600160a01b031633146114195760405162461bcd60e51b81526004016107af90612634565b60006006541161146b5760405162461bcd60e51b815260206004820152601b60248201527f56657374696e6720656e642064617465206973206e6f7420736574000000000060448201526064016107af565b6006544210156114c85760405162461bcd60e51b815260206004820152602260248201527f56657374696e6720706572696f64206973206e6f742066696e69736865642079604482015261195d60f21b60648201526084016107af565b60145460ff161561151b5760405162461bcd60e51b815260206004820152601a60248201527f4c6566746f76657220616c72656164792077697468647261776e00000000000060448201526064016107af565b600e54600d5460009161152e919061219b565b9050600081116115505760405162461bcd60e51b81526004016107af906126a2565b6014805460ff19166001179055604051339082156108fc029083906000818181858888f1935050505015801561158a573d6000803e3d6000fd5b5050565b600b546001600160a01b031633146115b85760405162461bcd60e51b81526004016107af90612634565b6001600160a01b03821660009081526020819052604090206002015460ff166115f35760405162461bcd60e51b81526004016107af906127f6565b6001600160a01b03909116600090815260208190526040902060010155565b600f54421080159061162657506010544211155b8015611635575060115460ff16155b6116515760405162461bcd60e51b81526004016107af906125e7565b600b546001600160a01b0316331461167b5760405162461bcd60e51b81526004016107af90612634565b60008151116116ea5760405162461bcd60e51b815260206004820152603560248201527f54686520616464726573736573206172726179206d75737420636f6e7461696e604482015274081bdb9948195b195b595b9d08185d081b19585cdd605a1b60648201526084016107af565b60005b815181101561176d5760008083838151811061170b5761170b6126d9565b6020908102919091018101516001600160a01b031682528101919091526040016000206002015460ff1661175b5761175b82828151811061174e5761174e6126d9565b6020026020010151612040565b8061176581612705565b9150506116ed565b506040514281527f3ed3ff891af065b7aecb80d2d3e0543afd07e2b38e36d9e98700feebf26482b3906020015b60405180910390a150565b60125442108015906117b957506013544211155b61181b5760405162461bcd60e51b815260206004820152602d60248201527f446973747269627574696f6e20726f756e64206973206f766572206f72206e6f60448201526c1d081cdd185c9d1959081e595d609a1b60648201526084016107af565b3360009081526003602052604090206001015460ff161561187e5760405162461bcd60e51b815260206004820152601c60248201527f4164647265737320616c7265616479207061727469636970617465640000000060448201526064016107af565b60408051808201825242808252600160208084018281523360008181526003845287902095518655905194909201805460ff19169415159490941790935592519081527fb198f199c43cc078ad46e5a5fabe03eba401f7417816c86af0bd2e7345c99506910160405180910390a2565b600b546001600160a01b031633146119185760405162461bcd60e51b81526004016107af90612634565b8051821461198e5760405162461bcd60e51b815260206004820152603a60248201527f4576656e747320636f756c64206d75737420626520657175616c20776974682060448201527f506572636570742050657220506f7274696f6e206c656e67746800000000000060648201526084016107af565b600c54600160a01b900460ff166119b75760405162461bcd60e51b81526004016107af906127bf565b60088290556000805b83811015611a3e57600a8382815181106119dc576119dc6126d9565b602090810291909101810151825460018101845560009384529190922001558251611a2a90849083908110611a1357611a136126d9565b60200260200101518361218f90919063ffffffff16565b915080611a3681612705565b9150506119c0565b508060075414611a905760405162461bcd60e51b815260206004820152601860248201527f507265636973696f6e2070657263656e7473206973737565000000000000000060448201526064016107af565b6040514281527f1af3c14ce558c4a33618e1f36c8ea383fc552a672298056311fa66518719f6e09060200160405180910390a1505050565b600b546001600160a01b03163314611af25760405162461bcd60e51b81526004016107af90612634565b600c54600160a01b900460ff1615611b4c5760405162461bcd60e51b815260206004820152601c60248201527f446973747269627574696f6e20616c726561647920637265617465640000000060448201526064016107af565b600c8054600d949094556007929092556001600160a81b03199092166001600160a01b0390921691909117600160a01b179055565b600b546001600160a01b03163314611bab5760405162461bcd60e51b81526004016107af90612634565b6000815111611c1b5760405162461bcd60e51b815260206004820152603660248201527f54686520616c6c6f636174696f6e206172726179206d75737420636f6e7461696044820152751b881bdb9948195b195b595b9d08185d081b19585cdd60521b60648201526084016107af565b60005b8151811015611cba576000828281518110611c3b57611c3b6126d9565b60209081029190910181015180516001600160a01b031660009081529182905260409091206002015490915060ff16611c865760405162461bcd60e51b81526004016107af906127f6565b60208082015191516001600160a01b0316600090815290819052604090206001015580611cb281612705565b915050611c1e565b506040514281527fb470a061a328bedea790142ca3e477573b6337191c39704740003dc082e76ecf9060200161179a565b6009818154811061119c57600080fd5b600b546001600160a01b03163314611d255760405162461bcd60e51b81526004016107af90612634565b600a54158015611d355750600954155b611d815760405162461bcd60e51b815260206004820152601e60248201527f56657374696e6720706172616d657465727320616c726561647920736574000060448201526064016107af565b8051825114611e065760405162461bcd60e51b8152602060048201526044602482018190527f556e6c6f636b696e672054696d6573206c656e677468206d7573742062652065908201527f7175616c20776974682050657263656e742050657220506f7274696f6e206c656064820152630dccee8d60e31b608482015260a4016107af565b600c54600160a01b900460ff16611e2f5760405162461bcd60e51b81526004016107af906127bf565b60126001015482600081518110611e4857611e486126d9565b602002602001015111611eb55760405162461bcd60e51b815260206004820152602f60248201527f556e6c6f636b2074696d65206d7573742062652061667465722074686520646960448201526e73747269627574696f6e20656e647360881b60648201526084016107af565b6000805b8351811015611a3e578015611f655783611ed4600183612762565b81518110611ee457611ee46126d9565b6020026020010151848281518110611efe57611efe6126d9565b602002602001015111611f655760405162461bcd60e51b815260206004820152602960248201527f556e6c6f636b2074696d65206d7573742062652067726561746572207468616e6044820152682070726576696f757360b81b60648201526084016107af565b6009848281518110611f7957611f796126d9565b602090810291909101810151825460018101845560009384529190922001558251600a90849083908110611faf57611faf6126d9565b602090810291909101810151825460018101845560009384529190922001558251611fe690849083908110611a1357611a136126d9565b915080611ff281612705565b915050611eb9565b600c546001600160a01b031633146120245760405162461bcd60e51b81526004016107af90612779565b6001600160a01b03909116600090815260046020526040902055565b6001600160a01b03811660009081526020819052604090206002015460ff16156120ac5760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320616c7265616479207265676973746572656400000000000060448201526064016107af565b604080516060810182524281526000602080830182815260018486018181526001600160a01b03881680865285855287862096518755925186830155516002958601805460ff19169115159190911790558454845290915292812080546001600160a01b03191690931790925580549161212583612705565b9190505550806001600160a01b03167f6f3bf3fa84e4763a43b3d23f9d79be242d6d5c834941ff4c1111b67469e1150c4260405161216591815260200190565b60405180910390a250565b600061217c8284612838565b9392505050565b600061217c8284612857565b600061217c8284612879565b600061217c8284612762565b6020808252825182820181905260009190848201906040850190845b818110156121df578351835292840192918401916001016121c3565b50909695505050505050565b80356001600160a01b038116811461220257600080fd5b919050565b60006020828403121561221957600080fd5b61217c826121eb565b60006020828403121561223457600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156121df5783516001600160a01b031683529284019291840191600101612257565b6000806040838503121561228f57600080fd5b50508035926020909101359150565b600080604083850312156122b157600080fd5b6122ba836121eb565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715612301576123016122c8565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715612330576123306122c8565b604052919050565b600067ffffffffffffffff821115612352576123526122c8565b5060051b60200190565b6000602080838503121561236f57600080fd5b823567ffffffffffffffff81111561238657600080fd5b8301601f8101851361239757600080fd5b80356123aa6123a582612338565b612307565b81815260059190911b820183019083810190878311156123c957600080fd5b928401925b828410156123ee576123df846121eb565b825292840192908401906123ce565b979650505050505050565b600082601f83011261240a57600080fd5b8135602061241a6123a583612338565b82815260059290921b8401810191818101908684111561243957600080fd5b8286015b84811015612454578035835291830191830161243d565b509695505050505050565b6000806040838503121561247257600080fd5b82359150602083013567ffffffffffffffff81111561249057600080fd5b61249c858286016123f9565b9150509250929050565b6000806000606084860312156124bb57600080fd5b83359250602084013591506124d2604085016121eb565b90509250925092565b600060208083850312156124ee57600080fd5b823567ffffffffffffffff81111561250557600080fd5b8301601f8101851361251657600080fd5b80356125246123a582612338565b81815260069190911b8201830190838101908783111561254357600080fd5b928401925b828410156123ee57604084890312156125615760008081fd5b6125696122de565b612572856121eb565b81528486013586820152825260409093019290840190612548565b600080604083850312156125a057600080fd5b823567ffffffffffffffff808211156125b857600080fd5b6125c4868387016123f9565b935060208501359150808211156125da57600080fd5b5061249c858286016123f9565b6020808252602d908201527f526567697374726174696f6e20726f756e64206973206f766572206f72206e6f60408201526c1d081cdd185c9d1959081e595d609a1b606082015260800190565b60208082526019908201527f416c6c6f77732061646d696e2061646472657373206f6e6c7900000000000000604082015260600190565b6020808252601e908201527f56657374696e6720706172616d657465727320617265206e6f74207365740000604082015260600190565b6020808252601c908201527f5468657265206973206e6f7468696e6720746f20776974686472617700000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612717576127176126ef565b5060010190565b60208082526024908201527f5468657265206973206e6f207375636820616d6f756e7420746f2077696474686040820152636472617760e01b606082015260800190565b600082821015612774576127746126ef565b500390565b60208082526026908201527f416c6c6f777320646973747269627574696f6e206f776e65722061646472657360408201526573206f6e6c7960d01b606082015260800190565b6020808252601b908201527f446973747269627574696f6e206973206e6f7420637265617465640000000000604082015260600190565b60208082526022908201527f50726f76696465642061646472657373206973206e6f74207265676973746572604082015261195960f21b606082015260800190565b6000816000190483118215151615612852576128526126ef565b500290565b60008261287457634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561288c5761288c6126ef565b50019056fea26469706673582212205983632ce0e8189a08a7441213f6e91b326f0bebf289005b97f0c973983e799b64736f6c634300080e0033",
  "bytecodeSha1": "19d86bda063ad19ae5a3d846f42dee35c6f28955",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "DistributorNative",
  "coverageMap": {
    "branches": {
      "0": {},
      "2": {
        "DistributorNative._registerUser": {
          "149": [
            13713,
            13750,
            true
          ]
        },
        "DistributorNative.depositTokens": {
          "114": [
            12717,
            12739,
            true
          ],
          "115": [
            12789,
            12818,
            true
          ],
          "116": [
            12887,
            12939,
            true
          ]
        },
        "DistributorNative.participate": {
          "133": [
            3123,
            3169,
            false
          ],
          "134": [
            3185,
            3229,
            true
          ],
          "135": [
            4090,
            4132,
            true
          ]
        },
        "DistributorNative.registerMultipleUsers": {
          "128": [
            2815,
            2861,
            false
          ],
          "129": [
            2878,
            2922,
            false
          ],
          "130": [
            2940,
            2967,
            true
          ],
          "131": [
            3672,
            3693,
            true
          ],
          "132": [
            3826,
            3867,
            false
          ]
        },
        "DistributorNative.setAddressDistributionAmount": {
          "127": [
            9804,
            9840,
            true
          ]
        },
        "DistributorNative.setDistributionParameters": {
          "139": [
            10135,
            10158,
            true
          ]
        },
        "DistributorNative.setDistributionRound": {
          "112": [
            10866,
            10888,
            true
          ],
          "113": [
            10946,
            10984,
            true
          ]
        },
        "DistributorNative.setEventVestingParams": {
          "136": [
            7355,
            7387,
            true
          ],
          "137": [
            7468,
            7490,
            true
          ],
          "138": [
            7790,
            7819,
            true
          ]
        },
        "DistributorNative.setMultipleAddressDistributionAmount": {
          "140": [
            9238,
            9261,
            true
          ],
          "141": [
            9460,
            9503,
            true
          ]
        },
        "DistributorNative.setRegistrationRound": {
          "117": [
            10524,
            10553,
            false
          ],
          "118": [
            10569,
            10590,
            true
          ]
        },
        "DistributorNative.setVestingEndDate": {
          "109": [
            11330,
            11365,
            false
          ],
          "110": [
            11381,
            11417,
            true
          ],
          "111": [
            11504,
            11578,
            true
          ]
        },
        "DistributorNative.setVestingParams": {
          "142": [
            8072,
            8108,
            false
          ],
          "143": [
            8124,
            8161,
            true
          ],
          "144": [
            8235,
            8277,
            true
          ],
          "145": [
            8368,
            8390,
            true
          ],
          "146": [
            8440,
            8486,
            true
          ],
          "147": [
            8651,
            8656,
            false
          ],
          "148": [
            8684,
            8727,
            true
          ]
        },
        "DistributorNative.withdraw": {
          "101": [
            4377,
            4412,
            false
          ],
          "102": [
            4428,
            4464,
            true
          ],
          "103": [
            4538,
            4576,
            true
          ],
          "104": [
            4624,
            4665,
            true
          ],
          "105": [
            4731,
            4761,
            true
          ],
          "106": [
            5088,
            5135,
            false
          ],
          "107": [
            5451,
            5470,
            true
          ],
          "108": [
            5522,
            5562,
            true
          ]
        },
        "DistributorNative.withdrawEvent": {
          "119": [
            5949,
            5971,
            true
          ],
          "120": [
            6024,
            6054,
            true
          ],
          "121": [
            6777,
            6796,
            true
          ],
          "122": [
            6848,
            6888,
            true
          ]
        },
        "DistributorNative.withdrawLeftover": {
          "123": [
            13153,
            13171,
            true
          ],
          "124": [
            13221,
            13254,
            true
          ],
          "125": [
            13311,
            13329,
            true
          ],
          "126": [
            13488,
            13500,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "SafeMath.add": {
          "99": [
            2832,
            2844
          ]
        },
        "SafeMath.div": {
          "98": [
            3927,
            3939
          ]
        },
        "SafeMath.mul": {
          "97": [
            3542,
            3554
          ]
        },
        "SafeMath.sub": {
          "100": [
            3199,
            3211
          ]
        }
      },
      "2": {
        "DistributorNative._registerUser": {
          "92": [
            13705,
            13781
          ],
          "93": [
            13800,
            13864
          ],
          "94": [
            13874,
            13925
          ],
          "95": [
            13935,
            13955
          ],
          "96": [
            13966,
            14008
          ]
        },
        "DistributorNative.depositTokens": {
          "28": [
            12709,
            12771
          ],
          "29": [
            12781,
            12856
          ],
          "30": [
            12866,
            13031
          ],
          "31": [
            13042,
            13077
          ]
        },
        "DistributorNative.getRegisteredUsers": {
          "18": [
            12004,
            12038
          ],
          "19": [
            11918,
            11921
          ],
          "20": [
            12059,
            12075
          ]
        },
        "DistributorNative.getVestingPortions": {
          "32": [
            12167,
            12198
          ]
        },
        "DistributorNative.getVestingUnlocks": {
          "1": [
            12288,
            12320
          ]
        },
        "DistributorNative.participate": {
          "61": [
            4082,
            4165
          ],
          "62": [
            4184,
            4249
          ],
          "63": [
            4260,
            4306
          ]
        },
        "DistributorNative.register": {
          "0": [
            3380,
            3405
          ]
        },
        "DistributorNative.registerMultipleUsers": {
          "57": [
            3664,
            3751
          ],
          "58": [
            3887,
            3915
          ],
          "59": [
            3802,
            3805
          ],
          "60": [
            3950,
            4001
          ]
        },
        "DistributorNative.registerUser": {
          "2": [
            3513,
            3536
          ]
        },
        "DistributorNative.setAddressDistributionAmount": {
          "55": [
            9796,
            9879
          ],
          "56": [
            9890,
            9942
          ]
        },
        "DistributorNative.setAddressEvent": {
          "91": [
            12591,
            12624
          ]
        },
        "DistributorNative.setDistributionParameters": {
          "72": [
            10127,
            10191
          ],
          "73": [
            10202,
            10229
          ],
          "74": [
            10239,
            10308
          ],
          "75": [
            10319,
            10355
          ],
          "76": [
            10366,
            10395
          ]
        },
        "DistributorNative.setDistributionRound": {
          "24": [
            10858,
            10928
          ],
          "25": [
            10938,
            11045
          ],
          "26": [
            11056,
            11171
          ],
          "27": [
            11182,
            11224
          ]
        },
        "DistributorNative.setEventVestingParams": {
          "64": [
            7347,
            7450
          ],
          "65": [
            7460,
            7522
          ],
          "66": [
            7533,
            7566
          ],
          "67": [
            7665,
            7708
          ],
          "68": [
            7722,
            7761
          ],
          "69": [
            7646,
            7649
          ],
          "70": [
            7782,
            7848
          ],
          "71": [
            7859,
            7901
          ]
        },
        "DistributorNative.setMultipleAddressDistributionAmount": {
          "77": [
            9230,
            9320
          ],
          "78": [
            9452,
            9542
          ],
          "79": [
            9557,
            9626
          ],
          "80": [
            9373,
            9376
          ],
          "81": [
            9647,
            9683
          ]
        },
        "DistributorNative.setRegistrationRound": {
          "33": [
            10503,
            10600
          ],
          "34": [
            10611,
            10651
          ],
          "35": [
            10661,
            10697
          ],
          "36": [
            10708,
            10750
          ]
        },
        "DistributorNative.setVestingEndDate": {
          "21": [
            11309,
            11473
          ],
          "22": [
            11483,
            11676
          ],
          "23": [
            11687,
            11712
          ]
        },
        "DistributorNative.setVestingParams": {
          "82": [
            8051,
            8217
          ],
          "83": [
            8227,
            8350
          ],
          "84": [
            8360,
            8422
          ],
          "85": [
            8432,
            8538
          ],
          "86": [
            8676,
            8773
          ],
          "87": [
            8802,
            8852
          ],
          "88": [
            8866,
            8909
          ],
          "89": [
            8923,
            8962
          ],
          "90": [
            8628,
            8631
          ]
        },
        "DistributorNative.stopRegistrationRound": {
          "3": [
            12393,
            12427
          ],
          "4": [
            12438,
            12484
          ]
        },
        "DistributorNative.withdraw": {
          "5": [
            4356,
            4520
          ],
          "6": [
            4530,
            4606
          ],
          "7": [
            4616,
            4713
          ],
          "8": [
            4723,
            4803
          ],
          "9": [
            4923,
            4999
          ],
          "10": [
            5352,
            5408
          ],
          "11": [
            5065,
            5068
          ],
          "12": [
            5443,
            5504
          ],
          "13": [
            5514,
            5603
          ],
          "14": [
            5622,
            5658
          ],
          "15": [
            5668,
            5762
          ],
          "16": [
            5773,
            5818
          ],
          "17": [
            5837,
            5886
          ]
        },
        "DistributorNative.withdrawEvent": {
          "37": [
            5941,
            6006
          ],
          "38": [
            6016,
            6085
          ],
          "39": [
            6205,
            6281
          ],
          "40": [
            6590,
            6678
          ],
          "41": [
            6692,
            6748
          ],
          "42": [
            6391,
            6394
          ],
          "43": [
            6769,
            6830
          ],
          "44": [
            6840,
            6929
          ],
          "45": [
            6940,
            6976
          ],
          "46": [
            6986,
            7080
          ],
          "47": [
            7091,
            7136
          ],
          "48": [
            7155,
            7204
          ]
        },
        "DistributorNative.withdrawLeftover": {
          "49": [
            13145,
            13203
          ],
          "50": [
            13213,
            13293
          ],
          "51": [
            13303,
            13360
          ],
          "52": [
            13480,
            13533
          ],
          "53": [
            13552,
            13576
          ],
          "54": [
            13595,
            13633
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.6.0/SafeMath"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "117:13900:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1750:44;;;;;;;;;;-1:-1:-1;1750:44:2;;;;;;;;;;;;;;;;;;210:25:3;;;266:2;251:18;;244:34;;;;321:14;314:22;294:18;;;287:50;198:2;183:18;1750:44:2;;;;;;;;3315:97;;;;;;;;;;;;;:::i;:::-;;12210:117;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1851:44::-;;;;;;;;;;-1:-1:-1;1851:44:2;;;;;;;;;;;1150:14:3;;1143:22;1125:41;;1113:2;1098:18;1851:44:2;985:187:3;1450:43:2;;;;;;;;;;;;;;;;;;;1323:25:3;;;1311:2;1296:18;1450:43:2;1177:177:3;3418:125:2;;;;;;;;;;-1:-1:-1;3418:125:2;;;;;:::i;:::-;;:::i;12333:158::-;;;;;;;;;;;;;:::i;1073:63::-;;;;;;;;;;-1:-1:-1;1073:63:2;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1073:63:2;;;;;;-1:-1:-1;;;;;2077:32:3;;;2059:51;;2047:2;2032:18;1073:63:2;1913:203:3;1499:45:2;;;;;;;;;;;;;;;;4319:1574;;;;;;;;;;;;;:::i;1403:41::-;;;;;;;;;;;;;;;;1705:39;;;;;;;;;;-1:-1:-1;1705:39:2;;;;;;;;-1:-1:-1;;;;;1705:39:2;;;;-1:-1:-1;;;1705:39:2;;;;;-1:-1:-1;;;1705:39:2;;;;;;;;;;;-1:-1:-1;;;;;2386:32:3;;;2368:51;;2462:14;;2455:22;2450:2;2435:18;;2428:50;2521:14;;2514:22;2494:18;;;2487:50;;;;2568:2;2553:18;;2546:34;;;;2611:3;2596:19;;2589:35;2355:3;2340:19;1705:39:2;2121:509:3;1273:57:2;;;;;;;;;;-1:-1:-1;1273:57:2;;;;;:::i;:::-;;;;;;;;;;;;;;11725:357;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;11237:482::-;;;;;;;;;;-1:-1:-1;11237:482:2;;;;;:::i;:::-;;:::i;10763:468::-;;;;;;;;;;-1:-1:-1;10763:468:2;;;;;:::i;:::-;;:::i;12637:447::-;;;:::i;12088:117::-;;;;;;;;;;;;;:::i;10408:349::-;;;;;;;;;;-1:-1:-1;10408:349:2;;;;;:::i;:::-;;:::i;1608:51::-;;;;;;;;;;-1:-1:-1;1608:51:2;;;;;:::i;:::-;;:::i;1011:56::-;;;;;;;;;;-1:-1:-1;1011:56:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1336:60;;;;;;;;;;-1:-1:-1;1336:60:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;5899:1312;;;;;;;;;;;;;:::i;13090:550::-;;;;;;;;;;;;;:::i;1142:61::-;;;;;;;;;;;;;;;;1800:44;;;;;;;;;;-1:-1:-1;1800:44:2;;;;;;;;;;;;;3725:25:3;;;3781:2;3766:18;;3759:34;;;;3698:18;1800:44:2;3551:248:3;9696:253:2;;;;;;;;;;-1:-1:-1;9696:253:2;;;;;:::i;:::-;;:::i;3549:459::-;;;;;;;;;;-1:-1:-1;3549:459:2;;;;;:::i;:::-;;:::i;4014:299::-;;;;;;;;;;;;;:::i;7217:691::-;;;;;;;;;;-1:-1:-1;7217:691:2;;;;;:::i;:::-;;:::i;9955:447::-;;;;;;;;;;-1:-1:-1;9955:447:2;;;;;:::i;:::-;;:::i;9123:567::-;;;;;;;;;;-1:-1:-1;9123:567:2;;;;;:::i;:::-;;:::i;1550:52::-;;;;;;;;;;-1:-1:-1;1550:52:2;;;;;:::i;:::-;;:::i;7914:1203::-;;;;;;;;;;-1:-1:-1;7914:1203:2;;;;;:::i;:::-;;:::i;12497:134::-;;;;;;;;;;-1:-1:-1;12497:134:2;;;;;:::i;:::-;;:::i;1666:32::-;;;;;;;;;;-1:-1:-1;1666:32:2;;;;-1:-1:-1;;;;;1666:32:2;;;1210:57;;;;;;;;;;-1:-1:-1;1210:57:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;9216:25:3;;;9284:14;;9277:22;9272:2;9257:18;;9250:50;9189:18;1210:57:2;9048:258:3;3315:97:2;2834:17;:27;2815:15;:46;;;;:107;;-1:-1:-1;2897:25:2;;2878:15;:44;;2815:107;:152;;;;-1:-1:-1;2940:27:2;;;;2939:28;2815:152;2794:235;;;;-1:-1:-1;;;2794:235:2;;;;;;;:::i;:::-;;;;;;;;;3380:25:::1;3394:10;3380:13;:25::i;:::-;3315:97::o:0;12210:117::-;12260:16;12295:25;12288:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12210:117;:::o;3418:125::-;2834:17;:27;2815:15;:46;;;;:107;;-1:-1:-1;2897:25:2;;2878:15;:44;;2815:107;:152;;;;-1:-1:-1;2940:27:2;;;;2939:28;2815:152;2794:235;;;;-1:-1:-1;;;2794:235:2;;;;;;;:::i;:::-;2536:5:::1;::::0;-1:-1:-1;;;;;2536:5:2::1;2522:10;:19;2514:57;;;;-1:-1:-1::0;;;2514:57:2::1;;;;;;;:::i;:::-;3513:23:::2;3527:8;3513:13;:23::i;:::-;3418:125:::0;:::o;12333:158::-;2536:5;;-1:-1:-1;;;;;2536:5:2;2522:10;:19;2514:57;;;;-1:-1:-1;;;2514:57:2;;;;;;;:::i;:::-;12393:27;:34;;-1:-1:-1;;12393:34:2::1;12423:4;12393:34;::::0;;12443:41:::1;::::0;::::1;::::0;::::1;::::0;12468:15:::1;1323:25:3::0;;1311:2;1296:18;;1177:177;12443:41:2::1;;;;;;;;12333:158::o:0;4319:1574::-;4377:24;:31;:35;;;;:87;;-1:-1:-1;4428:25:2;:32;:36;;4377:87;4356:164;;;;-1:-1:-1;;;4356:164:2;;;;;;;:::i;:::-;4552:10;4538:13;:25;;;;;;;;;;:38;;;;;4530:76;;;;-1:-1:-1;;;4530:76:2;;10640:2:3;4530:76:2;;;10622:21:3;10679:2;10659:18;;;10652:30;10718:27;10698:18;;;10691:55;10763:18;;4530:76:2;10438:349:3;4530:76:2;4639:10;4624:26;;;;:14;:26;;;;;:41;;;;;4616:97;;;;-1:-1:-1;;;4616:97:2;;10994:2:3;4616:97:2;;;10976:21:3;11033:2;11013:18;;;11006:30;11072:34;11052:18;;;11045:62;-1:-1:-1;;;11123:18:3;;;11116:41;11174:19;;4616:97:2;10792:407:3;4616:97:2;4750:10;4732:29;;;;:17;:29;;;;;;;;4731:30;4723:80;;;;-1:-1:-1;;;4723:80:2;;11406:2:3;4723:80:2;;;11388:21:3;11445:2;11425:18;;;11418:30;11484:34;11464:18;;;11457:62;-1:-1:-1;;;11535:18:3;;;11528:35;11580:19;;4723:80:2;11204:401:3;4723:80:2;4901:10;4814:23;4887:25;;;;;;;;;;4931:31;;;;4923:76;;;;-1:-1:-1;;;4923:76:2;;;;;;;:::i;:::-;5015:6;5010:423;5031:25;:32;5027:36;;5010:423;;;5107:25;5133:1;5107:28;;;;;;;;:::i;:::-;;;;;;;;;5088:15;:47;5084:339;;5156:25;5184:149;5316:16;;5184:106;5262:24;5287:1;5262:27;;;;;;;;:::i;:::-;;;;;;;;;5184:12;:52;;;:77;;:106;;;;:::i;:::-;:131;;:149::i;:::-;5156:177;-1:-1:-1;5370:38:2;:15;5156:177;5370:19;:38::i;:::-;5352:56;;5137:286;5084:339;5065:3;;;;:::i;:::-;;;;5010:423;;;;5469:1;5451:15;:19;5443:61;;;;-1:-1:-1;;;5443:61:2;;12573:2:3;5443:61:2;;;12555:21:3;12612:2;12592:18;;;12585:30;12651:31;12631:18;;;12624:59;12700:18;;5443:61:2;12371:353:3;5443:61:2;5541:21;5522:15;:40;;5514:89;;;;-1:-1:-1;;;5514:89:2;;;;;;;:::i;:::-;5640:10;5622:29;;;;:17;:29;;;;;:36;;-1:-1:-1;;5622:36:2;5654:4;5622:36;;;5706:35;;:56;;5746:15;5706:39;:56::i;:::-;5668:35;:94;5773:45;;5781:10;;5773:45;;;;;5802:15;;5773:45;;;;5802:15;5781:10;5773:45;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5842:44:2;;1323:25:3;;;5858:10:2;;5842:44;;1311:2:3;1296:18;5842:44:2;;;;;;;4346:1547;;4319:1574::o;11725:357::-;11776:16;11804:26;11847:18;;11833:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11833:33:2;;11804:62;;11882:6;11877:172;11898:18;;11894:1;:22;11877:172;;;11937:27;11967:23;;;:20;:23;;;;;;12004:12;;-1:-1:-1;;;;;11967:23:2;;;;;;12004:9;;11988:1;;12004:12;;;;;;:::i;:::-;-1:-1:-1;;;;;12004:34:2;;;:12;;;;;;;;;;;:34;-1:-1:-1;11918:3:2;;;;:::i;:::-;;;;11877:172;;;-1:-1:-1;12066:9:2;11725:357;-1:-1:-1;11725:357:2:o;11237:482::-;2536:5;;-1:-1:-1;;;;;2536:5:2;2522:10;:19;2514:57;;;;-1:-1:-1;;;2514:57:2;;;;;;;:::i;:::-;11330:24:::1;:31:::0;:35;;;;:87:::1;;-1:-1:-1::0;11381:25:2::1;:32:::0;:36;;11330:87:::1;11309:164;;;;-1:-1:-1::0;;;11309:164:2::1;;;;;;;:::i;:::-;11515:25;11541:32:::0;;:36:::1;::::0;11576:1:::1;::::0;11541:36:::1;:::i;:::-;11515:63;;;;;;;;:::i;:::-;;;;;;;;;11504:8;:74;11483:193;;;::::0;-1:-1:-1;;;11483:193:2;;13466:2:3;11483:193:2::1;::::0;::::1;13448:21:3::0;13505:2;13485:18;;;13478:30;13544:34;13524:18;;;13517:62;13615:34;13595:18;;;13588:62;-1:-1:-1;;;13666:19:3;;;13659:39;13715:19;;11483:193:2::1;13264:476:3::0;11483:193:2::1;11687:14;:25:::0;11237:482::o;10763:468::-;2536:5;;-1:-1:-1;;;;;2536:5:2;2522:10;:19;2514:57;;;;-1:-1:-1;;;2514:57:2;;;;;;;:::i;:::-;10866:12:::1;:22:::0;-1:-1:-1;;;10866:22:2;::::1;;;10858:70;;;::::0;-1:-1:-1;;;10858:70:2;;13947:2:3;10858:70:2::1;::::0;::::1;13929:21:3::0;13986:2;13966:18;;;13959:30;14025:34;14005:18;;;13998:62;-1:-1:-1;;;14076:18:3;;;14069:33;14119:19;;10858:70:2::1;13745:399:3::0;10858:70:2::1;10959:25:::0;;10946:38;::::1;10938:107;;;::::0;-1:-1:-1;;;10938:107:2;;14351:2:3;10938:107:2::1;::::0;::::1;14333:21:3::0;14390:2;14370:18;;;14363:30;14429:34;14409:18;;;14402:62;14500:26;14480:18;;;14473:54;14544:19;;10938:107:2::1;14149:420:3::0;10938:107:2::1;11076:95;::::0;;;;::::1;::::0;;;;;::::1;;::::0;;;11056:17:::1;:115:::0;;;;;;;11187:37;::::1;::::0;::::1;::::0;11208:15:::1;1323:25:3::0;;1311:2;1296:18;;1177:177;11187:37:2::1;;;;;;;;10763:468:::0;;:::o;12637:447::-;2660:12;:18;-1:-1:-1;;;;;2660:18:2;2646:10;:32;2638:83;;;;-1:-1:-1;;;2638:83:2;;;;;;;:::i;:::-;12717:12:::1;:22:::0;-1:-1:-1;;;12717:22:2;::::1;;;12709:62;;;;-1:-1:-1::0;;;12709:62:2::1;;;;;;;:::i;:::-;12790:12;:28:::0;-1:-1:-1;;;12790:28:2;::::1;;;12789:29;12781:75;;;::::0;-1:-1:-1;;;12781:75:2;;15539:2:3;12781:75:2::1;::::0;::::1;15521:21:3::0;15578:2;15558:18;;;15551:30;15617:34;15597:18;;;15590:62;-1:-1:-1;;;15668:18:3;;;15661:31;15709:19;;12781:75:2::1;15337:397:3::0;12781:75:2::1;12900:39:::0;;12887:9:::1;:52;12866:165;;;::::0;-1:-1:-1;;;12866:165:2;;15941:2:3;12866:165:2::1;::::0;::::1;15923:21:3::0;15980:2;15960:18;;;15953:30;16019:34;15999:18;;;15992:62;16090:34;16070:18;;;16063:62;-1:-1:-1;;;16141:19:3;;;16134:42;16193:19;;12866:165:2::1;15739:479:3::0;12866:165:2::1;13042:12;:35:::0;;-1:-1:-1;;;;13042:35:2::1;-1:-1:-1::0;;;13042:35:2::1;::::0;;12637:447::o;12088:117::-;12139:16;12174:24;12167:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12088:117;:::o;10408:349::-;2536:5;;-1:-1:-1;;;;;2536:5:2;2522:10;:19;2514:57;;;;-1:-1:-1;;;2514:57:2;;;;;;;:::i;:::-;10538:15:::1;10524:10;:29;;:66;;;;;10580:10;10569:8;:21;10524:66;10503:97;;;::::0;::::1;;10611:17;:40:::0;;;10661:25;:36;;;10713:37:::1;::::0;10734:15:::1;1323:25:3::0;;10713:37:2::1;::::0;1311:2:3;1296:18;10713:37:2::1;1177:177:3::0;1608:51:2;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1608:51:2;:::o;5899:1312::-;5970:1;5949:18;;:22;5941:65;;;;-1:-1:-1;;;5941:65:2;;;;;;;:::i;:::-;6043:10;6025:29;;;;:17;:29;;;;;;;;6024:30;6016:69;;;;-1:-1:-1;;;6016:69:2;;16425:2:3;6016:69:2;;;16407:21:3;16464:2;16444:18;;;16437:30;16503:28;16483:18;;;16476:56;16549:18;;6016:69:2;16223:350:3;6016:69:2;6183:10;6096:23;6169:25;;;;;;;;;;6213:31;;;;6205:76;;;;-1:-1:-1;;;6205:76:2;;;;;;;:::i;:::-;6335:10;6300:17;6320:26;;;:14;:26;;;;;;;6356:403;6377:12;6373:1;:16;6356:403;;;6410:25;6438:137;6558:16;;6438:98;6508:24;6533:1;6508:27;;;;;;;;:::i;:::-;;;;;;;;;6438:12;:48;;;:69;;:98;;;;:::i;:137::-;6624:31;;;;6410:165;;-1:-1:-1;6624:54:2;;6410:165;6624:35;:54::i;:::-;6590:31;;;:88;6710:38;:15;6730:17;6710:19;:38::i;:::-;6692:56;;6396:363;6391:3;;;;;:::i;:::-;;;;6356:403;;;;6795:1;6777:15;:19;6769:61;;;;-1:-1:-1;;;6769:61:2;;12573:2:3;6769:61:2;;;12555:21:3;12612:2;12592:18;;;12585:30;12651:31;12631:18;;;12624:59;12700:18;;6769:61:2;12371:353:3;6769:61:2;6867:21;6848:15;:40;;6840:89;;;;-1:-1:-1;;;6840:89:2;;;;;;;:::i;:::-;6958:10;6940:29;;;;:17;:29;;;;;:36;;-1:-1:-1;;6940:36:2;6972:4;6940:36;;;7024:35;;:56;;7064:15;7024:39;:56::i;:::-;6986:35;:94;7091:45;;7099:10;;7091:45;;;;;7120:15;;7091:45;;;;7120:15;7099:10;7091:45;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7160:44:2;;1323:25:3;;;7176:10:2;;7160:44;;1311:2:3;1296:18;7160:44:2;;;;;;;5931:1280;;;5899:1312::o;13090:550::-;2536:5;;-1:-1:-1;;;;;2536:5:2;2522:10;:19;2514:57;;;;-1:-1:-1;;;2514:57:2;;;;;;;:::i;:::-;13170:1:::1;13153:14;;:18;13145:58;;;::::0;-1:-1:-1;;;13145:58:2;;16780:2:3;13145:58:2::1;::::0;::::1;16762:21:3::0;16819:2;16799:18;;;16792:30;16858:29;16838:18;;;16831:57;16905:18;;13145:58:2::1;16578:351:3::0;13145:58:2::1;13240:14;;13221:15;:33;;13213:80;;;::::0;-1:-1:-1;;;13213:80:2;;17136:2:3;13213:80:2::1;::::0;::::1;17118:21:3::0;17175:2;17155:18;;;17148:30;17214:34;17194:18;;;17187:62;-1:-1:-1;;;17265:18:3;;;17258:32;17307:19;;13213:80:2::1;16934:398:3::0;13213:80:2::1;13312:17;::::0;::::1;;13311:18;13303:57;;;::::0;-1:-1:-1;;;13303:57:2;;17539:2:3;13303:57:2::1;::::0;::::1;17521:21:3::0;17578:2;17558:18;;;17551:30;17617:28;17597:18;;;17590:56;17663:18;;13303:57:2::1;17337:350:3::0;13303:57:2::1;13434:35:::0;;13390:39;;13371:16:::1;::::0;13390:80:::1;::::0;:39;:43:::1;:80::i;:::-;13371:99;;13499:1;13488:8;:12;13480:53;;;;-1:-1:-1::0;;;13480:53:2::1;;;;;;;:::i;:::-;13552:17;:24:::0;;-1:-1:-1;;13552:24:2::1;13572:4;13552:24;::::0;;13595:38:::1;::::0;13603:10:::1;::::0;13595:38;::::1;;;::::0;13624:8;;13552:17:::1;13595:38:::0;13552:17;13595:38;13624:8;13603:10;13595:38;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;13135:505;13090:550::o:0;9696:253::-;2536:5;;-1:-1:-1;;;;;2536:5:2;2522:10;:19;2514:57;;;;-1:-1:-1;;;2514:57:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;9804:23:2;::::1;:13;:23:::0;;;::::1;::::0;;;;;;:36:::1;;::::0;::::1;;9796:83;;;;-1:-1:-1::0;;;9796:83:2::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9890:23:2;;::::1;:13;:23:::0;;;::::1;::::0;;;;;;:42:::1;;:52:::0;9696:253::o;3549:459::-;2834:17;:27;2815:15;:46;;;;:107;;-1:-1:-1;2897:25:2;;2878:15;:44;;2815:107;:152;;;;-1:-1:-1;2940:27:2;;;;2939:28;2815:152;2794:235;;;;-1:-1:-1;;;2794:235:2;;;;;;;:::i;:::-;2536:5:::1;::::0;-1:-1:-1;;;;;2536:5:2::1;2522:10;:19;2514:57;;;;-1:-1:-1::0;;;2514:57:2::1;;;;;;;:::i;:::-;3692:1:::2;3672:10;:17;:21;3664:87;;;::::0;-1:-1:-1;;;3664:87:2;;18297:2:3;3664:87:2::2;::::0;::::2;18279:21:3::0;18336:2;18316:18;;;18309:30;18375:34;18355:18;;;18348:62;-1:-1:-1;;;18426:18:3;;;18419:51;18487:19;;3664:87:2::2;18095:417:3::0;3664:87:2::2;3767:6;3762:178;3783:10;:17;3779:1;:21;3762:178;;;3826:13;:28:::0;3840:10:::2;3851:1;3840:13;;;;;;;;:::i;:::-;;::::0;;::::2;::::0;;;;;;;-1:-1:-1;;;;;3826:28:2::2;::::0;;;::::2;::::0;;;;;;-1:-1:-1;3826:28:2;:41:::2;;::::0;::::2;;3821:109;;3887:28;3901:10;3912:1;3901:13;;;;;;;;:::i;:::-;;;;;;;3887;:28::i;:::-;3802:3:::0;::::2;::::0;::::2;:::i;:::-;;;;3762:178;;;-1:-1:-1::0;3955:46:2::2;::::0;3985:15:::2;1323:25:3::0;;3955:46:2::2;::::0;1311:2:3;1296:18;3955:46:2::2;;;;;;;;3549:459:::0;:::o;4014:299::-;3142:17;:27;3123:15;:46;;;;:106;;-1:-1:-1;3204:25:2;;3185:15;:44;;3123:106;3102:189;;;;-1:-1:-1;;;3102:189:2;;18719:2:3;3102:189:2;;;18701:21:3;18758:2;18738:18;;;18731:30;18797:34;18777:18;;;18770:62;-1:-1:-1;;;18848:18:3;;;18841:43;18901:19;;3102:189:2;18517:409:3;3102:189:2;4106:10:::1;4091:26;::::0;;;:14:::1;:26;::::0;;;;:41:::1;;::::0;::::1;;4090:42;4082:83;;;::::0;-1:-1:-1;;;4082:83:2;;19133:2:3;4082:83:2::1;::::0;::::1;19115:21:3::0;19172:2;19152:18;;;19145:30;19211;19191:18;;;19184:58;19259:18;;4082:83:2::1;18931:352:3::0;4082:83:2::1;4213:36;::::0;;;;::::1;::::0;;4227:15:::1;4213:36:::0;;;4244:4:::1;4213:36;::::0;;::::1;::::0;;;4199:10:::1;-1:-1:-1::0;4184:26:2;;;:14:::1;:26:::0;;;;;:65;;;;;;;;;::::1;::::0;;-1:-1:-1;;4184:65:2::1;::::0;::::1;;::::0;;;::::1;::::0;;;4265:41;;1323:25:3;;;4265:41:2::1;::::0;1296:18:3;4265:41:2::1;;;;;;;4014:299::o:0;7217:691::-;2536:5;;-1:-1:-1;;;;;2536:5:2;2522:10;:19;2514:57;;;;-1:-1:-1;;;2514:57:2;;;;;;;:::i;:::-;7371:9:::1;:16;7355:12;:32;7347:103;;;::::0;-1:-1:-1;;;7347:103:2;;19490:2:3;7347:103:2::1;::::0;::::1;19472:21:3::0;19529:2;19509:18;;;19502:30;19568:34;19548:18;;;19541:62;19639:28;19619:18;;;19612:56;19685:19;;7347:103:2::1;19288:422:3::0;7347:103:2::1;7468:12;:22:::0;-1:-1:-1;;;7468:22:2;::::1;;;7460:62;;;;-1:-1:-1::0;;;7460:62:2::1;;;;;;;:::i;:::-;7533:18;:33:::0;;;7577:17:::1;::::0;7608:164:::1;7632:12;7628:1;:16;7608:164;;;7665:24;7695:9;7705:1;7695:12;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;7665:43;;::::1;::::0;::::1;::::0;;-1:-1:-1;7665:43:2;;;;;;;::::1;::::0;7748:12;;7734:27:::1;::::0;7748:9;;7758:1;;7748:12;::::1;;;;;:::i;:::-;;;;;;;7734:9;:13;;:27;;;;:::i;:::-;7722:39:::0;-1:-1:-1;7646:3:2;::::1;::::0;::::1;:::i;:::-;;;;7608:164;;;;7810:9;7790:16;;:29;7782:66;;;::::0;-1:-1:-1;;;7782:66:2;;19917:2:3;7782:66:2::1;::::0;::::1;19899:21:3::0;19956:2;19936:18;;;19929:30;19995:26;19975:18;;;19968:54;20039:18;;7782:66:2::1;19715:348:3::0;7782:66:2::1;7864:37;::::0;7885:15:::1;1323:25:3::0;;7864:37:2::1;::::0;1311:2:3;1296:18;7864:37:2::1;;;;;;;7337:571;7217:691:::0;;:::o;9955:447::-;2536:5;;-1:-1:-1;;;;;2536:5:2;2522:10;:19;2514:57;;;;-1:-1:-1;;;2514:57:2;;;;;;;:::i;:::-;10136:12:::1;:22:::0;-1:-1:-1;;;10136:22:2;::::1;;;10135:23;10127:64;;;::::0;-1:-1:-1;;;10127:64:2;;20270:2:3;10127:64:2::1;::::0;::::1;20252:21:3::0;20309:2;20289:18;;;20282:30;20348;20328:18;;;20321:58;20396:18;;10127:64:2::1;20068:352:3::0;10127:64:2::1;10202:12;:27:::0;;10239:39;:69;;;;10319:16:::1;:36:::0;;;;-1:-1:-1;;;;;;10366:29:2;;;-1:-1:-1;;;;;10202:27:2;;::::1;10366:29:::0;;;;-1:-1:-1;;;10366:29:2::1;::::0;;9955:447::o;9123:567::-;2536:5;;-1:-1:-1;;;;;2536:5:2;2522:10;:19;2514:57;;;;-1:-1:-1;;;2514:57:2;;;;;;;:::i;:::-;9260:1:::1;9238:12;:19;:23;9230:90;;;::::0;-1:-1:-1;;;9230:90:2;;20627:2:3;9230:90:2::1;::::0;::::1;20609:21:3::0;20666:2;20646:18;;;20639:30;20705:34;20685:18;;;20678:62;-1:-1:-1;;;20756:18:3;;;20749:52;20818:19;;9230:90:2::1;20425:418:3::0;9230:90:2::1;9336:6;9331:306;9352:12;:19;9348:1;:23;9331:306;;;9392:28;9423:12;9436:1;9423:15;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;9474;;-1:-1:-1;;;;;9460:30:2::1;:13;:30:::0;;;;;;;;;;;:43:::1;;::::0;9423:15;;-1:-1:-1;9460:43:2::1;;9452:90;;;;-1:-1:-1::0;;;9452:90:2::1;;;;;;;:::i;:::-;9609:17;::::0;;::::1;::::0;9571:15;;-1:-1:-1;;;;;9557:30:2::1;:13;:30:::0;;;;;;;;;;:49:::1;;:69:::0;9373:3;::::1;::::0;::::1;:::i;:::-;;;;9331:306;;;-1:-1:-1::0;9652:31:2::1;::::0;9667:15:::1;1323:25:3::0;;9652:31:2::1;::::0;1311:2:3;1296:18;9652:31:2::1;1177:177:3::0;1550:52:2;;;;;;;;;;;;7914:1203;2536:5;;-1:-1:-1;;;;;2536:5:2;2522:10;:19;2514:57;;;;-1:-1:-1;;;2514:57:2;;;;;;;:::i;:::-;8072:24:::1;:31:::0;:36;:89;::::1;;;-1:-1:-1::0;8124:25:2::1;:32:::0;:37;8072:89:::1;8051:166;;;::::0;-1:-1:-1;;;8051:166:2;;21050:2:3;8051:166:2::1;::::0;::::1;21032:21:3::0;21089:2;21069:18;;;21062:30;21128:32;21108:18;;;21101:60;21178:18;;8051:166:2::1;20848:354:3::0;8051:166:2::1;8261:9;:16;8235:15;:22;:42;8227:123;;;::::0;-1:-1:-1;;;8227:123:2;;21409:2:3;8227:123:2::1;::::0;::::1;21391:21:3::0;21448:2;21428:18;;;21421:30;;;21487:34;21467:18;;;21460:62;21558:34;21538:18;;;21531:62;-1:-1:-1;;;21609:19:3;;;21602:35;21654:19;;8227:123:2::1;21207:472:3::0;8227:123:2::1;8368:12;:22:::0;-1:-1:-1;;;8368:22:2;::::1;;;8360:62;;;;-1:-1:-1::0;;;8360:62:2::1;;;;;;;:::i;:::-;8461:17;:25;;;8440:15;8456:1;8440:18;;;;;;;;:::i;:::-;;;;;;;:46;8432:106;;;::::0;-1:-1:-1;;;8432:106:2;;21886:2:3;8432:106:2::1;::::0;::::1;21868:21:3::0;21925:2;21905:18;;;21898:30;21964:34;21944:18;;;21937:62;-1:-1:-1;;;22015:18:3;;;22008:45;22070:19;;8432:106:2::1;21684:411:3::0;8432:106:2::1;8549:17;8585:9:::0;8580:393:::1;8604:15;:22;8600:1;:26;8580:393;;;8651:5:::0;;8647:141:::1;;8705:15:::0;8721:5:::1;8725:1;8721::::0;:5:::1;:::i;:::-;8705:22;;;;;;;;:::i;:::-;;;;;;;8684:15;8700:1;8684:18;;;;;;;;:::i;:::-;;;;;;;:43;8676:97;;;::::0;-1:-1:-1;;;8676:97:2;;22302:2:3;8676:97:2::1;::::0;::::1;22284:21:3::0;22341:2;22321:18;;;22314:30;22380:34;22360:18;;;22353:62;-1:-1:-1;;;22431:18:3;;;22424:39;22480:19;;8676:97:2::1;22100:405:3::0;8676:97:2::1;8802:25;8833:15;8849:1;8833:18;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;8802:50;;::::1;::::0;::::1;::::0;;-1:-1:-1;8802:50:2;;;;;;;::::1;::::0;8896:12;;8866:24:::1;::::0;8896:9;;8906:1;;8896:12;::::1;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;8866:43;;::::1;::::0;::::1;::::0;;-1:-1:-1;8866:43:2;;;;;;;::::1;::::0;8949:12;;8935:27:::1;::::0;8949:9;;8959:1;;8949:12;::::1;;;;;:::i;8935:27::-;8923:39:::0;-1:-1:-1;8628:3:2;::::1;::::0;::::1;:::i;:::-;;;;8580:393;;12497:134:::0;2660:12;:18;-1:-1:-1;;;;;2660:18:2;2646:10;:32;2638:83;;;;-1:-1:-1;;;2638:83:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;12591:24:2;;::::1;;::::0;;;:14:::1;:24;::::0;;;;:33;12497:134::o;13646:369::-;-1:-1:-1;;;;;13714:23:2;;:13;:23;;;;;;;;;;:36;;;;;13713:37;13705:76;;;;-1:-1:-1;;;13705:76:2;;22712:2:3;13705:76:2;;;22694:21:3;22751:2;22731:18;;;22724:30;22790:28;22770:18;;;22763:56;22836:18;;13705:76:2;22510:350:3;13705:76:2;13826:38;;;;;;;;13839:15;13826:38;;-1:-1:-1;13826:38:2;;;;;;;13859:4;13826:38;;;;;;-1:-1:-1;;;;;13800:23:2;;;;;;;;;;;:64;;;;;;;;;;;;;;;;;-1:-1:-1;;13800:64:2;;;;;;;;;;13895:18;;13874:40;;;;;;;;:51;;-1:-1:-1;;;;;;13874:51:2;;;;;;;13935:20;;;;;;:::i;:::-;;;;;;13982:8;-1:-1:-1;;;;;13971:37:2;;13992:15;13971:37;;;;1323:25:3;;1311:2;1296:18;;1177:177;13971:37:2;;;;;;;;13646:369;:::o;3465:96:0:-;3523:7;3549:5;3553:1;3549;:5;:::i;:::-;3542:12;3465:96;-1:-1:-1;;;3465:96:0:o;3850:::-;3908:7;3934:5;3938:1;3934;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;3122:96::-;3180:7;3206:5;3210:1;3206;:5;:::i;348:632:3:-;519:2;571:21;;;641:13;;544:18;;;663:22;;;490:4;;519:2;742:15;;;;716:2;701:18;;;490:4;785:169;799:6;796:1;793:13;785:169;;;860:13;;848:26;;929:15;;;;894:12;;;;821:1;814:9;785:169;;;-1:-1:-1;971:3:3;;348:632;-1:-1:-1;;;;;;348:632:3:o;1359:173::-;1427:20;;-1:-1:-1;;;;;1476:31:3;;1466:42;;1456:70;;1522:1;1519;1512:12;1456:70;1359:173;;;:::o;1537:186::-;1596:6;1649:2;1637:9;1628:7;1624:23;1620:32;1617:52;;;1665:1;1662;1655:12;1617:52;1688:29;1707:9;1688:29;:::i;1728:180::-;1787:6;1840:2;1828:9;1819:7;1815:23;1811:32;1808:52;;;1856:1;1853;1846:12;1808:52;-1:-1:-1;1879:23:3;;1728:180;-1:-1:-1;1728:180:3:o;2635:658::-;2806:2;2858:21;;;2928:13;;2831:18;;;2950:22;;;2777:4;;2806:2;3029:15;;;;3003:2;2988:18;;;2777:4;3072:195;3086:6;3083:1;3080:13;3072:195;;;3151:13;;-1:-1:-1;;;;;3147:39:3;3135:52;;3242:15;;;;3207:12;;;;3183:1;3101:9;3072:195;;3298:248;3366:6;3374;3427:2;3415:9;3406:7;3402:23;3398:32;3395:52;;;3443:1;3440;3433:12;3395:52;-1:-1:-1;;3466:23:3;;;3536:2;3521:18;;;3508:32;;-1:-1:-1;3298:248:3:o;3804:254::-;3872:6;3880;3933:2;3921:9;3912:7;3908:23;3904:32;3901:52;;;3949:1;3946;3939:12;3901:52;3972:29;3991:9;3972:29;:::i;:::-;3962:39;4048:2;4033:18;;;;4020:32;;-1:-1:-1;;;3804:254:3:o;4063:127::-;4124:10;4119:3;4115:20;4112:1;4105:31;4155:4;4152:1;4145:15;4179:4;4176:1;4169:15;4195:257;4267:4;4261:11;;;4299:17;;4346:18;4331:34;;4367:22;;;4328:62;4325:88;;;4393:18;;:::i;:::-;4429:4;4422:24;4195:257;:::o;4457:275::-;4528:2;4522:9;4593:2;4574:13;;-1:-1:-1;;4570:27:3;4558:40;;4628:18;4613:34;;4649:22;;;4610:62;4607:88;;;4675:18;;:::i;:::-;4711:2;4704:22;4457:275;;-1:-1:-1;4457:275:3:o;4737:183::-;4797:4;4830:18;4822:6;4819:30;4816:56;;;4852:18;;:::i;:::-;-1:-1:-1;4897:1:3;4893:14;4909:4;4889:25;;4737:183::o;4925:897::-;5009:6;5040:2;5083;5071:9;5062:7;5058:23;5054:32;5051:52;;;5099:1;5096;5089:12;5051:52;5139:9;5126:23;5172:18;5164:6;5161:30;5158:50;;;5204:1;5201;5194:12;5158:50;5227:22;;5280:4;5272:13;;5268:27;-1:-1:-1;5258:55:3;;5309:1;5306;5299:12;5258:55;5345:2;5332:16;5368:60;5384:43;5424:2;5384:43;:::i;:::-;5368:60;:::i;:::-;5462:15;;;5544:1;5540:10;;;;5532:19;;5528:28;;;5493:12;;;;5568:19;;;5565:39;;;5600:1;5597;5590:12;5565:39;5624:11;;;;5644:148;5660:6;5655:3;5652:15;5644:148;;;5726:23;5745:3;5726:23;:::i;:::-;5714:36;;5677:12;;;;5770;;;;5644:148;;;5811:5;4925:897;-1:-1:-1;;;;;;;4925:897:3:o;5827:662::-;5881:5;5934:3;5927:4;5919:6;5915:17;5911:27;5901:55;;5952:1;5949;5942:12;5901:55;5988:6;5975:20;6014:4;6038:60;6054:43;6094:2;6054:43;:::i;6038:60::-;6132:15;;;6218:1;6214:10;;;;6202:23;;6198:32;;;6163:12;;;;6242:15;;;6239:35;;;6270:1;6267;6260:12;6239:35;6306:2;6298:6;6294:15;6318:142;6334:6;6329:3;6326:15;6318:142;;;6400:17;;6388:30;;6438:12;;;;6351;;6318:142;;;-1:-1:-1;6478:5:3;5827:662;-1:-1:-1;;;;;;5827:662:3:o;6494:416::-;6587:6;6595;6648:2;6636:9;6627:7;6623:23;6619:32;6616:52;;;6664:1;6661;6654:12;6616:52;6700:9;6687:23;6677:33;;6761:2;6750:9;6746:18;6733:32;6788:18;6780:6;6777:30;6774:50;;;6820:1;6817;6810:12;6774:50;6843:61;6896:7;6887:6;6876:9;6872:22;6843:61;:::i;:::-;6833:71;;;6494:416;;;;;:::o;6915:322::-;6992:6;7000;7008;7061:2;7049:9;7040:7;7036:23;7032:32;7029:52;;;7077:1;7074;7067:12;7029:52;7113:9;7100:23;7090:33;;7170:2;7159:9;7155:18;7142:32;7132:42;;7193:38;7227:2;7216:9;7212:18;7193:38;:::i;:::-;7183:48;;6915:322;;;;;:::o;7242:1201::-;7353:6;7384:2;7427;7415:9;7406:7;7402:23;7398:32;7395:52;;;7443:1;7440;7433:12;7395:52;7483:9;7470:23;7516:18;7508:6;7505:30;7502:50;;;7548:1;7545;7538:12;7502:50;7571:22;;7624:4;7616:13;;7612:27;-1:-1:-1;7602:55:3;;7653:1;7650;7643:12;7602:55;7689:2;7676:16;7712:60;7728:43;7768:2;7728:43;:::i;7712:60::-;7806:15;;;7888:1;7884:10;;;;7876:19;;7872:28;;;7837:12;;;;7912:19;;;7909:39;;;7944:1;7941;7934:12;7909:39;7968:11;;;;7988:425;8004:6;7999:3;7996:15;7988:425;;;8086:4;8080:3;8071:7;8067:17;8063:28;8060:118;;;8132:1;8161:2;8157;8150:14;8060:118;8204:22;;:::i;:::-;8253:23;8272:3;8253:23;:::i;:::-;8239:38;;8326:12;;;8313:26;8297:14;;;8290:50;8353:18;;8030:4;8021:14;;;;8391:12;;;;7988:425;;8448:595;8566:6;8574;8627:2;8615:9;8606:7;8602:23;8598:32;8595:52;;;8643:1;8640;8633:12;8595:52;8683:9;8670:23;8712:18;8753:2;8745:6;8742:14;8739:34;;;8769:1;8766;8759:12;8739:34;8792:61;8845:7;8836:6;8825:9;8821:22;8792:61;:::i;:::-;8782:71;;8906:2;8895:9;8891:18;8878:32;8862:48;;8935:2;8925:8;8922:16;8919:36;;;8951:1;8948;8941:12;8919:36;;8974:63;9029:7;9018:8;9007:9;9003:24;8974:63;:::i;9311:409::-;9513:2;9495:21;;;9552:2;9532:18;;;9525:30;9591:34;9586:2;9571:18;;9564:62;-1:-1:-1;;;9657:2:3;9642:18;;9635:43;9710:3;9695:19;;9311:409::o;9725:349::-;9927:2;9909:21;;;9966:2;9946:18;;;9939:30;10005:27;10000:2;9985:18;;9978:55;10065:2;10050:18;;9725:349::o;10079:354::-;10281:2;10263:21;;;10320:2;10300:18;;;10293:30;10359:32;10354:2;10339:18;;10332:60;10424:2;10409:18;;10079:354::o;11610:352::-;11812:2;11794:21;;;11851:2;11831:18;;;11824:30;11890;11885:2;11870:18;;11863:58;11953:2;11938:18;;11610:352::o;11967:127::-;12028:10;12023:3;12019:20;12016:1;12009:31;12059:4;12056:1;12049:15;12083:4;12080:1;12073:15;12099:127;12160:10;12155:3;12151:20;12148:1;12141:31;12191:4;12188:1;12181:15;12215:4;12212:1;12205:15;12231:135;12270:3;12291:17;;;12288:43;;12311:18;;:::i;:::-;-1:-1:-1;12358:1:3;12347:13;;12231:135::o;12729:400::-;12931:2;12913:21;;;12970:2;12950:18;;;12943:30;13009:34;13004:2;12989:18;;12982:62;-1:-1:-1;;;13075:2:3;13060:18;;13053:34;13119:3;13104:19;;12729:400::o;13134:125::-;13174:4;13202:1;13199;13196:8;13193:34;;;13207:18;;:::i;:::-;-1:-1:-1;13244:9:3;;13134:125::o;14574:402::-;14776:2;14758:21;;;14815:2;14795:18;;;14788:30;14854:34;14849:2;14834:18;;14827:62;-1:-1:-1;;;14920:2:3;14905:18;;14898:36;14966:3;14951:19;;14574:402::o;14981:351::-;15183:2;15165:21;;;15222:2;15202:18;;;15195:30;15261:29;15256:2;15241:18;;15234:57;15323:2;15308:18;;14981:351::o;17692:398::-;17894:2;17876:21;;;17933:2;17913:18;;;17906:30;17972:34;17967:2;17952:18;;17945:62;-1:-1:-1;;;18038:2:3;18023:18;;18016:32;18080:3;18065:19;;17692:398::o;22865:168::-;22905:7;22971:1;22967;22963:6;22959:14;22956:1;22953:21;22948:1;22941:9;22934:17;22930:45;22927:71;;;22978:18;;:::i;:::-;-1:-1:-1;23018:9:3;;22865:168::o;23038:217::-;23078:1;23104;23094:132;;23148:10;23143:3;23139:20;23136:1;23129:31;23183:4;23180:1;23173:15;23211:4;23208:1;23201:15;23094:132;-1:-1:-1;23240:9:3;;23038:217::o;23260:128::-;23300:3;23331:1;23327:6;23324:1;23321:13;23318:39;;;23337:18;;:::i;:::-;-1:-1:-1;23373:9:3;;23260:128::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    117,
    14017
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8444F153 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xC44C209A GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xF1EF7FF2 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF1EF7FF2 EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xF4B7A413 EQ PUSH2 0x6C4 JUMPI DUP1 PUSH4 0xF5682523 EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x704 JUMPI DUP1 PUSH4 0xFC954144 EQ PUSH2 0x724 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC44C209A EQ PUSH2 0x60F JUMPI DUP1 PUSH4 0xD11711A2 EQ PUSH2 0x62F JUMPI DUP1 PUSH4 0xD64F6CB6 EQ PUSH2 0x644 JUMPI DUP1 PUSH4 0xDC865C82 EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0xE5664D84 EQ PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9BDEB335 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x9BDEB335 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0xA525D237 EQ PUSH2 0x594 JUMPI DUP1 PUSH4 0xAA6CB71D EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0xB1CDE244 EQ PUSH2 0x5BF JUMPI DUP1 PUSH4 0xBB0F0D51 EQ PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8444F153 EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x927F6AEE EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x942E6BCF EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x98C32A7F EQ PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x7073C072 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x7073C072 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x72C0FE1D EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0x793A2954 EQ PUSH2 0x493 JUMPI DUP1 PUSH4 0x7C4B414D EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0x7E87C053 EQ PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x3DB5A524 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x5EE58EFC EQ PUSH2 0x3AE JUMPI DUP1 PUSH4 0x62B21FA1 EQ PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1EEADFA8 GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x1EEADFA8 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x2199D5CD EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x23E8E9BF EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0x3C3EC8B7 EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x3C961FC2 EQ PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1754D62D EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x1AA3A008 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x1BA7DD1E EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x1C5F47EE EQ PUSH2 0x29C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH2 0x241 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x770 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x21A7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD PUSH2 0x2B6 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x2207 JUMP JUMPDEST PUSH2 0x81B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x890 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0x2222 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x25A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x903 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH2 0x3EC SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP4 DIV DUP2 AND SWAP4 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 SWAP4 DIV AND SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE SWAP4 ISZERO ISZERO PUSH1 0x20 DUP7 ADD MSTORE SWAP2 ISZERO ISZERO SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x25A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x43F CALLDATASIZE PUSH1 0x4 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x466 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x223B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x48E CALLDATASIZE PUSH1 0x4 PUSH2 0x2222 JUMP JUMPDEST PUSH2 0xCF8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x4AE CALLDATASIZE PUSH1 0x4 PUSH2 0x227C JUMP JUMPDEST PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x278 PUSH2 0xF63 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH2 0x10BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x4EB CALLDATASIZE PUSH1 0x4 PUSH2 0x227C JUMP JUMPDEST PUSH2 0x1110 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x50B CALLDATASIZE PUSH1 0x4 PUSH2 0x2222 JUMP JUMPDEST PUSH2 0x118C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH2 0x52B CALLDATASIZE PUSH1 0x4 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND DUP4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B6 PUSH2 0x56A CALLDATASIZE PUSH1 0x4 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x11AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x13EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x12 SLOAD PUSH1 0x13 SLOAD PUSH2 0x5DA SWAP2 SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x25A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x60A CALLDATASIZE PUSH1 0x4 PUSH2 0x229E JUMP JUMPDEST PUSH2 0x158E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x62A CALLDATASIZE PUSH1 0x4 PUSH2 0x235C JUMP JUMPDEST PUSH2 0x1612 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x17A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x650 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x65F CALLDATASIZE PUSH1 0x4 PUSH2 0x245F JUMP JUMPDEST PUSH2 0x18EE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x67F CALLDATASIZE PUSH1 0x4 PUSH2 0x24A6 JUMP JUMPDEST PUSH2 0x1AC8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x69F CALLDATASIZE PUSH1 0x4 PUSH2 0x24DB JUMP JUMPDEST PUSH2 0x1B81 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x6BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2222 JUMP JUMPDEST PUSH2 0x1CEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x6DF CALLDATASIZE PUSH1 0x4 PUSH2 0x258D JUMP JUMPDEST PUSH2 0x1CFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x6FF CALLDATASIZE PUSH1 0x4 PUSH2 0x229E JUMP JUMPDEST PUSH2 0x1FFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x710 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x355 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x75B PUSH2 0x73F CALLDATASIZE PUSH1 0x4 PUSH2 0x2207 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x25A JUMP JUMPDEST PUSH1 0xF SLOAD TIMESTAMP LT DUP1 ISZERO SWAP1 PUSH2 0x784 JUMPI POP PUSH1 0x10 SLOAD TIMESTAMP GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x793 JUMPI POP PUSH1 0x11 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x25E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7C1 CALLER PUSH2 0x2040 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x811 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x7FD JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD TIMESTAMP LT DUP1 ISZERO SWAP1 PUSH2 0x82F JUMPI POP PUSH1 0x10 SLOAD TIMESTAMP GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x83E JUMPI POP PUSH1 0x11 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x25E7 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x884 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x2634 JUMP JUMPDEST PUSH2 0x88D DUP2 PUSH2 0x2040 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x2634 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7069B20063A2C984D75A2165D1633FD0BE67AFE3680341D2FC5D0CCE78C9CEEA SWAP1 PUSH2 0x8F9 SWAP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xA SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x915 JUMPI POP PUSH1 0x9 SLOAD ISZERO ISZERO JUMPDEST PUSH2 0x931 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x266B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x993 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206973206E6F74207265676973746572656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND PUSH2 0xA09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646472657373206973206E6F742070617274696369706174656420696E2064 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x34B9BA3934B13ABA34B7B7 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573732068617320657865637574656420776974686472617720616C PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x7265616479 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0xAA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x26A2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0xB3C JUMPI PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAC7 JUMPI PUSH2 0xAC7 PUSH2 0x26D9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD TIMESTAMP LT PUSH2 0xB2A JUMPI PUSH1 0x0 PUSH2 0xB1A PUSH1 0x7 SLOAD PUSH2 0xB14 PUSH1 0xA DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xAF6 JUMPI PUSH2 0xAF6 PUSH2 0x26D9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x2170 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2183 JUMP JUMPDEST SWAP1 POP PUSH2 0xB26 DUP5 DUP3 PUSH2 0x218F JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 PUSH2 0xB34 DUP2 PUSH2 0x2705 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAAA JUMP JUMPDEST POP PUSH1 0x0 DUP3 GT PUSH2 0xB8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206973206E6F7468696E6720746F20776964746864726177000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST SELFBALANCE DUP3 GT ISZERO PUSH2 0xBAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x271E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xE SLOAD PUSH2 0xBD4 SWAP1 DUP4 PUSH2 0x218F JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC5D JUMPI PUSH2 0xC5D PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC86 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xCF2 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 SWAP1 DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xCC7 JUMPI PUSH2 0xCC7 PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE POP DUP1 PUSH2 0xCEA DUP2 PUSH2 0x2705 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC8C JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x2634 JUMP JUMPDEST PUSH1 0xA SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD34 JUMPI POP PUSH1 0x9 SLOAD ISZERO ISZERO JUMPDEST PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x266B JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH2 0xD60 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2762 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xD70 JUMPI PUSH2 0xD70 PUSH2 0x26D9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 GT PUSH2 0xE00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x48 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206C61737420646179206F662074686520646973747269627574696F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x206D757374206265206C61746572207468616E20746865206C61737420756E6C PUSH1 0x64 DUP3 ADD MSTORE PUSH8 0x6F636B2074696D65 PUSH1 0xC0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x2634 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446973747269627574696F6E20706172616D657465727320617265206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1CD95D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x10 SLOAD DUP3 GT PUSH2 0xF0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446973747269627574696F6E20726F756E64206D757374206265206C61746572 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207468616E20726567697374726174696F6E20726F756E640000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 SWAP1 MSTORE PUSH1 0x12 DUP4 SWAP1 SSTORE PUSH1 0x13 DUP3 SWAP1 SSTORE MLOAD PUSH32 0x7D5E91551DC6F3038619D85DA877B41440D669756A40EEB78B1C9DF6C6A988D5 SWAP1 PUSH2 0xF57 SWAP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x2779 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x101A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320686173206265656E206465706F736974656420616C72656164 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x79 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0xD SLOAD CALLVALUE EQ PUSH2 0x10A5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865206465706F73697420616D6F756E74206973206E6F7420657175616C20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F207468652070726573657420616D6F756E74206F66206469737472696275 PUSH1 0x64 DUP3 ADD MSTORE PUSH11 0x74696F6E20746F6B656E73 PUSH1 0xA8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x811 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x7FD JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x2634 JUMP JUMPDEST TIMESTAMP DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x1149 JUMPI POP DUP2 DUP2 GT JUMPDEST PUSH2 0x1152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF DUP3 SWAP1 SSTORE PUSH1 0x10 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x95A21281108B566135DDAA849F46AC5EDEE2287699CE9443AC1490705CD63D77 SWAP1 PUSH1 0x20 ADD PUSH2 0xF57 JUMP JUMPDEST PUSH1 0xA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x119C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD GT PUSH2 0x11CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x266B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x122F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320616C7265616479207769647468647261776E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH2 0x125F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x26A2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12EC JUMPI PUSH1 0x0 PUSH2 0x12B5 PUSH1 0x7 SLOAD PUSH2 0xB14 PUSH1 0xA DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1297 JUMPI PUSH2 0x1297 PUSH2 0x26D9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x2170 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0x12C7 SWAP1 DUP3 PUSH2 0x219B JUMP JUMPDEST PUSH1 0x1 DUP6 ADD SSTORE PUSH2 0x12D6 DUP6 DUP3 PUSH2 0x218F JUMP JUMPDEST SWAP5 POP POP DUP1 DUP1 PUSH2 0x12E4 SWAP1 PUSH2 0x2705 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1271 JUMP JUMPDEST POP PUSH1 0x0 DUP4 GT PUSH2 0x133D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468657265206973206E6F7468696E6720746F20776964746864726177000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST SELFBALANCE DUP4 GT ISZERO PUSH2 0x135D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x271E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xE SLOAD PUSH2 0x1384 SWAP1 DUP5 PUSH2 0x218F JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x13B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1419 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x2634 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD GT PUSH2 0x146B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56657374696E6720656E642064617465206973206E6F74207365740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT ISZERO PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56657374696E6720706572696F64206973206E6F742066696E69736865642079 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x151B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6566746F76657220616C72656164792077697468647261776E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xD SLOAD PUSH1 0x0 SWAP2 PUSH2 0x152E SWAP2 SWAP1 PUSH2 0x219B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1550 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x26A2 JUMP JUMPDEST PUSH1 0x14 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x158A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x2634 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x15F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x27F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE JUMP JUMPDEST PUSH1 0xF SLOAD TIMESTAMP LT DUP1 ISZERO SWAP1 PUSH2 0x1626 JUMPI POP PUSH1 0x10 SLOAD TIMESTAMP GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1635 JUMPI POP PUSH1 0x11 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1651 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x25E7 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x167B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x2634 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x16EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520616464726573736573206172726179206D75737420636F6E7461696E PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x81BDB9948195B195B595B9D08185D081B19585CDD PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x176D JUMPI PUSH1 0x0 DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x170B JUMPI PUSH2 0x170B PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x175B JUMPI PUSH2 0x175B DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x174E JUMPI PUSH2 0x174E PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2040 JUMP JUMPDEST DUP1 PUSH2 0x1765 DUP2 PUSH2 0x2705 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x16ED JUMP JUMPDEST POP PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x3ED3FF891AF065B7AECB80D2D3E0543AFD07E2B38E36D9E98700FEEBF26482B3 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x12 SLOAD TIMESTAMP LT DUP1 ISZERO SWAP1 PUSH2 0x17B9 JUMPI POP PUSH1 0x13 SLOAD TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x181B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446973747269627574696F6E20726F756E64206973206F766572206F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1D081CDD185C9D1959081E595D PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x187E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320616C72656164792070617274696369706174656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE TIMESTAMP DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 DUP5 MSTORE DUP8 SWAP1 KECCAK256 SWAP6 MLOAD DUP7 SSTORE SWAP1 MLOAD SWAP5 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP5 ISZERO ISZERO SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE SWAP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xB198F199C43CC078AD46E5A5FABE03EBA401F7417816C86AF0BD2E7345C99506 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1918 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x2634 JUMP JUMPDEST DUP1 MLOAD DUP3 EQ PUSH2 0x198E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4576656E747320636F756C64206D75737420626520657175616C207769746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x506572636570742050657220506F7274696F6E206C656E677468000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x19B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0x8 DUP3 SWAP1 SSTORE PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A3E JUMPI PUSH1 0xA DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x19DC JUMPI PUSH2 0x19DC PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD SSTORE DUP3 MLOAD PUSH2 0x1A2A SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1A13 JUMPI PUSH2 0x1A13 PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x218F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1A36 DUP2 PUSH2 0x2705 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x19C0 JUMP JUMPDEST POP DUP1 PUSH1 0x7 SLOAD EQ PUSH2 0x1A90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x507265636973696F6E2070657263656E74732069737375650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0x1AF3C14CE558C4A33618E1F36C8EA383FC552A672298056311FA66518719F6E0 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1AF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x2634 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446973747269627574696F6E20616C7265616479206372656174656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0xD SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x7 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x2634 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1C1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520616C6C6F636174696F6E206172726179206D75737420636F6E746169 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x1B881BDB9948195B195B595B9D08185D081B19585CDD PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1CBA JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C3B JUMPI PUSH2 0x1C3B PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x1C86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x27F6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD MLOAD SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE DUP1 PUSH2 0x1CB2 DUP2 PUSH2 0x2705 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C1E JUMP JUMPDEST POP PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0xB470A061A328BEDEA790142CA3E477573B6337191C39704740003DC082E76ECF SWAP1 PUSH1 0x20 ADD PUSH2 0x179A JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x119C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x2634 JUMP JUMPDEST PUSH1 0xA SLOAD ISZERO DUP1 ISZERO PUSH2 0x1D35 JUMPI POP PUSH1 0x9 SLOAD ISZERO JUMPDEST PUSH2 0x1D81 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56657374696E6720706172616D657465727320616C7265616479207365740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1E06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0x556E6C6F636B696E672054696D6573206C656E677468206D7573742062652065 SWAP1 DUP3 ADD MSTORE PUSH32 0x7175616C20776974682050657263656E742050657220506F7274696F6E206C65 PUSH1 0x64 DUP3 ADD MSTORE PUSH4 0xDCCEE8D PUSH1 0xE3 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1E2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x27BF JUMP JUMPDEST PUSH1 0x12 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1E48 JUMPI PUSH2 0x1E48 PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x1EB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6C6F636B2074696D65206D75737420626520616674657220746865206469 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x73747269627574696F6E20656E6473 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1A3E JUMPI DUP1 ISZERO PUSH2 0x1F65 JUMPI DUP4 PUSH2 0x1ED4 PUSH1 0x1 DUP4 PUSH2 0x2762 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1EE4 JUMPI PUSH2 0x1EE4 PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1EFE JUMPI PUSH2 0x1EFE PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x1F65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6C6F636B2074696D65206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x2070726576696F7573 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x9 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F79 JUMPI PUSH2 0x1F79 PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD SSTORE DUP3 MLOAD PUSH1 0xA SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1FAF JUMPI PUSH2 0x1FAF PUSH2 0x26D9 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD SSTORE DUP3 MLOAD PUSH2 0x1FE6 SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1A13 JUMPI PUSH2 0x1A13 PUSH2 0x26D9 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1FF2 DUP2 PUSH2 0x2705 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EB9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2024 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x2779 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x20AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4164647265737320616C72656164792072656769737465726564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE TIMESTAMP DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 DUP7 ADD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP7 MSTORE DUP6 DUP6 MSTORE DUP8 DUP7 KECCAK256 SWAP7 MLOAD DUP8 SSTORE SWAP3 MLOAD DUP7 DUP4 ADD SSTORE MLOAD PUSH1 0x2 SWAP6 DUP7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP5 SLOAD DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP3 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP1 SLOAD SWAP2 PUSH2 0x2125 DUP4 PUSH2 0x2705 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6F3BF3FA84E4763A43B3D23F9D79BE242D6D5C834941FF4C1111B67469E1150C TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x2165 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217C DUP3 DUP5 PUSH2 0x2838 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217C DUP3 DUP5 PUSH2 0x2857 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217C DUP3 DUP5 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217C DUP3 DUP5 PUSH2 0x2762 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x21DF JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x21C3 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x217C DUP3 PUSH2 0x21EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x21DF JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2257 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x228F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22BA DUP4 PUSH2 0x21EB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2301 JUMPI PUSH2 0x2301 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2330 JUMPI PUSH2 0x2330 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2352 JUMPI PUSH2 0x2352 PUSH2 0x22C8 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x236F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x23AA PUSH2 0x23A5 DUP3 PUSH2 0x2338 JUMP JUMPDEST PUSH2 0x2307 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x23C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x23EE JUMPI PUSH2 0x23DF DUP5 PUSH2 0x21EB JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x23CE JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x240A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x241A PUSH2 0x23A5 DUP4 PUSH2 0x2338 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x2439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2454 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x243D JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x249C DUP6 DUP3 DUP7 ADD PUSH2 0x23F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x24D2 PUSH1 0x40 DUP6 ADD PUSH2 0x21EB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2524 PUSH2 0x23A5 DUP3 PUSH2 0x2338 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x6 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x2543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x23EE JUMPI PUSH1 0x40 DUP5 DUP10 SUB SLT ISZERO PUSH2 0x2561 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2569 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0x2572 DUP6 PUSH2 0x21EB JUMP JUMPDEST DUP2 MSTORE DUP5 DUP7 ADD CALLDATALOAD DUP7 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x2548 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x25B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25C4 DUP7 DUP4 DUP8 ADD PUSH2 0x23F9 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x25DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249C DUP6 DUP3 DUP7 ADD PUSH2 0x23F9 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E20726F756E64206973206F766572206F72206E6F PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1D081CDD185C9D1959081E595D PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x416C6C6F77732061646D696E2061646472657373206F6E6C7900000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x56657374696E6720706172616D657465727320617265206E6F74207365740000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x5468657265206973206E6F7468696E6720746F20776974686472617700000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2717 JUMPI PUSH2 0x2717 PUSH2 0x26EF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x5468657265206973206E6F207375636820616D6F756E7420746F207769647468 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x64726177 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2774 JUMPI PUSH2 0x2774 PUSH2 0x26EF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x416C6C6F777320646973747269627574696F6E206F776E657220616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x73206F6E6C79 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x446973747269627574696F6E206973206E6F7420637265617465640000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x50726F76696465642061646472657373206973206E6F74207265676973746572 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2852 JUMPI PUSH2 0x2852 PUSH2 0x26EF JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2874 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x288C JUMPI PUSH2 0x288C PUSH2 0x26EF JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE DUP4 PUSH4 0x2CE0E818 SWAP11 ADDMOD 0xA7 DIFFICULTY SLT SGT 0xF6 0xE9 SHL ORIGIN PUSH16 0xBEBF289005B97F0C973983E799B6473 PUSH16 0x6C634300080E00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        117,
        14017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21A"
    },
    "12": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8444F153"
    },
    "25": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x123"
    },
    "29": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC44C209A"
    },
    "36": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "GT",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAB"
    },
    "40": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF1EF7FF2"
    },
    "47": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "GT",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F"
    },
    "51": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF1EF7FF2"
    },
    "58": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A4"
    },
    "62": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF4B7A413"
    },
    "69": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6C4"
    },
    "73": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF5682523"
    },
    "80": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6E4"
    },
    "84": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF851A440"
    },
    "91": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "92": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x704"
    },
    "95": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "96": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "97": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFC954144"
    },
    "102": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "103": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x724"
    },
    "106": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "107": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "REVERT",
      "path": "2"
    },
    "111": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "112": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "113": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC44C209A"
    },
    "118": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "119": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60F"
    },
    "122": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "124": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD11711A2"
    },
    "129": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "130": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x62F"
    },
    "133": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "135": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD64F6CB6"
    },
    "140": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "141": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x644"
    },
    "144": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "145": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "146": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDC865C82"
    },
    "151": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "152": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x664"
    },
    "155": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "156": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "157": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE5664D84"
    },
    "162": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "163": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x684"
    },
    "166": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "167": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "169": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "170": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "REVERT",
      "path": "2"
    },
    "171": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "172": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "173": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9BDEB335"
    },
    "178": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "GT",
      "path": "2"
    },
    "179": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF2"
    },
    "182": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "183": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "184": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9BDEB335"
    },
    "189": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "190": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x57F"
    },
    "193": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "194": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "195": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA525D237"
    },
    "200": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "201": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x594"
    },
    "204": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "206": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xAA6CB71D"
    },
    "211": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "212": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5A9"
    },
    "215": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "216": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "217": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB1CDE244"
    },
    "222": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "223": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5BF"
    },
    "226": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "227": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "228": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBB0F0D51"
    },
    "233": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "234": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5EF"
    },
    "237": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "238": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "240": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "241": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "REVERT",
      "path": "2"
    },
    "242": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "243": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "244": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8444F153"
    },
    "249": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "250": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D0"
    },
    "253": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "254": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "255": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x927F6AEE"
    },
    "260": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "261": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F0"
    },
    "264": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "265": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "266": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x942E6BCF"
    },
    "271": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "272": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x510"
    },
    "275": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "276": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "277": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x98C32A7F"
    },
    "282": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "283": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x54F"
    },
    "286": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "287": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "289": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "290": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "REVERT",
      "path": "2"
    },
    "291": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "292": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "293": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3CCFD60B"
    },
    "298": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "GT",
      "path": "2"
    },
    "299": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A6"
    },
    "302": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "303": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "304": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7073C072"
    },
    "309": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "GT",
      "path": "2"
    },
    "310": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x175"
    },
    "313": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "314": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "315": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7073C072"
    },
    "320": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "321": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x451"
    },
    "324": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "325": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "326": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x72C0FE1D"
    },
    "331": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "332": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x473"
    },
    "335": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "336": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "337": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x793A2954"
    },
    "342": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "343": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x493"
    },
    "346": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "347": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "348": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7C4B414D"
    },
    "353": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "354": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B3"
    },
    "357": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "358": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "359": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x7E87C053"
    },
    "364": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "365": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BB"
    },
    "368": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "369": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "371": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "372": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "REVERT",
      "path": "2"
    },
    "373": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "374": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "375": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3CCFD60B"
    },
    "380": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "381": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x383"
    },
    "384": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "385": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "386": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3DB5A524"
    },
    "391": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "392": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x398"
    },
    "395": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "396": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "397": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x5EE58EFC"
    },
    "402": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "403": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AE"
    },
    "406": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "407": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "408": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x62B21FA1"
    },
    "413": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "414": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x424"
    },
    "417": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "418": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "420": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "421": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "REVERT",
      "path": "2"
    },
    "422": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "423": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "424": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1EEADFA8"
    },
    "429": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "GT",
      "path": "2"
    },
    "430": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ED"
    },
    "433": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "434": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "435": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1EEADFA8"
    },
    "440": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "441": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C6"
    },
    "444": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "445": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "446": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2199D5CD"
    },
    "451": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "452": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EA"
    },
    "455": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "456": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "457": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23E8E9BF"
    },
    "462": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "463": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30A"
    },
    "466": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "467": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "468": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3C3EC8B7"
    },
    "473": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "474": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31F"
    },
    "477": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "478": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "479": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x3C961FC2"
    },
    "484": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "485": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36D"
    },
    "488": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "489": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "491": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "492": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "REVERT",
      "path": "2"
    },
    "493": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "494": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "495": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1754D62D"
    },
    "500": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "501": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21F"
    },
    "504": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "505": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "506": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1AA3A008"
    },
    "511": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "512": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x263"
    },
    "515": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "516": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "517": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1BA7DD1E"
    },
    "522": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "523": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27A"
    },
    "526": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "527": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "528": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1C5F47EE"
    },
    "533": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "EQ",
      "path": "2"
    },
    "534": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29C"
    },
    "537": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "538": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "539": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "541": {
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "DUP1",
      "path": "2"
    },
    "542": {
      "first_revert": true,
      "fn": null,
      "offset": [
        117,
        14017
      ],
      "op": "REVERT",
      "path": "2"
    },
    "543": {
      "offset": [
        1750,
        1794
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "544": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "545": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "DUP1",
      "path": "2"
    },
    "546": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "547": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B"
    },
    "550": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "551": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "553": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "DUP1",
      "path": "2"
    },
    "554": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "REVERT",
      "path": "2"
    },
    "555": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "556": {
      "op": "POP"
    },
    "557": {
      "offset": [
        1750,
        1794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "559": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "560": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "562": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "563": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x11"
    },
    "565": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "566": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x241"
    },
    "569": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "570": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "571": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "572": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "574": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "AND",
      "path": "2"
    },
    "575": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "DUP4",
      "path": "2"
    },
    "576": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "JUMP",
      "path": "2"
    },
    "577": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "578": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "580": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "DUP1",
      "path": "2"
    },
    "581": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "582": {
      "op": "SWAP4"
    },
    "583": {
      "op": "DUP5"
    },
    "584": {
      "op": "MSTORE"
    },
    "585": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "587": {
      "op": "DUP5"
    },
    "588": {
      "op": "ADD"
    },
    "589": {
      "op": "SWAP3"
    },
    "590": {
      "op": "SWAP1"
    },
    "591": {
      "op": "SWAP3"
    },
    "592": {
      "op": "MSTORE"
    },
    "593": {
      "op": "ISZERO"
    },
    "594": {
      "op": "ISZERO"
    },
    "595": {
      "op": "SWAP1"
    },
    "596": {
      "op": "DUP3"
    },
    "597": {
      "op": "ADD"
    },
    "598": {
      "op": "MSTORE"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "601": {
      "op": "ADD"
    },
    "602": {
      "offset": [
        1750,
        1794
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "603": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "605": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "606": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "DUP1",
      "path": "2"
    },
    "607": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "608": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "SUB",
      "path": "2"
    },
    "609": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "610": {
      "fn": null,
      "offset": [
        1750,
        1794
      ],
      "op": "RETURN",
      "path": "2"
    },
    "611": {
      "fn": "DistributorNative.register",
      "offset": [
        3315,
        3412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "612": {
      "fn": "DistributorNative.register",
      "offset": [
        3315,
        3412
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "613": {
      "fn": "DistributorNative.register",
      "offset": [
        3315,
        3412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "614": {
      "fn": "DistributorNative.register",
      "offset": [
        3315,
        3412
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "615": {
      "fn": "DistributorNative.register",
      "offset": [
        3315,
        3412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26F"
    },
    "618": {
      "fn": "DistributorNative.register",
      "offset": [
        3315,
        3412
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "619": {
      "fn": "DistributorNative.register",
      "offset": [
        3315,
        3412
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "621": {
      "fn": "DistributorNative.register",
      "offset": [
        3315,
        3412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "622": {
      "fn": "DistributorNative.register",
      "offset": [
        3315,
        3412
      ],
      "op": "REVERT",
      "path": "2"
    },
    "623": {
      "fn": "DistributorNative.register",
      "offset": [
        3315,
        3412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "624": {
      "fn": "DistributorNative.register",
      "offset": [
        3315,
        3412
      ],
      "op": "POP",
      "path": "2"
    },
    "625": {
      "fn": "DistributorNative.register",
      "offset": [
        3315,
        3412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "628": {
      "fn": "DistributorNative.register",
      "offset": [
        3315,
        3412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x770"
    },
    "631": {
      "fn": "DistributorNative.register",
      "jump": "i",
      "offset": [
        3315,
        3412
      ],
      "op": "JUMP",
      "path": "2"
    },
    "632": {
      "fn": "DistributorNative.register",
      "offset": [
        3315,
        3412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "633": {
      "fn": "DistributorNative.register",
      "offset": [
        3315,
        3412
      ],
      "op": "STOP",
      "path": "2"
    },
    "634": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "635": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "636": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "DUP1",
      "path": "2"
    },
    "637": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "638": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x286"
    },
    "641": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "642": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "644": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "DUP1",
      "path": "2"
    },
    "645": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "REVERT",
      "path": "2"
    },
    "646": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "647": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "POP",
      "path": "2"
    },
    "648": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28F"
    },
    "651": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7C3"
    },
    "654": {
      "fn": "DistributorNative.getVestingUnlocks",
      "jump": "i",
      "offset": [
        12210,
        12327
      ],
      "op": "JUMP",
      "path": "2"
    },
    "655": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "656": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "658": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "659": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25A"
    },
    "662": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "663": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "664": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21A7"
    },
    "667": {
      "fn": "DistributorNative.getVestingUnlocks",
      "jump": "i",
      "offset": [
        12210,
        12327
      ],
      "op": "JUMP",
      "path": "2"
    },
    "668": {
      "offset": [
        1851,
        1895
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "669": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "670": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "DUP1",
      "path": "2"
    },
    "671": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "672": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A8"
    },
    "675": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "676": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "678": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "DUP1",
      "path": "2"
    },
    "679": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "REVERT",
      "path": "2"
    },
    "680": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "681": {
      "op": "POP"
    },
    "682": {
      "offset": [
        1851,
        1895
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "684": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "685": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B6"
    },
    "688": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "689": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "691": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "AND",
      "path": "2"
    },
    "692": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "DUP2",
      "path": "2"
    },
    "693": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "JUMP",
      "path": "2"
    },
    "694": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "695": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "697": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1851,
        1895
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "698": {
      "op": "SWAP1"
    },
    "699": {
      "op": "ISZERO"
    },
    "700": {
      "op": "ISZERO"
    },
    "701": {
      "op": "DUP2"
    },
    "702": {
      "op": "MSTORE"
    },
    "703": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "705": {
      "op": "ADD"
    },
    "706": {
      "offset": [
        1851,
        1895
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25A"
    },
    "709": {
      "op": "JUMP"
    },
    "710": {
      "offset": [
        1450,
        1493
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "711": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "712": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "DUP1",
      "path": "2"
    },
    "713": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "714": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D2"
    },
    "717": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "718": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "720": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "DUP1",
      "path": "2"
    },
    "721": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "REVERT",
      "path": "2"
    },
    "722": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "723": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "POP",
      "path": "2"
    },
    "724": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DC"
    },
    "727": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "729": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "730": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "DUP2",
      "path": "2"
    },
    "731": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "JUMP",
      "path": "2"
    },
    "732": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "733": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "735": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        1450,
        1493
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "736": {
      "op": "SWAP1"
    },
    "737": {
      "op": "DUP2"
    },
    "738": {
      "op": "MSTORE"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "741": {
      "op": "ADD"
    },
    "742": {
      "offset": [
        1450,
        1493
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25A"
    },
    "745": {
      "op": "JUMP"
    },
    "746": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "747": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "748": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "DUP1",
      "path": "2"
    },
    "749": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "750": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F6"
    },
    "753": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "754": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "756": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "DUP1",
      "path": "2"
    },
    "757": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "REVERT",
      "path": "2"
    },
    "758": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "759": {
      "op": "POP"
    },
    "760": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "763": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x305"
    },
    "766": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "767": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "769": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2207"
    },
    "772": {
      "fn": "DistributorNative.registerUser",
      "jump": "i",
      "offset": [
        3418,
        3543
      ],
      "op": "JUMP",
      "path": "2"
    },
    "773": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "774": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x81B"
    },
    "777": {
      "fn": "DistributorNative.registerUser",
      "jump": "i",
      "offset": [
        3418,
        3543
      ],
      "op": "JUMP",
      "path": "2"
    },
    "778": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12333,
        12491
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "779": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12333,
        12491
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "780": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12333,
        12491
      ],
      "op": "DUP1",
      "path": "2"
    },
    "781": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12333,
        12491
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "782": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12333,
        12491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x316"
    },
    "785": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12333,
        12491
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "786": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12333,
        12491
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "788": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12333,
        12491
      ],
      "op": "DUP1",
      "path": "2"
    },
    "789": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12333,
        12491
      ],
      "op": "REVERT",
      "path": "2"
    },
    "790": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12333,
        12491
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "791": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12333,
        12491
      ],
      "op": "POP",
      "path": "2"
    },
    "792": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12333,
        12491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "795": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12333,
        12491
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x890"
    },
    "798": {
      "fn": "DistributorNative.stopRegistrationRound",
      "jump": "i",
      "offset": [
        12333,
        12491
      ],
      "op": "JUMP",
      "path": "2"
    },
    "799": {
      "offset": [
        1073,
        1136
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "800": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "801": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "DUP1",
      "path": "2"
    },
    "802": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "803": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32B"
    },
    "806": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "807": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "809": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "DUP1",
      "path": "2"
    },
    "810": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "REVERT",
      "path": "2"
    },
    "811": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "812": {
      "op": "POP"
    },
    "813": {
      "offset": [
        1073,
        1136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x355"
    },
    "816": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33A"
    },
    "819": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "820": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "822": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2222"
    },
    "825": {
      "fn": "DistributorNative.stopRegistrationRound",
      "jump": "i",
      "offset": [
        1073,
        1136
      ],
      "op": "JUMP",
      "path": "2"
    },
    "826": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "827": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "829": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "831": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "832": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "834": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "835": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "836": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "837": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "839": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "840": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "841": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "848": {
      "op": "SHL"
    },
    "849": {
      "op": "SUB"
    },
    "850": {
      "offset": [
        1073,
        1136
      ],
      "op": "AND",
      "path": "2"
    },
    "851": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "852": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "JUMP",
      "path": "2"
    },
    "853": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "854": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "856": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1073,
        1136
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "861": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "863": {
      "op": "SHL"
    },
    "864": {
      "op": "SUB"
    },
    "865": {
      "op": "SWAP1"
    },
    "866": {
      "op": "SWAP2"
    },
    "867": {
      "op": "AND"
    },
    "868": {
      "op": "DUP2"
    },
    "869": {
      "op": "MSTORE"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "872": {
      "op": "ADD"
    },
    "873": {
      "offset": [
        1073,
        1136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25A"
    },
    "876": {
      "op": "JUMP"
    },
    "877": {
      "offset": [
        1499,
        1544
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "878": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1499,
        1544
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "879": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1499,
        1544
      ],
      "op": "DUP1",
      "path": "2"
    },
    "880": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1499,
        1544
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "881": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1499,
        1544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x379"
    },
    "884": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1499,
        1544
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "885": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1499,
        1544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "887": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1499,
        1544
      ],
      "op": "DUP1",
      "path": "2"
    },
    "888": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1499,
        1544
      ],
      "op": "REVERT",
      "path": "2"
    },
    "889": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1499,
        1544
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "890": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1499,
        1544
      ],
      "op": "POP",
      "path": "2"
    },
    "891": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1499,
        1544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DC"
    },
    "894": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1499,
        1544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "896": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1499,
        1544
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "897": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1499,
        1544
      ],
      "op": "DUP2",
      "path": "2"
    },
    "898": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        1499,
        1544
      ],
      "op": "JUMP",
      "path": "2"
    },
    "899": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4319,
        5893
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "900": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4319,
        5893
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "901": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4319,
        5893
      ],
      "op": "DUP1",
      "path": "2"
    },
    "902": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4319,
        5893
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "903": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4319,
        5893
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38F"
    },
    "906": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4319,
        5893
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "907": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4319,
        5893
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "909": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4319,
        5893
      ],
      "op": "DUP1",
      "path": "2"
    },
    "910": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4319,
        5893
      ],
      "op": "REVERT",
      "path": "2"
    },
    "911": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4319,
        5893
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "912": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4319,
        5893
      ],
      "op": "POP",
      "path": "2"
    },
    "913": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4319,
        5893
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "916": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4319,
        5893
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x903"
    },
    "919": {
      "fn": "DistributorNative.withdraw",
      "jump": "i",
      "offset": [
        4319,
        5893
      ],
      "op": "JUMP",
      "path": "2"
    },
    "920": {
      "offset": [
        1403,
        1444
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "921": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1403,
        1444
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "922": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1403,
        1444
      ],
      "op": "DUP1",
      "path": "2"
    },
    "923": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1403,
        1444
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "924": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1403,
        1444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A4"
    },
    "927": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1403,
        1444
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "928": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1403,
        1444
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "930": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1403,
        1444
      ],
      "op": "DUP1",
      "path": "2"
    },
    "931": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1403,
        1444
      ],
      "op": "REVERT",
      "path": "2"
    },
    "932": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1403,
        1444
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "933": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1403,
        1444
      ],
      "op": "POP",
      "path": "2"
    },
    "934": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1403,
        1444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DC"
    },
    "937": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1403,
        1444
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "939": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1403,
        1444
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "940": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1403,
        1444
      ],
      "op": "DUP2",
      "path": "2"
    },
    "941": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1403,
        1444
      ],
      "op": "JUMP",
      "path": "2"
    },
    "942": {
      "offset": [
        1705,
        1744
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "943": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "944": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "DUP1",
      "path": "2"
    },
    "945": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "946": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3BA"
    },
    "949": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "950": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "952": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "DUP1",
      "path": "2"
    },
    "953": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "REVERT",
      "path": "2"
    },
    "954": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "955": {
      "op": "POP"
    },
    "956": {
      "offset": [
        1705,
        1744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "958": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "959": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "961": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "962": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "964": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "965": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3EC"
    },
    "968": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "971": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "973": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "975": {
      "op": "SHL"
    },
    "976": {
      "op": "SUB"
    },
    "977": {
      "offset": [
        1705,
        1744
      ],
      "op": "DUP2",
      "path": "2"
    },
    "978": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "AND",
      "path": "2"
    },
    "979": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "980": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "986": {
      "op": "SHL"
    },
    "987": {
      "offset": [
        1705,
        1744
      ],
      "op": "DUP4",
      "path": "2"
    },
    "988": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "DIV",
      "path": "2"
    },
    "989": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "DUP2",
      "path": "2"
    },
    "990": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "AND",
      "path": "2"
    },
    "991": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "994": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "996": {
      "op": "SHL"
    },
    "997": {
      "offset": [
        1705,
        1744
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "998": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "999": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "DIV",
      "path": "2"
    },
    "1000": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "AND",
      "path": "2"
    },
    "1001": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1002": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1003": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1004": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1005": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1007": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1008": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1705,
        1744
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1015": {
      "op": "SHL"
    },
    "1016": {
      "op": "SUB"
    },
    "1017": {
      "op": "SWAP1"
    },
    "1018": {
      "op": "SWAP7"
    },
    "1019": {
      "op": "AND"
    },
    "1020": {
      "op": "DUP7"
    },
    "1021": {
      "op": "MSTORE"
    },
    "1022": {
      "op": "SWAP4"
    },
    "1023": {
      "op": "ISZERO"
    },
    "1024": {
      "op": "ISZERO"
    },
    "1025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1027": {
      "op": "DUP7"
    },
    "1028": {
      "op": "ADD"
    },
    "1029": {
      "op": "MSTORE"
    },
    "1030": {
      "op": "SWAP2"
    },
    "1031": {
      "op": "ISZERO"
    },
    "1032": {
      "op": "ISZERO"
    },
    "1033": {
      "op": "SWAP3"
    },
    "1034": {
      "op": "DUP5"
    },
    "1035": {
      "op": "ADD"
    },
    "1036": {
      "op": "SWAP3"
    },
    "1037": {
      "op": "SWAP1"
    },
    "1038": {
      "op": "SWAP3"
    },
    "1039": {
      "op": "MSTORE"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1042": {
      "op": "DUP4"
    },
    "1043": {
      "op": "ADD"
    },
    "1044": {
      "op": "SWAP2"
    },
    "1045": {
      "op": "SWAP1"
    },
    "1046": {
      "op": "SWAP2"
    },
    "1047": {
      "op": "MSTORE"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1050": {
      "op": "DUP3"
    },
    "1051": {
      "op": "ADD"
    },
    "1052": {
      "op": "MSTORE"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1055": {
      "op": "ADD"
    },
    "1056": {
      "offset": [
        1705,
        1744
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25A"
    },
    "1059": {
      "op": "JUMP"
    },
    "1060": {
      "offset": [
        1273,
        1330
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1061": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1062": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1063": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1064": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x430"
    },
    "1067": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1068": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1070": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1071": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1072": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1073": {
      "op": "POP"
    },
    "1074": {
      "offset": [
        1273,
        1330
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DC"
    },
    "1077": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43F"
    },
    "1080": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1081": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1083": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2207"
    },
    "1086": {
      "fn": "DistributorNative.withdraw",
      "jump": "i",
      "offset": [
        1273,
        1330
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1087": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1088": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1090": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1092": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1093": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1095": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1096": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1097": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1098": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1100": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1101": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1102": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1103": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1104": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        1273,
        1330
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1105": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1106": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1107": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1108": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1109": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x45D"
    },
    "1112": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1113": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1115": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1116": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1117": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1118": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "POP",
      "path": "2"
    },
    "1119": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x466"
    },
    "1122": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC3E"
    },
    "1125": {
      "fn": "DistributorNative.getRegisteredUsers",
      "jump": "i",
      "offset": [
        11725,
        12082
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1126": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1127": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1129": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1130": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25A"
    },
    "1133": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1134": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1135": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x223B"
    },
    "1138": {
      "fn": "DistributorNative.getRegisteredUsers",
      "jump": "i",
      "offset": [
        11725,
        12082
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1139": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1140": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1141": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1142": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1143": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x47F"
    },
    "1146": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1147": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1149": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1150": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1151": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1152": {
      "op": "POP"
    },
    "1153": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "1156": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x48E"
    },
    "1159": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1160": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1162": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2222"
    },
    "1165": {
      "fn": "DistributorNative.setVestingEndDate",
      "jump": "i",
      "offset": [
        11237,
        11719
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1166": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1167": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF8"
    },
    "1170": {
      "fn": "DistributorNative.setVestingEndDate",
      "jump": "i",
      "offset": [
        11237,
        11719
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1171": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1172": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1173": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1174": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1175": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x49F"
    },
    "1178": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1179": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1181": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1182": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1183": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1184": {
      "op": "POP"
    },
    "1185": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "1188": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AE"
    },
    "1191": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1192": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1194": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x227C"
    },
    "1197": {
      "fn": "DistributorNative.setDistributionRound",
      "jump": "i",
      "offset": [
        10763,
        11231
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1198": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1199": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE05"
    },
    "1202": {
      "fn": "DistributorNative.setDistributionRound",
      "jump": "i",
      "offset": [
        10763,
        11231
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1203": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12637,
        13084
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1204": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12637,
        13084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "1207": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12637,
        13084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF63"
    },
    "1210": {
      "fn": "DistributorNative.depositTokens",
      "jump": "i",
      "offset": [
        12637,
        13084
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1211": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12088,
        12205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1212": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12088,
        12205
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1213": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12088,
        12205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1214": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12088,
        12205
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1215": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12088,
        12205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C7"
    },
    "1218": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12088,
        12205
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1219": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12088,
        12205
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1221": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12088,
        12205
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1222": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12088,
        12205
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1223": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12088,
        12205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1224": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12088,
        12205
      ],
      "op": "POP",
      "path": "2"
    },
    "1225": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12088,
        12205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x28F"
    },
    "1228": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12088,
        12205
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10BA"
    },
    "1231": {
      "fn": "DistributorNative.getVestingPortions",
      "jump": "i",
      "offset": [
        12088,
        12205
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1232": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1233": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1234": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1235": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1236": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4DC"
    },
    "1239": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1240": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1242": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1243": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1244": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1245": {
      "op": "POP"
    },
    "1246": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "1249": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4EB"
    },
    "1252": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1253": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1255": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x227C"
    },
    "1258": {
      "fn": "DistributorNative.setRegistrationRound",
      "jump": "i",
      "offset": [
        10408,
        10757
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1259": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1260": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1110"
    },
    "1263": {
      "fn": "DistributorNative.setRegistrationRound",
      "jump": "i",
      "offset": [
        10408,
        10757
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1264": {
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1265": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1266": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1267": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1268": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4FC"
    },
    "1271": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1272": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1274": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1275": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1276": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1277": {
      "op": "POP"
    },
    "1278": {
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DC"
    },
    "1281": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x50B"
    },
    "1284": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1285": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1287": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2222"
    },
    "1290": {
      "fn": "DistributorNative.setRegistrationRound",
      "jump": "i",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1291": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1292": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x118C"
    },
    "1295": {
      "fn": "DistributorNative.setRegistrationRound",
      "jump": "i",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1296": {
      "offset": [
        1011,
        1067
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1297": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1298": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1299": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1300": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x51C"
    },
    "1303": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1304": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1306": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1307": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1308": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1309": {
      "op": "POP"
    },
    "1310": {
      "offset": [
        1011,
        1067
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x241"
    },
    "1313": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x52B"
    },
    "1316": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1317": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1319": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2207"
    },
    "1322": {
      "fn": "DistributorNative.setRegistrationRound",
      "jump": "i",
      "offset": [
        1011,
        1067
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1323": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1324": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1326": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1328": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1329": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1330": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1331": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1332": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1333": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1334": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1336": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1337": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1338": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1339": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1340": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1342": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1343": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "ADD",
      "path": "2"
    },
    "1344": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1345": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1347": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1348": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1349": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "ADD",
      "path": "2"
    },
    "1350": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1351": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1352": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1353": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1354": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1356": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "AND",
      "path": "2"
    },
    "1357": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1358": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1011,
        1067
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1359": {
      "offset": [
        1336,
        1396
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1360": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1361": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1362": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1363": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x55B"
    },
    "1366": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1367": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1369": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1370": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1371": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1372": {
      "op": "POP"
    },
    "1373": {
      "offset": [
        1336,
        1396
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B6"
    },
    "1376": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x56A"
    },
    "1379": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1380": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1382": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2207"
    },
    "1385": {
      "fn": "DistributorNative.setRegistrationRound",
      "jump": "i",
      "offset": [
        1336,
        1396
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1386": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1387": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "1389": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1391": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1392": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1394": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1395": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1396": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1397": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1399": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1400": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1401": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1402": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1404": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "AND",
      "path": "2"
    },
    "1405": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1406": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1336,
        1396
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1407": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5899,
        7211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1408": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5899,
        7211
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1409": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5899,
        7211
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1410": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5899,
        7211
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1411": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5899,
        7211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x58B"
    },
    "1414": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5899,
        7211
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1415": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5899,
        7211
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1417": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5899,
        7211
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1418": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5899,
        7211
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1419": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5899,
        7211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1420": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5899,
        7211
      ],
      "op": "POP",
      "path": "2"
    },
    "1421": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5899,
        7211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "1424": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5899,
        7211
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11AD"
    },
    "1427": {
      "fn": "DistributorNative.withdrawEvent",
      "jump": "i",
      "offset": [
        5899,
        7211
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1428": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13090,
        13640
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1429": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13090,
        13640
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1430": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13090,
        13640
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1431": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13090,
        13640
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1432": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13090,
        13640
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5A0"
    },
    "1435": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13090,
        13640
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1436": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13090,
        13640
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1438": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13090,
        13640
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1439": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13090,
        13640
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1440": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13090,
        13640
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1441": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13090,
        13640
      ],
      "op": "POP",
      "path": "2"
    },
    "1442": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13090,
        13640
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "1445": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13090,
        13640
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13EF"
    },
    "1448": {
      "fn": "DistributorNative.withdrawLeftover",
      "jump": "i",
      "offset": [
        13090,
        13640
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1449": {
      "offset": [
        1142,
        1203
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1450": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1142,
        1203
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1451": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1142,
        1203
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1452": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1142,
        1203
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1453": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1142,
        1203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5B5"
    },
    "1456": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1142,
        1203
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1457": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1142,
        1203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1459": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1142,
        1203
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1460": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1142,
        1203
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1461": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1142,
        1203
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1462": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1142,
        1203
      ],
      "op": "POP",
      "path": "2"
    },
    "1463": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1142,
        1203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DC"
    },
    "1466": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1142,
        1203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1468": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1142,
        1203
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1469": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1142,
        1203
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1470": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1142,
        1203
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1471": {
      "offset": [
        1800,
        1844
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1472": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1473": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1474": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1475": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CB"
    },
    "1478": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1479": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1481": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1482": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1483": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1484": {
      "op": "POP"
    },
    "1485": {
      "offset": [
        1800,
        1844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x12"
    },
    "1487": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1488": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x13"
    },
    "1490": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1491": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5DA"
    },
    "1494": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1495": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1496": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1497": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1498": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1499": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1501": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1502": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        1800,
        1844
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1503": {
      "op": "SWAP3"
    },
    "1504": {
      "op": "DUP4"
    },
    "1505": {
      "op": "MSTORE"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1508": {
      "op": "DUP4"
    },
    "1509": {
      "op": "ADD"
    },
    "1510": {
      "op": "SWAP2"
    },
    "1511": {
      "op": "SWAP1"
    },
    "1512": {
      "op": "SWAP2"
    },
    "1513": {
      "op": "MSTORE"
    },
    "1514": {
      "op": "ADD"
    },
    "1515": {
      "offset": [
        1800,
        1844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25A"
    },
    "1518": {
      "op": "JUMP"
    },
    "1519": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1520": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1521": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1522": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1523": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FB"
    },
    "1526": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1527": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1529": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1530": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1531": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1532": {
      "op": "POP"
    },
    "1533": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "1536": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x60A"
    },
    "1539": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1540": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1542": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x229E"
    },
    "1545": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "jump": "i",
      "offset": [
        9696,
        9949
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1546": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1547": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x158E"
    },
    "1550": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "jump": "i",
      "offset": [
        9696,
        9949
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1551": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1552": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1553": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1554": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1555": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61B"
    },
    "1558": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1559": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1561": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1562": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1563": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1564": {
      "op": "POP"
    },
    "1565": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "1568": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x62A"
    },
    "1571": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1572": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1574": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x235C"
    },
    "1577": {
      "fn": "DistributorNative.registerMultipleUsers",
      "jump": "i",
      "offset": [
        3549,
        4008
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1578": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1579": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1612"
    },
    "1582": {
      "fn": "DistributorNative.registerMultipleUsers",
      "jump": "i",
      "offset": [
        3549,
        4008
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1583": {
      "fn": "DistributorNative.participate",
      "offset": [
        4014,
        4313
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1584": {
      "fn": "DistributorNative.participate",
      "offset": [
        4014,
        4313
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1585": {
      "fn": "DistributorNative.participate",
      "offset": [
        4014,
        4313
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1586": {
      "fn": "DistributorNative.participate",
      "offset": [
        4014,
        4313
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1587": {
      "fn": "DistributorNative.participate",
      "offset": [
        4014,
        4313
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x63B"
    },
    "1590": {
      "fn": "DistributorNative.participate",
      "offset": [
        4014,
        4313
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1591": {
      "fn": "DistributorNative.participate",
      "offset": [
        4014,
        4313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1593": {
      "fn": "DistributorNative.participate",
      "offset": [
        4014,
        4313
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1594": {
      "fn": "DistributorNative.participate",
      "offset": [
        4014,
        4313
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1595": {
      "fn": "DistributorNative.participate",
      "offset": [
        4014,
        4313
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1596": {
      "fn": "DistributorNative.participate",
      "offset": [
        4014,
        4313
      ],
      "op": "POP",
      "path": "2"
    },
    "1597": {
      "fn": "DistributorNative.participate",
      "offset": [
        4014,
        4313
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "1600": {
      "fn": "DistributorNative.participate",
      "offset": [
        4014,
        4313
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17A5"
    },
    "1603": {
      "fn": "DistributorNative.participate",
      "jump": "i",
      "offset": [
        4014,
        4313
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1604": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1605": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1606": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1607": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1608": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x650"
    },
    "1611": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1612": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1614": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1615": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1616": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1617": {
      "op": "POP"
    },
    "1618": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "1621": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x65F"
    },
    "1624": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1625": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1627": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x245F"
    },
    "1630": {
      "fn": "DistributorNative.setEventVestingParams",
      "jump": "i",
      "offset": [
        7217,
        7908
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1631": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1632": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18EE"
    },
    "1635": {
      "fn": "DistributorNative.setEventVestingParams",
      "jump": "i",
      "offset": [
        7217,
        7908
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1636": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1637": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1638": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1639": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1640": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x670"
    },
    "1643": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1644": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1646": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1647": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1648": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1649": {
      "op": "POP"
    },
    "1650": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "1653": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x67F"
    },
    "1656": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1657": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1659": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24A6"
    },
    "1662": {
      "fn": "DistributorNative.setDistributionParameters",
      "jump": "i",
      "offset": [
        9955,
        10402
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1663": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1664": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AC8"
    },
    "1667": {
      "fn": "DistributorNative.setDistributionParameters",
      "jump": "i",
      "offset": [
        9955,
        10402
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1668": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1669": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1670": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1671": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1672": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x690"
    },
    "1675": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1676": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1678": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1679": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1680": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1681": {
      "op": "POP"
    },
    "1682": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "1685": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x69F"
    },
    "1688": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1689": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1691": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24DB"
    },
    "1694": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "jump": "i",
      "offset": [
        9123,
        9690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1695": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1696": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B81"
    },
    "1699": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "jump": "i",
      "offset": [
        9123,
        9690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1700": {
      "offset": [
        1550,
        1602
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1701": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1702": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1703": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1704": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B0"
    },
    "1707": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1708": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1710": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1711": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1712": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1713": {
      "op": "POP"
    },
    "1714": {
      "offset": [
        1550,
        1602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DC"
    },
    "1717": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6BF"
    },
    "1720": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1721": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1723": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2222"
    },
    "1726": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "jump": "i",
      "offset": [
        1550,
        1602
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1727": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1728": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CEB"
    },
    "1731": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "jump": "i",
      "offset": [
        1550,
        1602
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1732": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1733": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1734": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1735": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1736": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D0"
    },
    "1739": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1740": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1742": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1743": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1744": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1745": {
      "op": "POP"
    },
    "1746": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "1749": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6DF"
    },
    "1752": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1753": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1755": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x258D"
    },
    "1758": {
      "fn": "DistributorNative.setVestingParams",
      "jump": "i",
      "offset": [
        7914,
        9117
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1759": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1760": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CFB"
    },
    "1763": {
      "fn": "DistributorNative.setVestingParams",
      "jump": "i",
      "offset": [
        7914,
        9117
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1764": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1765": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1766": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1767": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1768": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F0"
    },
    "1771": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1772": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1774": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1775": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1776": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1777": {
      "op": "POP"
    },
    "1778": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x278"
    },
    "1781": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6FF"
    },
    "1784": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1785": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1787": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x229E"
    },
    "1790": {
      "fn": "DistributorNative.setAddressEvent",
      "jump": "i",
      "offset": [
        12497,
        12631
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1791": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1792": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FFA"
    },
    "1795": {
      "fn": "DistributorNative.setAddressEvent",
      "jump": "i",
      "offset": [
        12497,
        12631
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1796": {
      "offset": [
        1666,
        1698
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1797": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1666,
        1698
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1798": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1666,
        1698
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1799": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1666,
        1698
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1800": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1666,
        1698
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x710"
    },
    "1803": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1666,
        1698
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1804": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1666,
        1698
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1806": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1666,
        1698
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1807": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1666,
        1698
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1808": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1666,
        1698
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1809": {
      "op": "POP"
    },
    "1810": {
      "offset": [
        1666,
        1698
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "1812": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1666,
        1698
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1813": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1666,
        1698
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x355"
    },
    "1816": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1666,
        1698
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1823": {
      "op": "SHL"
    },
    "1824": {
      "op": "SUB"
    },
    "1825": {
      "offset": [
        1666,
        1698
      ],
      "op": "AND",
      "path": "2"
    },
    "1826": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1666,
        1698
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1827": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1666,
        1698
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1828": {
      "offset": [
        1210,
        1267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1829": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1830": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1831": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1832": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x730"
    },
    "1835": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1836": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1838": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1839": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1840": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1841": {
      "op": "POP"
    },
    "1842": {
      "offset": [
        1210,
        1267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x75B"
    },
    "1845": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x73F"
    },
    "1848": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1849": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1851": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2207"
    },
    "1854": {
      "fn": "DistributorNative.setAddressEvent",
      "jump": "i",
      "offset": [
        1210,
        1267
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1855": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1856": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1858": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1860": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1861": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1863": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1864": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1865": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1866": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1868": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1869": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1870": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1871": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1872": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1874": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1875": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1876": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "ADD",
      "path": "2"
    },
    "1877": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1878": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1880": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "AND",
      "path": "2"
    },
    "1881": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1882": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1883": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1884": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1886": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1887": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        1210,
        1267
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1888": {
      "op": "SWAP3"
    },
    "1889": {
      "op": "DUP4"
    },
    "1890": {
      "op": "MSTORE"
    },
    "1891": {
      "op": "SWAP1"
    },
    "1892": {
      "op": "ISZERO"
    },
    "1893": {
      "op": "ISZERO"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1896": {
      "op": "DUP4"
    },
    "1897": {
      "op": "ADD"
    },
    "1898": {
      "op": "MSTORE"
    },
    "1899": {
      "op": "ADD"
    },
    "1900": {
      "offset": [
        1210,
        1267
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25A"
    },
    "1903": {
      "op": "JUMP"
    },
    "1904": {
      "fn": "DistributorNative.register",
      "offset": [
        3315,
        3412
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1905": {
      "offset": [
        2834,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "1907": {
      "offset": [
        2834,
        2861
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1908": {
      "offset": [
        2815,
        2830
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "1909": {
      "offset": [
        2815,
        2861
      ],
      "op": "LT",
      "path": "2"
    },
    "1910": {
      "fn": "DistributorNative.register",
      "offset": [
        2815,
        2861
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1911": {
      "fn": "DistributorNative.register",
      "offset": [
        2815,
        2861
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1912": {
      "fn": "DistributorNative.register",
      "offset": [
        2815,
        2861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1913": {
      "offset": [
        2815,
        2922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x784"
    },
    "1916": {
      "offset": [
        2815,
        2922
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1917": {
      "op": "POP"
    },
    "1918": {
      "offset": [
        2897,
        2922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "1920": {
      "fn": "DistributorNative.register",
      "offset": [
        2897,
        2922
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1921": {
      "offset": [
        2878,
        2893
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "1922": {
      "offset": [
        2878,
        2922
      ],
      "op": "GT",
      "path": "2"
    },
    "1923": {
      "fn": "DistributorNative.register",
      "offset": [
        2878,
        2922
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1924": {
      "offset": [
        2815,
        2922
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1925": {
      "offset": [
        2815,
        2967
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1926": {
      "fn": "DistributorNative.register",
      "offset": [
        2815,
        2967
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1927": {
      "fn": "DistributorNative.register",
      "offset": [
        2815,
        2967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x793"
    },
    "1930": {
      "offset": [
        2815,
        2967
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1931": {
      "op": "POP"
    },
    "1932": {
      "offset": [
        2940,
        2967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x11"
    },
    "1934": {
      "fn": "DistributorNative.register",
      "offset": [
        2940,
        2967
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1935": {
      "fn": "DistributorNative.register",
      "offset": [
        2940,
        2967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1937": {
      "fn": "DistributorNative.register",
      "offset": [
        2940,
        2967
      ],
      "op": "AND",
      "path": "2"
    },
    "1938": {
      "offset": [
        2939,
        2967
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1939": {
      "offset": [
        2815,
        2967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1940": {
      "offset": [
        2794,
        3029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B8"
    },
    "1943": {
      "offset": [
        2794,
        3029
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1944": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1946": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1947": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1953": {
      "op": "SHL"
    },
    "1954": {
      "offset": [
        2794,
        3029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1955": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1956": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1958": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "ADD",
      "path": "2"
    },
    "1959": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "1962": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1963": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25E7"
    },
    "1966": {
      "fn": "DistributorNative.register",
      "jump": "i",
      "offset": [
        2794,
        3029
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1967": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1968": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1970": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1971": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1972": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1973": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "SUB",
      "path": "2"
    },
    "1974": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1975": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "1976": {
      "fn": "DistributorNative.register",
      "offset": [
        2794,
        3029
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1977": {
      "fn": "DistributorNative.register",
      "offset": [
        3380,
        3405
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 0,
      "value": "0x7C1"
    },
    "1980": {
      "fn": "DistributorNative.register",
      "offset": [
        3394,
        3404
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1981": {
      "fn": "DistributorNative.register",
      "offset": [
        3380,
        3393
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2040"
    },
    "1984": {
      "fn": "DistributorNative.register",
      "jump": "i",
      "offset": [
        3380,
        3405
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1985": {
      "fn": "DistributorNative.register",
      "offset": [
        3380,
        3405
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1986": {
      "fn": "DistributorNative.register",
      "jump": "o",
      "offset": [
        3315,
        3412
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1987": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1988": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12260,
        12276
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1990": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12295,
        12320
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x9"
    },
    "1992": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1993": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1994": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1995": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1997": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "MUL",
      "path": "2"
    },
    "1998": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2000": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "ADD",
      "path": "2"
    },
    "2001": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2003": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2004": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2005": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2006": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "ADD",
      "path": "2"
    },
    "2007": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2009": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2010": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2011": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2012": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2013": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2014": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2015": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2016": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2017": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2019": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "ADD",
      "path": "2"
    },
    "2020": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2021": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2022": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2023": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2024": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2025": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x811"
    },
    "2028": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2029": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2031": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "MUL",
      "path": "2"
    },
    "2032": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2033": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "ADD",
      "path": "2"
    },
    "2034": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2035": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2036": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2038": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2039": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2041": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2043": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2044": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2045": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2046": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2047": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2048": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2049": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2050": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2052": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "ADD",
      "path": "2"
    },
    "2053": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2054": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2056": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "ADD",
      "path": "2"
    },
    "2057": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2058": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2059": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2060": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "GT",
      "path": "2"
    },
    "2061": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7FD"
    },
    "2064": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2065": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2066": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "POP",
      "path": "2"
    },
    "2067": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "POP",
      "path": "2"
    },
    "2068": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "POP",
      "path": "2"
    },
    "2069": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "POP",
      "path": "2"
    },
    "2070": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "POP",
      "path": "2"
    },
    "2071": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2072": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12288,
        12320
      ],
      "op": "POP",
      "path": "2"
    },
    "2073": {
      "fn": "DistributorNative.getVestingUnlocks",
      "offset": [
        12210,
        12327
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2074": {
      "fn": "DistributorNative.getVestingUnlocks",
      "jump": "o",
      "offset": [
        12210,
        12327
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2075": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2076": {
      "offset": [
        2834,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "2078": {
      "offset": [
        2834,
        2861
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2079": {
      "offset": [
        2815,
        2830
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2080": {
      "offset": [
        2815,
        2861
      ],
      "op": "LT",
      "path": "2"
    },
    "2081": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2815,
        2861
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2082": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2815,
        2861
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2083": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2815,
        2861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2084": {
      "offset": [
        2815,
        2922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82F"
    },
    "2087": {
      "offset": [
        2815,
        2922
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2088": {
      "op": "POP"
    },
    "2089": {
      "offset": [
        2897,
        2922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "2091": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2897,
        2922
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2092": {
      "offset": [
        2878,
        2893
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2093": {
      "offset": [
        2878,
        2922
      ],
      "op": "GT",
      "path": "2"
    },
    "2094": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2878,
        2922
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2095": {
      "offset": [
        2815,
        2922
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2096": {
      "offset": [
        2815,
        2967
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2097": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2815,
        2967
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2098": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2815,
        2967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x83E"
    },
    "2101": {
      "offset": [
        2815,
        2967
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2102": {
      "op": "POP"
    },
    "2103": {
      "offset": [
        2940,
        2967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x11"
    },
    "2105": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2940,
        2967
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2106": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2940,
        2967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2108": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2940,
        2967
      ],
      "op": "AND",
      "path": "2"
    },
    "2109": {
      "offset": [
        2939,
        2967
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2110": {
      "offset": [
        2815,
        2967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2111": {
      "offset": [
        2794,
        3029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85A"
    },
    "2114": {
      "offset": [
        2794,
        3029
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2115": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2794,
        3029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2117": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2794,
        3029
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2118": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2124": {
      "op": "SHL"
    },
    "2125": {
      "offset": [
        2794,
        3029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2126": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2794,
        3029
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2127": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2794,
        3029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2129": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2794,
        3029
      ],
      "op": "ADD",
      "path": "2"
    },
    "2130": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2794,
        3029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "2133": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2794,
        3029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2134": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2794,
        3029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25E7"
    },
    "2137": {
      "fn": "DistributorNative.registerUser",
      "jump": "i",
      "offset": [
        2794,
        3029
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2138": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2794,
        3029
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2139": {
      "offset": [
        2536,
        2541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "2141": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2536,
        2541
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2148": {
      "op": "SHL"
    },
    "2149": {
      "op": "SUB"
    },
    "2150": {
      "offset": [
        2536,
        2541
      ],
      "op": "AND",
      "path": "2"
    },
    "2151": {
      "offset": [
        2522,
        2532
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2152": {
      "offset": [
        2522,
        2541
      ],
      "op": "EQ",
      "path": "2"
    },
    "2153": {
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x884"
    },
    "2156": {
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2157": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2159": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2514,
        2571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2160": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2164": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2166": {
      "op": "SHL"
    },
    "2167": {
      "offset": [
        2514,
        2571
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2168": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2514,
        2571
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2169": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2171": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2514,
        2571
      ],
      "op": "ADD",
      "path": "2"
    },
    "2172": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "2175": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2514,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2176": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2634"
    },
    "2179": {
      "fn": "DistributorNative.registerUser",
      "jump": "i",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2180": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2181": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3513,
        3536
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 2,
      "value": "0x88D"
    },
    "2184": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3527,
        3535
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2185": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3513,
        3526
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2040"
    },
    "2188": {
      "fn": "DistributorNative.registerUser",
      "jump": "i",
      "offset": [
        3513,
        3536
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2189": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3513,
        3536
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2190": {
      "fn": "DistributorNative.registerUser",
      "offset": [
        3418,
        3543
      ],
      "op": "POP",
      "path": "2"
    },
    "2191": {
      "fn": "DistributorNative.registerUser",
      "jump": "o",
      "offset": [
        3418,
        3543
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2192": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12333,
        12491
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2193": {
      "offset": [
        2536,
        2541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "2195": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        2536,
        2541
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2202": {
      "op": "SHL"
    },
    "2203": {
      "op": "SUB"
    },
    "2204": {
      "offset": [
        2536,
        2541
      ],
      "op": "AND",
      "path": "2"
    },
    "2205": {
      "offset": [
        2522,
        2532
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2206": {
      "offset": [
        2522,
        2541
      ],
      "op": "EQ",
      "path": "2"
    },
    "2207": {
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8BA"
    },
    "2210": {
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2211": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2213": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2214": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2220": {
      "op": "SHL"
    },
    "2221": {
      "offset": [
        2514,
        2571
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2222": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2223": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2225": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "ADD",
      "path": "2"
    },
    "2226": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "2229": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2230": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2634"
    },
    "2233": {
      "fn": "DistributorNative.stopRegistrationRound",
      "jump": "i",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2234": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2235": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12393,
        12420
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x11"
    },
    "2237": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12393,
        12427
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2238": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12393,
        12427
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2241": {
      "op": "NOT"
    },
    "2242": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12393,
        12427
      ],
      "op": "AND",
      "path": "2"
    },
    "2243": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12423,
        12427
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2245": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12393,
        12427
      ],
      "op": "OR",
      "path": "2"
    },
    "2246": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12393,
        12427
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2247": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12393,
        12427
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2248": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12443,
        12484
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x40"
    },
    "2250": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12443,
        12484
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2251": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12443,
        12484
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x7069B20063A2C984D75A2165D1633FD0BE67AFE3680341D2FC5D0CCE78C9CEEA"
    },
    "2284": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12443,
        12484
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2285": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12443,
        12484
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F9"
    },
    "2288": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12443,
        12484
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2289": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12468,
        12483
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2290": {
      "op": "DUP2"
    },
    "2291": {
      "op": "MSTORE"
    },
    "2292": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2294": {
      "op": "ADD"
    },
    "2295": {
      "op": "SWAP1"
    },
    "2296": {
      "op": "JUMP"
    },
    "2297": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12443,
        12484
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2298": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12443,
        12484
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2300": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12443,
        12484
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2301": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12443,
        12484
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2302": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12443,
        12484
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2303": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12443,
        12484
      ],
      "op": "SUB",
      "path": "2"
    },
    "2304": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12443,
        12484
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2305": {
      "fn": "DistributorNative.stopRegistrationRound",
      "offset": [
        12443,
        12484
      ],
      "op": "LOG1",
      "path": "2"
    },
    "2306": {
      "fn": "DistributorNative.stopRegistrationRound",
      "jump": "o",
      "offset": [
        12333,
        12491
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2307": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4319,
        5893
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2308": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4377,
        4401
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0xA"
    },
    "2310": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4377,
        4408
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2311": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4377,
        4412
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2312": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4377,
        4412
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2313": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4377,
        4412
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2314": {
      "branch": 101,
      "fn": "DistributorNative.withdraw",
      "offset": [
        4377,
        4412
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2315": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4377,
        4464
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x915"
    },
    "2318": {
      "branch": 101,
      "fn": "DistributorNative.withdraw",
      "offset": [
        4377,
        4464
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2319": {
      "op": "POP"
    },
    "2320": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4428,
        4453
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "2322": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4428,
        4460
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2323": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4428,
        4464
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2324": {
      "branch": 102,
      "fn": "DistributorNative.withdraw",
      "offset": [
        4428,
        4464
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2325": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4377,
        4464
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2326": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4356,
        4520
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x931"
    },
    "2329": {
      "branch": 102,
      "fn": "DistributorNative.withdraw",
      "offset": [
        4356,
        4520
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2330": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4356,
        4520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2332": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4356,
        4520
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2333": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2339": {
      "op": "SHL"
    },
    "2340": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4356,
        4520
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2341": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4356,
        4520
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2342": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4356,
        4520
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2344": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4356,
        4520
      ],
      "op": "ADD",
      "path": "2"
    },
    "2345": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4356,
        4520
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "2348": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4356,
        4520
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2349": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4356,
        4520
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x266B"
    },
    "2352": {
      "fn": "DistributorNative.withdraw",
      "jump": "i",
      "offset": [
        4356,
        4520
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2353": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4356,
        4520
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2354": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4552,
        4562
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 6
    },
    "2355": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4538,
        4551
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2357": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4538,
        4563
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2358": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4538,
        4563
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2359": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4538,
        4563
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2360": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4538,
        4563
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2362": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4538,
        4563
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2363": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4538,
        4563
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2364": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4538,
        4563
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2365": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4538,
        4563
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2367": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4538,
        4563
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2368": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4538,
        4563
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2369": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4538,
        4576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2371": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4538,
        4576
      ],
      "op": "ADD",
      "path": "2"
    },
    "2372": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4538,
        4576
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2373": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4538,
        4576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2375": {
      "branch": 103,
      "fn": "DistributorNative.withdraw",
      "offset": [
        4538,
        4576
      ],
      "op": "AND",
      "path": "2"
    },
    "2376": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4530,
        4606
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x993"
    },
    "2379": {
      "branch": 103,
      "fn": "DistributorNative.withdraw",
      "offset": [
        4530,
        4606
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2380": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4530,
        4606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2382": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4530,
        4606
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2383": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2389": {
      "op": "SHL"
    },
    "2390": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4530,
        4606
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2391": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4530,
        4606
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2394": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4530,
        4606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2396": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4530,
        4606
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2397": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4530,
        4606
      ],
      "op": "ADD",
      "path": "2"
    },
    "2398": {
      "op": "MSTORE"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2403": {
      "op": "DUP3"
    },
    "2404": {
      "op": "ADD"
    },
    "2405": {
      "op": "MSTORE"
    },
    "2406": {
      "op": "PUSH32",
      "value": "0x41646472657373206973206E6F74207265676973746572656400000000000000"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2441": {
      "op": "DUP3"
    },
    "2442": {
      "op": "ADD"
    },
    "2443": {
      "op": "MSTORE"
    },
    "2444": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2446": {
      "op": "ADD"
    },
    "2447": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4530,
        4606
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "2450": {
      "op": "JUMP"
    },
    "2451": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4530,
        4606
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2452": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4639,
        4649
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 7
    },
    "2453": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4624,
        4650
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2455": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4624,
        4650
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2456": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4624,
        4650
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2457": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4624,
        4650
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2458": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4624,
        4638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2460": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4624,
        4650
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2462": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4624,
        4650
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2463": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4624,
        4650
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2465": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4624,
        4650
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2466": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4624,
        4650
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2467": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4624,
        4665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2469": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4624,
        4665
      ],
      "op": "ADD",
      "path": "2"
    },
    "2470": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4624,
        4665
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2471": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4624,
        4665
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2473": {
      "branch": 104,
      "fn": "DistributorNative.withdraw",
      "offset": [
        4624,
        4665
      ],
      "op": "AND",
      "path": "2"
    },
    "2474": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4616,
        4713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA09"
    },
    "2477": {
      "branch": 104,
      "fn": "DistributorNative.withdraw",
      "offset": [
        4616,
        4713
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2478": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4616,
        4713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2480": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4616,
        4713
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2481": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2487": {
      "op": "SHL"
    },
    "2488": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4616,
        4713
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2489": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4616,
        4713
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2492": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4616,
        4713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2494": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4616,
        4713
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2495": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4616,
        4713
      ],
      "op": "ADD",
      "path": "2"
    },
    "2496": {
      "op": "MSTORE"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2501": {
      "op": "DUP3"
    },
    "2502": {
      "op": "ADD"
    },
    "2503": {
      "op": "MSTORE"
    },
    "2504": {
      "op": "PUSH32",
      "value": "0x41646472657373206973206E6F742070617274696369706174656420696E2064"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2539": {
      "op": "DUP3"
    },
    "2540": {
      "op": "ADD"
    },
    "2541": {
      "op": "MSTORE"
    },
    "2542": {
      "op": "PUSH11",
      "value": "0x34B9BA3934B13ABA34B7B7"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "2556": {
      "op": "SHL"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2559": {
      "op": "DUP3"
    },
    "2560": {
      "op": "ADD"
    },
    "2561": {
      "op": "MSTORE"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2564": {
      "op": "ADD"
    },
    "2565": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4616,
        4713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "2568": {
      "op": "JUMP"
    },
    "2569": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4616,
        4713
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2570": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4750,
        4760
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 8
    },
    "2571": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4732,
        4761
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2573": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4732,
        4761
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2574": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4732,
        4761
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2575": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4732,
        4761
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2576": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4732,
        4749
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2578": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4732,
        4761
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2580": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4732,
        4761
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2581": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4732,
        4761
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2583": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4732,
        4761
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2584": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4732,
        4761
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2585": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4732,
        4761
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2586": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4732,
        4761
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2588": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4732,
        4761
      ],
      "op": "AND",
      "path": "2"
    },
    "2589": {
      "branch": 105,
      "fn": "DistributorNative.withdraw",
      "offset": [
        4731,
        4761
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2590": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4723,
        4803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA77"
    },
    "2593": {
      "branch": 105,
      "fn": "DistributorNative.withdraw",
      "offset": [
        4723,
        4803
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2594": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4723,
        4803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2596": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4723,
        4803
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2597": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2603": {
      "op": "SHL"
    },
    "2604": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4723,
        4803
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2605": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4723,
        4803
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2608": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4723,
        4803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2610": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4723,
        4803
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2611": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4723,
        4803
      ],
      "op": "ADD",
      "path": "2"
    },
    "2612": {
      "op": "MSTORE"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2617": {
      "op": "DUP3"
    },
    "2618": {
      "op": "ADD"
    },
    "2619": {
      "op": "MSTORE"
    },
    "2620": {
      "op": "PUSH32",
      "value": "0x416464726573732068617320657865637574656420776974686472617720616C"
    },
    "2653": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2655": {
      "op": "DUP3"
    },
    "2656": {
      "op": "ADD"
    },
    "2657": {
      "op": "MSTORE"
    },
    "2658": {
      "op": "PUSH5",
      "value": "0x7265616479"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2666": {
      "op": "SHL"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2669": {
      "op": "DUP3"
    },
    "2670": {
      "op": "ADD"
    },
    "2671": {
      "op": "MSTORE"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2674": {
      "op": "ADD"
    },
    "2675": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4723,
        4803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "2678": {
      "op": "JUMP"
    },
    "2679": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4723,
        4803
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2680": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4901,
        4911
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2681": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4814,
        4837
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2683": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4887,
        4912
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2684": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4887,
        4912
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2685": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4887,
        4912
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2686": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4887,
        4912
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2688": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4887,
        4912
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2689": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4887,
        4912
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2690": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4887,
        4912
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2691": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4887,
        4912
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2693": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4887,
        4912
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2694": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4887,
        4912
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2695": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4931,
        4962
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "2697": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4931,
        4962
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2698": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4931,
        4962
      ],
      "op": "ADD",
      "path": "2"
    },
    "2699": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4931,
        4962
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2700": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4923,
        4999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAA7"
    },
    "2703": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4923,
        4999
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2704": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4923,
        4999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2706": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4923,
        4999
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2707": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2713": {
      "op": "SHL"
    },
    "2714": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4923,
        4999
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2715": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4923,
        4999
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2716": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4923,
        4999
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2718": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4923,
        4999
      ],
      "op": "ADD",
      "path": "2"
    },
    "2719": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4923,
        4999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "2722": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4923,
        4999
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2723": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4923,
        4999
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26A2"
    },
    "2726": {
      "fn": "DistributorNative.withdraw",
      "jump": "i",
      "offset": [
        4923,
        4999
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2727": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4923,
        4999
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2728": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5015,
        5021
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2730": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5010,
        5433
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2731": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5031,
        5056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "2733": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5031,
        5063
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2734": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5027,
        5063
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2735": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5027,
        5063
      ],
      "op": "LT",
      "path": "2"
    },
    "2736": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5010,
        5433
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2737": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5010,
        5433
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB3C"
    },
    "2740": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5010,
        5433
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2741": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "2743": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5133,
        5134
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2744": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2745": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2746": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2747": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "LT",
      "path": "2"
    },
    "2748": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAC7"
    },
    "2751": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2752": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAC7"
    },
    "2755": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D9"
    },
    "2758": {
      "fn": "DistributorNative.withdraw",
      "jump": "i",
      "offset": [
        5107,
        5135
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2759": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2760": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2761": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2763": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2764": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2766": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2768": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2769": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "ADD",
      "path": "2"
    },
    "2770": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5107,
        5135
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2771": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5088,
        5103
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "2772": {
      "branch": 106,
      "fn": "DistributorNative.withdraw",
      "offset": [
        5088,
        5135
      ],
      "op": "LT",
      "path": "2"
    },
    "2773": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5084,
        5423
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2A"
    },
    "2776": {
      "branch": 106,
      "fn": "DistributorNative.withdraw",
      "offset": [
        5084,
        5423
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2777": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5156,
        5181
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2779": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5184,
        5333
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB1A"
    },
    "2782": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5316,
        5332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2784": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5316,
        5332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2785": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5184,
        5290
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB14"
    },
    "2788": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "2790": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5287,
        5288
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2791": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2792": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2793": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2794": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "LT",
      "path": "2"
    },
    "2795": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAF6"
    },
    "2798": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2799": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAF6"
    },
    "2802": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D9"
    },
    "2805": {
      "fn": "DistributorNative.withdraw",
      "jump": "i",
      "offset": [
        5262,
        5289
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2806": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2807": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2808": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2810": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2811": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2813": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2815": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2816": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "ADD",
      "path": "2"
    },
    "2817": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5262,
        5289
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2818": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5184,
        5196
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2819": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5184,
        5236
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2821": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5184,
        5236
      ],
      "op": "ADD",
      "path": "2"
    },
    "2822": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5184,
        5236
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2823": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5184,
        5261
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2170"
    },
    "2826": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5184,
        5261
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2827": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5184,
        5290
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2828": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5184,
        5290
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2829": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5184,
        5290
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "2834": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5184,
        5290
      ],
      "op": "AND",
      "path": "2"
    },
    "2835": {
      "fn": "DistributorNative.withdraw",
      "jump": "i",
      "offset": [
        5184,
        5290
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2836": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5184,
        5290
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2837": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5184,
        5315
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2838": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5184,
        5315
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2183"
    },
    "2841": {
      "fn": "DistributorNative.withdraw",
      "jump": "i",
      "offset": [
        5184,
        5333
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2842": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5184,
        5333
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2843": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5156,
        5333
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2844": {
      "op": "POP"
    },
    "2845": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5370,
        5408
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0xB26"
    },
    "2848": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5370,
        5385
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2849": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5156,
        5333
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2850": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5370,
        5389
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x218F"
    },
    "2853": {
      "fn": "DistributorNative.withdraw",
      "jump": "i",
      "offset": [
        5370,
        5408
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2854": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5370,
        5408
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2855": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5352,
        5408
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2856": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5352,
        5408
      ],
      "op": "POP",
      "path": "2"
    },
    "2857": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5137,
        5423
      ],
      "op": "POP",
      "path": "2"
    },
    "2858": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5084,
        5423
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2859": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5065,
        5068
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 11
    },
    "2860": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5065,
        5068
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB34"
    },
    "2863": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5065,
        5068
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2864": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5065,
        5068
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2705"
    },
    "2867": {
      "fn": "DistributorNative.withdraw",
      "jump": "i",
      "offset": [
        5065,
        5068
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2868": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5065,
        5068
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2869": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5065,
        5068
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2870": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5065,
        5068
      ],
      "op": "POP",
      "path": "2"
    },
    "2871": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5065,
        5068
      ],
      "op": "POP",
      "path": "2"
    },
    "2872": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5010,
        5433
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAAA"
    },
    "2875": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5010,
        5433
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2876": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5010,
        5433
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2877": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5010,
        5433
      ],
      "op": "POP",
      "path": "2"
    },
    "2878": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5469,
        5470
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x0"
    },
    "2880": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5451,
        5466
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2881": {
      "branch": 107,
      "fn": "DistributorNative.withdraw",
      "offset": [
        5451,
        5470
      ],
      "op": "GT",
      "path": "2"
    },
    "2882": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5443,
        5504
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB8D"
    },
    "2885": {
      "branch": 107,
      "fn": "DistributorNative.withdraw",
      "offset": [
        5443,
        5504
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2886": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5443,
        5504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2888": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5443,
        5504
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2889": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2893": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2895": {
      "op": "SHL"
    },
    "2896": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5443,
        5504
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2897": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5443,
        5504
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2900": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5443,
        5504
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2902": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5443,
        5504
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2903": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5443,
        5504
      ],
      "op": "ADD",
      "path": "2"
    },
    "2904": {
      "op": "MSTORE"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2907": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2909": {
      "op": "DUP3"
    },
    "2910": {
      "op": "ADD"
    },
    "2911": {
      "op": "MSTORE"
    },
    "2912": {
      "op": "PUSH32",
      "value": "0x5468657265206973206E6F7468696E6720746F20776964746864726177000000"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2947": {
      "op": "DUP3"
    },
    "2948": {
      "op": "ADD"
    },
    "2949": {
      "op": "MSTORE"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2952": {
      "op": "ADD"
    },
    "2953": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5443,
        5504
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "2956": {
      "op": "JUMP"
    },
    "2957": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5443,
        5504
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2958": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5541,
        5562
      ],
      "op": "SELFBALANCE",
      "path": "2",
      "statement": 13
    },
    "2959": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5522,
        5537
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2960": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5522,
        5562
      ],
      "op": "GT",
      "path": "2"
    },
    "2961": {
      "branch": 108,
      "fn": "DistributorNative.withdraw",
      "offset": [
        5522,
        5562
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2962": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5514,
        5603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBAD"
    },
    "2965": {
      "branch": 108,
      "fn": "DistributorNative.withdraw",
      "offset": [
        5514,
        5603
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2966": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5514,
        5603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2968": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5514,
        5603
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2969": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2975": {
      "op": "SHL"
    },
    "2976": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5514,
        5603
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2977": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5514,
        5603
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2978": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5514,
        5603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2980": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5514,
        5603
      ],
      "op": "ADD",
      "path": "2"
    },
    "2981": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5514,
        5603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "2984": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5514,
        5603
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2985": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5514,
        5603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x271E"
    },
    "2988": {
      "fn": "DistributorNative.withdraw",
      "jump": "i",
      "offset": [
        5514,
        5603
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2989": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5514,
        5603
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2990": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5640,
        5650
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 14
    },
    "2991": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5622,
        5651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2993": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5622,
        5651
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2994": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5622,
        5651
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2995": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5622,
        5651
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2996": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5622,
        5639
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2998": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5622,
        5651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3000": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5622,
        5651
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3001": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5622,
        5651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3003": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5622,
        5651
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3004": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5622,
        5651
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3005": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5622,
        5658
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3006": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5622,
        5658
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3007": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3009": {
      "op": "NOT"
    },
    "3010": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5622,
        5658
      ],
      "op": "AND",
      "path": "2"
    },
    "3011": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5654,
        5658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3013": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5622,
        5658
      ],
      "op": "OR",
      "path": "2"
    },
    "3014": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5622,
        5658
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3015": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5622,
        5658
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3016": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5706,
        5741
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 15,
      "value": "0xE"
    },
    "3018": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5706,
        5741
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3019": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5706,
        5762
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD4"
    },
    "3022": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5706,
        5762
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3023": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5746,
        5761
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3024": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5706,
        5745
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x218F"
    },
    "3027": {
      "fn": "DistributorNative.withdraw",
      "jump": "i",
      "offset": [
        5706,
        5762
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3028": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5706,
        5762
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3029": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5668,
        5703
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "3031": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5668,
        5762
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3032": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 16,
      "value": "0x40"
    },
    "3034": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3035": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5781,
        5791
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3036": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5781,
        5791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3037": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3038": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3039": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8FC"
    },
    "3042": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "MUL",
      "path": "2"
    },
    "3043": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3044": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5802,
        5817
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3045": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5802,
        5817
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3046": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3048": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3049": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3050": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3051": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5802,
        5817
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3052": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5781,
        5791
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3053": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3054": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "CALL",
      "path": "2"
    },
    "3055": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3056": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "POP",
      "path": "2"
    },
    "3057": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "POP",
      "path": "2"
    },
    "3058": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "POP",
      "path": "2"
    },
    "3059": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "POP",
      "path": "2"
    },
    "3060": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3061": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3062": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3063": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC04"
    },
    "3066": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3067": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3068": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3070": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3071": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3072": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3073": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3075": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3076": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5773,
        5818
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3077": {
      "op": "POP"
    },
    "3078": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5842,
        5886
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x40"
    },
    "3080": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5842,
        5886
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3081": {
      "op": "DUP3"
    },
    "3082": {
      "op": "DUP2"
    },
    "3083": {
      "op": "MSTORE"
    },
    "3084": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5858,
        5868
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3085": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5858,
        5868
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3086": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5842,
        5886
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B"
    },
    "3119": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5842,
        5886
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3122": {
      "op": "ADD"
    },
    "3123": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5842,
        5886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3125": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5842,
        5886
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3126": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5842,
        5886
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3127": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5842,
        5886
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3128": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5842,
        5886
      ],
      "op": "SUB",
      "path": "2"
    },
    "3129": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5842,
        5886
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3130": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        5842,
        5886
      ],
      "op": "LOG2",
      "path": "2"
    },
    "3131": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4346,
        5893
      ],
      "op": "POP",
      "path": "2"
    },
    "3132": {
      "fn": "DistributorNative.withdraw",
      "offset": [
        4346,
        5893
      ],
      "op": "POP",
      "path": "2"
    },
    "3133": {
      "fn": "DistributorNative.withdraw",
      "jump": "o",
      "offset": [
        4319,
        5893
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3134": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3135": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11776,
        11792
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3137": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11804,
        11830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3139": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11847,
        11865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3141": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11847,
        11865
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3142": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3151": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3152": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "GT",
      "path": "2"
    },
    "3153": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3154": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC5D"
    },
    "3157": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3158": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC5D"
    },
    "3161": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C8"
    },
    "3164": {
      "fn": "DistributorNative.getRegisteredUsers",
      "jump": "i",
      "offset": [
        11833,
        11866
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3165": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3166": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3168": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3169": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3170": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3171": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3172": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3173": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3174": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3176": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "MUL",
      "path": "2"
    },
    "3177": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3179": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "ADD",
      "path": "2"
    },
    "3180": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3181": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "ADD",
      "path": "2"
    },
    "3182": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3184": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3185": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3186": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3187": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC86"
    },
    "3190": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3191": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3192": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3194": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "ADD",
      "path": "2"
    },
    "3195": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3197": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3198": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "MUL",
      "path": "2"
    },
    "3199": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3200": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "3201": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3202": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "3203": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "ADD",
      "path": "2"
    },
    "3204": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3205": {
      "op": "POP"
    },
    "3206": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3207": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11833,
        11866
      ],
      "op": "POP",
      "path": "2"
    },
    "3208": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11804,
        11866
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3209": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11804,
        11866
      ],
      "op": "POP",
      "path": "2"
    },
    "3210": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11882,
        11888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3212": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11877,
        12049
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3213": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11898,
        11916
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3215": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11898,
        11916
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3216": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11894,
        11895
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3217": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11894,
        11916
      ],
      "op": "LT",
      "path": "2"
    },
    "3218": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11877,
        12049
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3219": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11877,
        12049
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF2"
    },
    "3222": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11877,
        12049
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3223": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11937,
        11964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3225": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11967,
        11990
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3226": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11967,
        11990
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3227": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11967,
        11990
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3228": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11967,
        11987
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3230": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11967,
        11990
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3232": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11967,
        11990
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3233": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11967,
        11990
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3235": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11967,
        11990
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3236": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11967,
        11990
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3237": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11967,
        11990
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3238": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 18
    },
    "3239": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3246": {
      "op": "SHL"
    },
    "3247": {
      "op": "SUB"
    },
    "3248": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11967,
        11990
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3249": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11967,
        11990
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3250": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11967,
        11990
      ],
      "op": "AND",
      "path": "2"
    },
    "3251": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11967,
        11990
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3252": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11967,
        11990
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3253": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11967,
        11990
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3254": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12013
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3255": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12013
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3256": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11988,
        11989
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3257": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11988,
        11989
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3258": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3259": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "LT",
      "path": "2"
    },
    "3260": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC7"
    },
    "3263": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3264": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC7"
    },
    "3267": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D9"
    },
    "3270": {
      "fn": "DistributorNative.getRegisteredUsers",
      "jump": "i",
      "offset": [
        12004,
        12016
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3271": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3278": {
      "op": "SHL"
    },
    "3279": {
      "op": "SUB"
    },
    "3280": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12038
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3281": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12038
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3282": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12038
      ],
      "op": "AND",
      "path": "2"
    },
    "3283": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3285": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3286": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3287": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "MUL",
      "path": "2"
    },
    "3288": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3289": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3290": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3291": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "ADD",
      "path": "2"
    },
    "3292": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3293": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3294": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12016
      ],
      "op": "ADD",
      "path": "2"
    },
    "3295": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12004,
        12038
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3296": {
      "op": "POP"
    },
    "3297": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11918,
        11921
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 19
    },
    "3298": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11918,
        11921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCEA"
    },
    "3301": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11918,
        11921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3302": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11918,
        11921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2705"
    },
    "3305": {
      "fn": "DistributorNative.getRegisteredUsers",
      "jump": "i",
      "offset": [
        11918,
        11921
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3306": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11918,
        11921
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3307": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11918,
        11921
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3308": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11918,
        11921
      ],
      "op": "POP",
      "path": "2"
    },
    "3309": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11918,
        11921
      ],
      "op": "POP",
      "path": "2"
    },
    "3310": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11877,
        12049
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC8C"
    },
    "3313": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11877,
        12049
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3314": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11877,
        12049
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3315": {
      "op": "POP"
    },
    "3316": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        12066,
        12075
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 20
    },
    "3317": {
      "fn": "DistributorNative.getRegisteredUsers",
      "offset": [
        11725,
        12082
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3318": {
      "op": "POP"
    },
    "3319": {
      "fn": "DistributorNative.getRegisteredUsers",
      "jump": "o",
      "offset": [
        11725,
        12082
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3320": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11237,
        11719
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3321": {
      "offset": [
        2536,
        2541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3323": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        2536,
        2541
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3330": {
      "op": "SHL"
    },
    "3331": {
      "op": "SUB"
    },
    "3332": {
      "offset": [
        2536,
        2541
      ],
      "op": "AND",
      "path": "2"
    },
    "3333": {
      "offset": [
        2522,
        2532
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3334": {
      "offset": [
        2522,
        2541
      ],
      "op": "EQ",
      "path": "2"
    },
    "3335": {
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD22"
    },
    "3338": {
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3339": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3341": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        2514,
        2571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3342": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3348": {
      "op": "SHL"
    },
    "3349": {
      "offset": [
        2514,
        2571
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3350": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        2514,
        2571
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3351": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3353": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        2514,
        2571
      ],
      "op": "ADD",
      "path": "2"
    },
    "3354": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "3357": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        2514,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3358": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2634"
    },
    "3361": {
      "fn": "DistributorNative.setVestingEndDate",
      "jump": "i",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3362": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3363": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11330,
        11354
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 21,
      "value": "0xA"
    },
    "3365": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11330,
        11361
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3366": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11330,
        11365
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3367": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11330,
        11365
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3368": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11330,
        11365
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3369": {
      "branch": 109,
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11330,
        11365
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3370": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11330,
        11417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD34"
    },
    "3373": {
      "branch": 109,
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11330,
        11417
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3374": {
      "op": "POP"
    },
    "3375": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11381,
        11406
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "3377": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11381,
        11413
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3378": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11381,
        11417
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3379": {
      "branch": 110,
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11381,
        11417
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3380": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11330,
        11417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3381": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11309,
        11473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD50"
    },
    "3384": {
      "branch": 110,
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11309,
        11473
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3385": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11309,
        11473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3387": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11309,
        11473
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3388": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3394": {
      "op": "SHL"
    },
    "3395": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11309,
        11473
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3396": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11309,
        11473
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3397": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11309,
        11473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3399": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11309,
        11473
      ],
      "op": "ADD",
      "path": "2"
    },
    "3400": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11309,
        11473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "3403": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11309,
        11473
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3404": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11309,
        11473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x266B"
    },
    "3407": {
      "fn": "DistributorNative.setVestingEndDate",
      "jump": "i",
      "offset": [
        11309,
        11473
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3408": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11309,
        11473
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3409": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11540
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 22,
      "value": "0x9"
    },
    "3411": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11541,
        11573
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3412": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11541,
        11573
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3413": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11541,
        11577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD60"
    },
    "3416": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11541,
        11577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3417": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11576,
        11577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3419": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11576,
        11577
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3420": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11541,
        11577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2762"
    },
    "3423": {
      "fn": "DistributorNative.setVestingEndDate",
      "jump": "i",
      "offset": [
        11541,
        11577
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3424": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11541,
        11577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3425": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3426": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3427": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3428": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "LT",
      "path": "2"
    },
    "3429": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD70"
    },
    "3432": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3433": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD70"
    },
    "3436": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D9"
    },
    "3439": {
      "fn": "DistributorNative.setVestingEndDate",
      "jump": "i",
      "offset": [
        11515,
        11578
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3440": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3441": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3442": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3444": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3445": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3447": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3449": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3450": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "ADD",
      "path": "2"
    },
    "3451": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11515,
        11578
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3452": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11504,
        11512
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3453": {
      "branch": 111,
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11504,
        11578
      ],
      "op": "GT",
      "path": "2"
    },
    "3454": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11483,
        11676
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE00"
    },
    "3457": {
      "branch": 111,
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11483,
        11676
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3458": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11483,
        11676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3460": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11483,
        11676
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3461": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3465": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3467": {
      "op": "SHL"
    },
    "3468": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11483,
        11676
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3469": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11483,
        11676
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3472": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11483,
        11676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3474": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11483,
        11676
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3475": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11483,
        11676
      ],
      "op": "ADD",
      "path": "2"
    },
    "3476": {
      "op": "MSTORE"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x48"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3481": {
      "op": "DUP3"
    },
    "3482": {
      "op": "ADD"
    },
    "3483": {
      "op": "MSTORE"
    },
    "3484": {
      "op": "PUSH32",
      "value": "0x546865206C61737420646179206F662074686520646973747269627574696F6E"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3519": {
      "op": "DUP3"
    },
    "3520": {
      "op": "ADD"
    },
    "3521": {
      "op": "MSTORE"
    },
    "3522": {
      "op": "PUSH32",
      "value": "0x206D757374206265206C61746572207468616E20746865206C61737420756E6C"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3557": {
      "op": "DUP3"
    },
    "3558": {
      "op": "ADD"
    },
    "3559": {
      "op": "MSTORE"
    },
    "3560": {
      "op": "PUSH8",
      "value": "0x6F636B2074696D65"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3571": {
      "op": "SHL"
    },
    "3572": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3574": {
      "op": "DUP3"
    },
    "3575": {
      "op": "ADD"
    },
    "3576": {
      "op": "MSTORE"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "3579": {
      "op": "ADD"
    },
    "3580": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11483,
        11676
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "3583": {
      "op": "JUMP"
    },
    "3584": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11483,
        11676
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3585": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11687,
        11701
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0x6"
    },
    "3587": {
      "fn": "DistributorNative.setVestingEndDate",
      "offset": [
        11687,
        11712
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3588": {
      "fn": "DistributorNative.setVestingEndDate",
      "jump": "o",
      "offset": [
        11237,
        11719
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3589": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3590": {
      "offset": [
        2536,
        2541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3592": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        2536,
        2541
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3599": {
      "op": "SHL"
    },
    "3600": {
      "op": "SUB"
    },
    "3601": {
      "offset": [
        2536,
        2541
      ],
      "op": "AND",
      "path": "2"
    },
    "3602": {
      "offset": [
        2522,
        2532
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3603": {
      "offset": [
        2522,
        2541
      ],
      "op": "EQ",
      "path": "2"
    },
    "3604": {
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE2F"
    },
    "3607": {
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3608": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3610": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        2514,
        2571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3611": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3617": {
      "op": "SHL"
    },
    "3618": {
      "offset": [
        2514,
        2571
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3619": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        2514,
        2571
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3620": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3622": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        2514,
        2571
      ],
      "op": "ADD",
      "path": "2"
    },
    "3623": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "3626": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        2514,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3627": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2634"
    },
    "3630": {
      "fn": "DistributorNative.setDistributionRound",
      "jump": "i",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3631": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3632": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10866,
        10878
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 24,
      "value": "0xC"
    },
    "3634": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10866,
        10888
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3639": {
      "op": "SHL"
    },
    "3640": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10866,
        10888
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3641": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10866,
        10888
      ],
      "op": "DIV",
      "path": "2"
    },
    "3642": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10866,
        10888
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3644": {
      "branch": 112,
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10866,
        10888
      ],
      "op": "AND",
      "path": "2"
    },
    "3645": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10858,
        10928
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE94"
    },
    "3648": {
      "branch": 112,
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10858,
        10928
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3649": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10858,
        10928
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3651": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10858,
        10928
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3652": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3658": {
      "op": "SHL"
    },
    "3659": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10858,
        10928
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3660": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10858,
        10928
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3663": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10858,
        10928
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3665": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10858,
        10928
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3666": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10858,
        10928
      ],
      "op": "ADD",
      "path": "2"
    },
    "3667": {
      "op": "MSTORE"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3672": {
      "op": "DUP3"
    },
    "3673": {
      "op": "ADD"
    },
    "3674": {
      "op": "MSTORE"
    },
    "3675": {
      "op": "PUSH32",
      "value": "0x446973747269627574696F6E20706172616D657465727320617265206E6F7420"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3710": {
      "op": "DUP3"
    },
    "3711": {
      "op": "ADD"
    },
    "3712": {
      "op": "MSTORE"
    },
    "3713": {
      "op": "PUSH3",
      "value": "0x1CD95D"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "3719": {
      "op": "SHL"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3722": {
      "op": "DUP3"
    },
    "3723": {
      "op": "ADD"
    },
    "3724": {
      "op": "MSTORE"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3727": {
      "op": "ADD"
    },
    "3728": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10858,
        10928
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "3731": {
      "op": "JUMP"
    },
    "3732": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10858,
        10928
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3733": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10959,
        10984
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 25,
      "value": "0x10"
    },
    "3735": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10959,
        10984
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3736": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10946,
        10984
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3737": {
      "branch": 113,
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10946,
        10984
      ],
      "op": "GT",
      "path": "2"
    },
    "3738": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10938,
        11045
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF0B"
    },
    "3741": {
      "branch": 113,
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10938,
        11045
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3742": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10938,
        11045
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3744": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10938,
        11045
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3745": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3751": {
      "op": "SHL"
    },
    "3752": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10938,
        11045
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3753": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10938,
        11045
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3756": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10938,
        11045
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3758": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10938,
        11045
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3759": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10938,
        11045
      ],
      "op": "ADD",
      "path": "2"
    },
    "3760": {
      "op": "MSTORE"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "3763": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3765": {
      "op": "DUP3"
    },
    "3766": {
      "op": "ADD"
    },
    "3767": {
      "op": "MSTORE"
    },
    "3768": {
      "op": "PUSH32",
      "value": "0x446973747269627574696F6E20726F756E64206D757374206265206C61746572"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3803": {
      "op": "DUP3"
    },
    "3804": {
      "op": "ADD"
    },
    "3805": {
      "op": "MSTORE"
    },
    "3806": {
      "op": "PUSH32",
      "value": "0x207468616E20726567697374726174696F6E20726F756E640000000000000000"
    },
    "3839": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3841": {
      "op": "DUP3"
    },
    "3842": {
      "op": "ADD"
    },
    "3843": {
      "op": "MSTORE"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3846": {
      "op": "ADD"
    },
    "3847": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10938,
        11045
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "3850": {
      "op": "JUMP"
    },
    "3851": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10938,
        11045
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3852": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11076,
        11171
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 26,
      "value": "0x40"
    },
    "3854": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11076,
        11171
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3855": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11076,
        11171
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3856": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11076,
        11171
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3857": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11076,
        11171
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3858": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11076,
        11171
      ],
      "op": "ADD",
      "path": "2"
    },
    "3859": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11076,
        11171
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3860": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11076,
        11171
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3861": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11076,
        11171
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3862": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11076,
        11171
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3863": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11076,
        11171
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3864": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11076,
        11171
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3866": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11076,
        11171
      ],
      "op": "ADD",
      "path": "2"
    },
    "3867": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11076,
        11171
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3868": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11076,
        11171
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3869": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11076,
        11171
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3870": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11056,
        11073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x12"
    },
    "3872": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11056,
        11171
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3873": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11056,
        11171
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3874": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11056,
        11171
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3875": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11056,
        11171
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x13"
    },
    "3877": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11056,
        11171
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3878": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11056,
        11171
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3879": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11056,
        11171
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3880": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11187,
        11224
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 27
    },
    "3881": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11187,
        11224
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x7D5E91551DC6F3038619D85DA877B41440D669756A40EEB78B1C9DF6C6A988D5"
    },
    "3914": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11187,
        11224
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3915": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11187,
        11224
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF57"
    },
    "3918": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11187,
        11224
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3919": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11208,
        11223
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3920": {
      "op": "DUP2"
    },
    "3921": {
      "op": "MSTORE"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3924": {
      "op": "ADD"
    },
    "3925": {
      "op": "SWAP1"
    },
    "3926": {
      "op": "JUMP"
    },
    "3927": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11187,
        11224
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3928": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11187,
        11224
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3930": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11187,
        11224
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3931": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11187,
        11224
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3932": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11187,
        11224
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3933": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11187,
        11224
      ],
      "op": "SUB",
      "path": "2"
    },
    "3934": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11187,
        11224
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3935": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        11187,
        11224
      ],
      "op": "LOG1",
      "path": "2"
    },
    "3936": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "POP",
      "path": "2"
    },
    "3937": {
      "fn": "DistributorNative.setDistributionRound",
      "offset": [
        10763,
        11231
      ],
      "op": "POP",
      "path": "2"
    },
    "3938": {
      "fn": "DistributorNative.setDistributionRound",
      "jump": "o",
      "offset": [
        10763,
        11231
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3939": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12637,
        13084
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3940": {
      "offset": [
        2660,
        2672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "3942": {
      "offset": [
        2660,
        2678
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3949": {
      "op": "SHL"
    },
    "3950": {
      "op": "SUB"
    },
    "3951": {
      "offset": [
        2660,
        2678
      ],
      "op": "AND",
      "path": "2"
    },
    "3952": {
      "offset": [
        2646,
        2656
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3953": {
      "offset": [
        2646,
        2678
      ],
      "op": "EQ",
      "path": "2"
    },
    "3954": {
      "offset": [
        2638,
        2721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF8D"
    },
    "3957": {
      "offset": [
        2638,
        2721
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3958": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        2638,
        2721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3960": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        2638,
        2721
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3961": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3967": {
      "op": "SHL"
    },
    "3968": {
      "offset": [
        2638,
        2721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3969": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        2638,
        2721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3970": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        2638,
        2721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3972": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        2638,
        2721
      ],
      "op": "ADD",
      "path": "2"
    },
    "3973": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        2638,
        2721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "3976": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        2638,
        2721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3977": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        2638,
        2721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2779"
    },
    "3980": {
      "fn": "DistributorNative.depositTokens",
      "jump": "i",
      "offset": [
        2638,
        2721
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3981": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        2638,
        2721
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3982": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12717,
        12729
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 28,
      "value": "0xC"
    },
    "3984": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12717,
        12739
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3987": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3989": {
      "op": "SHL"
    },
    "3990": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12717,
        12739
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3991": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12717,
        12739
      ],
      "op": "DIV",
      "path": "2"
    },
    "3992": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12717,
        12739
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3994": {
      "branch": 114,
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12717,
        12739
      ],
      "op": "AND",
      "path": "2"
    },
    "3995": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12709,
        12771
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFB6"
    },
    "3998": {
      "branch": 114,
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12709,
        12771
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3999": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12709,
        12771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4001": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12709,
        12771
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4002": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4008": {
      "op": "SHL"
    },
    "4009": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12709,
        12771
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4010": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12709,
        12771
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4011": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12709,
        12771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4013": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12709,
        12771
      ],
      "op": "ADD",
      "path": "2"
    },
    "4014": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12709,
        12771
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "4017": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12709,
        12771
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4018": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12709,
        12771
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27BF"
    },
    "4021": {
      "fn": "DistributorNative.depositTokens",
      "jump": "i",
      "offset": [
        12709,
        12771
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4022": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12709,
        12771
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4023": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12790,
        12802
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 29,
      "value": "0xC"
    },
    "4025": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12790,
        12818
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4028": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4030": {
      "op": "SHL"
    },
    "4031": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12790,
        12818
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4032": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12790,
        12818
      ],
      "op": "DIV",
      "path": "2"
    },
    "4033": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12790,
        12818
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4035": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12790,
        12818
      ],
      "op": "AND",
      "path": "2"
    },
    "4036": {
      "branch": 115,
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12789,
        12818
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4037": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12781,
        12856
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x101A"
    },
    "4040": {
      "branch": 115,
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12781,
        12856
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4041": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12781,
        12856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4043": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12781,
        12856
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4044": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4050": {
      "op": "SHL"
    },
    "4051": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12781,
        12856
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4052": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12781,
        12856
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4055": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12781,
        12856
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4057": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12781,
        12856
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4058": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12781,
        12856
      ],
      "op": "ADD",
      "path": "2"
    },
    "4059": {
      "op": "MSTORE"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4064": {
      "op": "DUP3"
    },
    "4065": {
      "op": "ADD"
    },
    "4066": {
      "op": "MSTORE"
    },
    "4067": {
      "op": "PUSH32",
      "value": "0x546F6B656E7320686173206265656E206465706F736974656420616C72656164"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4102": {
      "op": "DUP3"
    },
    "4103": {
      "op": "ADD"
    },
    "4104": {
      "op": "MSTORE"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4109": {
      "op": "SHL"
    },
    "4110": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4112": {
      "op": "DUP3"
    },
    "4113": {
      "op": "ADD"
    },
    "4114": {
      "op": "MSTORE"
    },
    "4115": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4117": {
      "op": "ADD"
    },
    "4118": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12781,
        12856
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "4121": {
      "op": "JUMP"
    },
    "4122": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12781,
        12856
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4123": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12900,
        12939
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 30,
      "value": "0xD"
    },
    "4125": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12900,
        12939
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4126": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12887,
        12896
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "4127": {
      "branch": 116,
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12887,
        12939
      ],
      "op": "EQ",
      "path": "2"
    },
    "4128": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12866,
        13031
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10A5"
    },
    "4131": {
      "branch": 116,
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12866,
        13031
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4132": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12866,
        13031
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4134": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12866,
        13031
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4135": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4141": {
      "op": "SHL"
    },
    "4142": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12866,
        13031
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4143": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12866,
        13031
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4146": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12866,
        13031
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4148": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12866,
        13031
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4149": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12866,
        13031
      ],
      "op": "ADD",
      "path": "2"
    },
    "4150": {
      "op": "MSTORE"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x4B"
    },
    "4153": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4155": {
      "op": "DUP3"
    },
    "4156": {
      "op": "ADD"
    },
    "4157": {
      "op": "MSTORE"
    },
    "4158": {
      "op": "PUSH32",
      "value": "0x546865206465706F73697420616D6F756E74206973206E6F7420657175616C20"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4193": {
      "op": "DUP3"
    },
    "4194": {
      "op": "ADD"
    },
    "4195": {
      "op": "MSTORE"
    },
    "4196": {
      "op": "PUSH32",
      "value": "0x746F207468652070726573657420616D6F756E74206F66206469737472696275"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4231": {
      "op": "DUP3"
    },
    "4232": {
      "op": "ADD"
    },
    "4233": {
      "op": "MSTORE"
    },
    "4234": {
      "op": "PUSH11",
      "value": "0x74696F6E20746F6B656E73"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4248": {
      "op": "SHL"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4251": {
      "op": "DUP3"
    },
    "4252": {
      "op": "ADD"
    },
    "4253": {
      "op": "MSTORE"
    },
    "4254": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "4256": {
      "op": "ADD"
    },
    "4257": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12866,
        13031
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "4260": {
      "op": "JUMP"
    },
    "4261": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        12866,
        13031
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4262": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        13042,
        13054
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 31,
      "value": "0xC"
    },
    "4264": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        13042,
        13077
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4265": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        13042,
        13077
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4270": {
      "op": "SHL"
    },
    "4271": {
      "op": "NOT"
    },
    "4272": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        13042,
        13077
      ],
      "op": "AND",
      "path": "2"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "4277": {
      "op": "SHL"
    },
    "4278": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        13042,
        13077
      ],
      "op": "OR",
      "path": "2"
    },
    "4279": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        13042,
        13077
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4280": {
      "fn": "DistributorNative.depositTokens",
      "offset": [
        13042,
        13077
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4281": {
      "fn": "DistributorNative.depositTokens",
      "jump": "o",
      "offset": [
        12637,
        13084
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4282": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12088,
        12205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4283": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12139,
        12155
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "4285": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12174,
        12198
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 32,
      "value": "0xA"
    },
    "4287": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4288": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4289": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4290": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4292": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "MUL",
      "path": "2"
    },
    "4293": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4295": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "ADD",
      "path": "2"
    },
    "4296": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4298": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4299": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4300": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4301": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "ADD",
      "path": "2"
    },
    "4302": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4304": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4305": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4306": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4307": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4308": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4309": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4310": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4311": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4312": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4314": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "ADD",
      "path": "2"
    },
    "4315": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4316": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4317": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4318": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4319": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4320": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x811"
    },
    "4323": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4324": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4326": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "MUL",
      "path": "2"
    },
    "4327": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4328": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "ADD",
      "path": "2"
    },
    "4329": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4330": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4331": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4333": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4334": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4336": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4338": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4339": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4340": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4341": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4342": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4343": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4344": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4346": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "ADD",
      "path": "2"
    },
    "4347": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4348": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4350": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "ADD",
      "path": "2"
    },
    "4351": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4352": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4353": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4354": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "GT",
      "path": "2"
    },
    "4355": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7FD"
    },
    "4358": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4359": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "POP",
      "path": "2"
    },
    "4360": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "POP",
      "path": "2"
    },
    "4361": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "POP",
      "path": "2"
    },
    "4362": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "POP",
      "path": "2"
    },
    "4363": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "POP",
      "path": "2"
    },
    "4364": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4365": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12167,
        12198
      ],
      "op": "POP",
      "path": "2"
    },
    "4366": {
      "fn": "DistributorNative.getVestingPortions",
      "offset": [
        12088,
        12205
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4367": {
      "fn": "DistributorNative.getVestingPortions",
      "jump": "o",
      "offset": [
        12088,
        12205
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4368": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10408,
        10757
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4369": {
      "offset": [
        2536,
        2541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "4371": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        2536,
        2541
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4378": {
      "op": "SHL"
    },
    "4379": {
      "op": "SUB"
    },
    "4380": {
      "offset": [
        2536,
        2541
      ],
      "op": "AND",
      "path": "2"
    },
    "4381": {
      "offset": [
        2522,
        2532
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4382": {
      "offset": [
        2522,
        2541
      ],
      "op": "EQ",
      "path": "2"
    },
    "4383": {
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x113A"
    },
    "4386": {
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4387": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4389": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4390": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4396": {
      "op": "SHL"
    },
    "4397": {
      "offset": [
        2514,
        2571
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4398": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4399": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4401": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "ADD",
      "path": "2"
    },
    "4402": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "4405": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4406": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2634"
    },
    "4409": {
      "fn": "DistributorNative.setRegistrationRound",
      "jump": "i",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4410": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4411": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10538,
        10553
      ],
      "op": "TIMESTAMP",
      "path": "2",
      "statement": 33
    },
    "4412": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10524,
        10534
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4413": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10524,
        10553
      ],
      "op": "LT",
      "path": "2"
    },
    "4414": {
      "branch": 117,
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10524,
        10553
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4415": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10524,
        10590
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4416": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10524,
        10590
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4417": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10524,
        10590
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1149"
    },
    "4420": {
      "branch": 117,
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10524,
        10590
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4421": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10524,
        10590
      ],
      "op": "POP",
      "path": "2"
    },
    "4422": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10580,
        10590
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4423": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10569,
        10577
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4424": {
      "branch": 118,
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10569,
        10590
      ],
      "op": "GT",
      "path": "2"
    },
    "4425": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10524,
        10590
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4426": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10503,
        10600
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1152"
    },
    "4429": {
      "branch": 118,
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10503,
        10600
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4430": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10503,
        10600
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4432": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10503,
        10600
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4433": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10503,
        10600
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4434": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10503,
        10600
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4435": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10611,
        10628
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 34,
      "value": "0xF"
    },
    "4437": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10611,
        10651
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4438": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10611,
        10651
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4439": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10611,
        10651
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4440": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10661,
        10686
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 35,
      "value": "0x10"
    },
    "4442": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10661,
        10697
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4443": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10661,
        10697
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4444": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10661,
        10697
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4445": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10713,
        10750
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 36,
      "value": "0x40"
    },
    "4447": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10713,
        10750
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4448": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10734,
        10749
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "4449": {
      "op": "DUP2"
    },
    "4450": {
      "op": "MSTORE"
    },
    "4451": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10713,
        10750
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x95A21281108B566135DDAA849F46AC5EDEE2287699CE9443AC1490705CD63D77"
    },
    "4484": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10713,
        10750
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4487": {
      "op": "ADD"
    },
    "4488": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        10713,
        10750
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF57"
    },
    "4491": {
      "op": "JUMP"
    },
    "4492": {
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4493": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "4495": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4496": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4497": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4498": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4499": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "LT",
      "path": "2"
    },
    "4500": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x119C"
    },
    "4503": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4504": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4506": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4507": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4508": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4509": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4511": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4512": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4513": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4514": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4516": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4517": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4518": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4519": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "ADD",
      "path": "2"
    },
    "4520": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4521": {
      "fn": "DistributorNative.setRegistrationRound",
      "offset": [
        1608,
        1659
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4522": {
      "op": "POP"
    },
    "4523": {
      "offset": [
        1608,
        1659
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4524": {
      "fn": "DistributorNative.setRegistrationRound",
      "jump": "o",
      "offset": [
        1608,
        1659
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4525": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5899,
        7211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4526": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5970,
        5971
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 37,
      "value": "0x0"
    },
    "4528": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5949,
        5967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "4530": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5949,
        5967
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4531": {
      "branch": 119,
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5949,
        5971
      ],
      "op": "GT",
      "path": "2"
    },
    "4532": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5941,
        6006
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11CF"
    },
    "4535": {
      "branch": 119,
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5941,
        6006
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4536": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5941,
        6006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4538": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5941,
        6006
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4539": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4545": {
      "op": "SHL"
    },
    "4546": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5941,
        6006
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4547": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5941,
        6006
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4548": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5941,
        6006
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4550": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5941,
        6006
      ],
      "op": "ADD",
      "path": "2"
    },
    "4551": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5941,
        6006
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "4554": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5941,
        6006
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4555": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5941,
        6006
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x266B"
    },
    "4558": {
      "fn": "DistributorNative.withdrawEvent",
      "jump": "i",
      "offset": [
        5941,
        6006
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4559": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5941,
        6006
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4560": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6043,
        6053
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 38
    },
    "4561": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6025,
        6054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4563": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6025,
        6054
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4564": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6025,
        6054
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4565": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6025,
        6054
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4566": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6025,
        6042
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4568": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6025,
        6054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4570": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6025,
        6054
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4571": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6025,
        6054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4573": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6025,
        6054
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4574": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6025,
        6054
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4575": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6025,
        6054
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4576": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6025,
        6054
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "4578": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6025,
        6054
      ],
      "op": "AND",
      "path": "2"
    },
    "4579": {
      "branch": 120,
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6024,
        6054
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4580": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6016,
        6085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x122F"
    },
    "4583": {
      "branch": 120,
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6016,
        6085
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4584": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6016,
        6085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4586": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6016,
        6085
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4593": {
      "op": "SHL"
    },
    "4594": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6016,
        6085
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4595": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6016,
        6085
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4598": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6016,
        6085
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4600": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6016,
        6085
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4601": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6016,
        6085
      ],
      "op": "ADD",
      "path": "2"
    },
    "4602": {
      "op": "MSTORE"
    },
    "4603": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "4605": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4607": {
      "op": "DUP3"
    },
    "4608": {
      "op": "ADD"
    },
    "4609": {
      "op": "MSTORE"
    },
    "4610": {
      "op": "PUSH32",
      "value": "0x4164647265737320616C7265616479207769647468647261776E000000000000"
    },
    "4643": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4645": {
      "op": "DUP3"
    },
    "4646": {
      "op": "ADD"
    },
    "4647": {
      "op": "MSTORE"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4650": {
      "op": "ADD"
    },
    "4651": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6016,
        6085
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "4654": {
      "op": "JUMP"
    },
    "4655": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6016,
        6085
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4656": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6183,
        6193
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4657": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6096,
        6119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4659": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6169,
        6194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4660": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6169,
        6194
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4661": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6169,
        6194
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4662": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6169,
        6194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4664": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6169,
        6194
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4665": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6169,
        6194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4666": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6169,
        6194
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4667": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6169,
        6194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4669": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6169,
        6194
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4670": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6169,
        6194
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4671": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6213,
        6244
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 39,
      "value": "0x1"
    },
    "4673": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6213,
        6244
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4674": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6213,
        6244
      ],
      "op": "ADD",
      "path": "2"
    },
    "4675": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6213,
        6244
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4676": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6205,
        6281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x125F"
    },
    "4679": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6205,
        6281
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4680": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6205,
        6281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4682": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6205,
        6281
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4683": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4687": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4689": {
      "op": "SHL"
    },
    "4690": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6205,
        6281
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4691": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6205,
        6281
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4692": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6205,
        6281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4694": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6205,
        6281
      ],
      "op": "ADD",
      "path": "2"
    },
    "4695": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6205,
        6281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "4698": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6205,
        6281
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4699": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6205,
        6281
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26A2"
    },
    "4702": {
      "fn": "DistributorNative.withdrawEvent",
      "jump": "i",
      "offset": [
        6205,
        6281
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4703": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6205,
        6281
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4704": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6335,
        6345
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4705": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6300,
        6317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4707": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6320,
        6346
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4708": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6320,
        6346
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4709": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6320,
        6346
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4710": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6320,
        6334
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4712": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6320,
        6346
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4714": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6320,
        6346
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4715": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6320,
        6346
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4717": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6320,
        6346
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4718": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6320,
        6346
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4719": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6320,
        6346
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4720": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6320,
        6346
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4721": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6356,
        6759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4722": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6377,
        6389
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4723": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6373,
        6374
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4724": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6373,
        6389
      ],
      "op": "LT",
      "path": "2"
    },
    "4725": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6356,
        6759
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4726": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6356,
        6759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12EC"
    },
    "4729": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6356,
        6759
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4730": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6410,
        6435
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4732": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6438,
        6575
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12B5"
    },
    "4735": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6558,
        6574
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4737": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6558,
        6574
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4738": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6438,
        6536
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB14"
    },
    "4741": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6532
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "4743": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6533,
        6534
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4744": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4745": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4746": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4747": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "LT",
      "path": "2"
    },
    "4748": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1297"
    },
    "4751": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4752": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1297"
    },
    "4755": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D9"
    },
    "4758": {
      "fn": "DistributorNative.withdrawEvent",
      "jump": "i",
      "offset": [
        6508,
        6535
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4759": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4760": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4761": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4763": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4764": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4766": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4768": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4769": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "ADD",
      "path": "2"
    },
    "4770": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6508,
        6535
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4771": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6438,
        6450
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4772": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6438,
        6486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4774": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6438,
        6486
      ],
      "op": "ADD",
      "path": "2"
    },
    "4775": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6438,
        6486
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4776": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6438,
        6507
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2170"
    },
    "4779": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6438,
        6507
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4780": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6438,
        6536
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4781": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6438,
        6536
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4782": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6438,
        6536
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "4787": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6438,
        6536
      ],
      "op": "AND",
      "path": "2"
    },
    "4788": {
      "fn": "DistributorNative.withdrawEvent",
      "jump": "i",
      "offset": [
        6438,
        6536
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4789": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6438,
        6575
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4790": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6624,
        6655
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 40,
      "value": "0x1"
    },
    "4792": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6624,
        6655
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4793": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6624,
        6655
      ],
      "op": "ADD",
      "path": "2"
    },
    "4794": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6624,
        6655
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4795": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6410,
        6575
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4796": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6410,
        6575
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4797": {
      "op": "POP"
    },
    "4798": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6624,
        6678
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12C7"
    },
    "4801": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6624,
        6678
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4802": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6410,
        6575
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4803": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6624,
        6659
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x219B"
    },
    "4806": {
      "fn": "DistributorNative.withdrawEvent",
      "jump": "i",
      "offset": [
        6624,
        6678
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4807": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6624,
        6678
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4808": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6590,
        6621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4810": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6590,
        6621
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4811": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6590,
        6621
      ],
      "op": "ADD",
      "path": "2"
    },
    "4812": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6590,
        6678
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4813": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6710,
        6748
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 41,
      "value": "0x12D6"
    },
    "4816": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6710,
        6725
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4817": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6730,
        6747
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4818": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6710,
        6729
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x218F"
    },
    "4821": {
      "fn": "DistributorNative.withdrawEvent",
      "jump": "i",
      "offset": [
        6710,
        6748
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4822": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6710,
        6748
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4823": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6692,
        6748
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "4824": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6692,
        6748
      ],
      "op": "POP",
      "path": "2"
    },
    "4825": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6396,
        6759
      ],
      "op": "POP",
      "path": "2"
    },
    "4826": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6391,
        6394
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 42
    },
    "4827": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6391,
        6394
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4828": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6391,
        6394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12E4"
    },
    "4831": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6391,
        6394
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4832": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6391,
        6394
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2705"
    },
    "4835": {
      "fn": "DistributorNative.withdrawEvent",
      "jump": "i",
      "offset": [
        6391,
        6394
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4836": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6391,
        6394
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4837": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6391,
        6394
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4838": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6391,
        6394
      ],
      "op": "POP",
      "path": "2"
    },
    "4839": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6391,
        6394
      ],
      "op": "POP",
      "path": "2"
    },
    "4840": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6356,
        6759
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1271"
    },
    "4843": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6356,
        6759
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4844": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6356,
        6759
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4845": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6356,
        6759
      ],
      "op": "POP",
      "path": "2"
    },
    "4846": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6795,
        6796
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 43,
      "value": "0x0"
    },
    "4848": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6777,
        6792
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4849": {
      "branch": 121,
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6777,
        6796
      ],
      "op": "GT",
      "path": "2"
    },
    "4850": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6769,
        6830
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x133D"
    },
    "4853": {
      "branch": 121,
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6769,
        6830
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4854": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6769,
        6830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4856": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6769,
        6830
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4857": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4861": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4863": {
      "op": "SHL"
    },
    "4864": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6769,
        6830
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4865": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6769,
        6830
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4866": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4868": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6769,
        6830
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4870": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6769,
        6830
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4871": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6769,
        6830
      ],
      "op": "ADD",
      "path": "2"
    },
    "4872": {
      "op": "MSTORE"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4877": {
      "op": "DUP3"
    },
    "4878": {
      "op": "ADD"
    },
    "4879": {
      "op": "MSTORE"
    },
    "4880": {
      "op": "PUSH32",
      "value": "0x5468657265206973206E6F7468696E6720746F20776964746864726177000000"
    },
    "4913": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4915": {
      "op": "DUP3"
    },
    "4916": {
      "op": "ADD"
    },
    "4917": {
      "op": "MSTORE"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4920": {
      "op": "ADD"
    },
    "4921": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6769,
        6830
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "4924": {
      "op": "JUMP"
    },
    "4925": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6769,
        6830
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4926": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6867,
        6888
      ],
      "op": "SELFBALANCE",
      "path": "2",
      "statement": 44
    },
    "4927": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6848,
        6863
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4928": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6848,
        6888
      ],
      "op": "GT",
      "path": "2"
    },
    "4929": {
      "branch": 122,
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6848,
        6888
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4930": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6840,
        6929
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x135D"
    },
    "4933": {
      "branch": 122,
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6840,
        6929
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4934": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6840,
        6929
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4936": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6840,
        6929
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4937": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4941": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4943": {
      "op": "SHL"
    },
    "4944": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6840,
        6929
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4945": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6840,
        6929
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4946": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6840,
        6929
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4948": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6840,
        6929
      ],
      "op": "ADD",
      "path": "2"
    },
    "4949": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6840,
        6929
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "4952": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6840,
        6929
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4953": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6840,
        6929
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x271E"
    },
    "4956": {
      "fn": "DistributorNative.withdrawEvent",
      "jump": "i",
      "offset": [
        6840,
        6929
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4957": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6840,
        6929
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4958": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6958,
        6968
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 45
    },
    "4959": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6940,
        6969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4961": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6940,
        6969
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4962": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6940,
        6969
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4963": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6940,
        6969
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4964": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6940,
        6957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4966": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6940,
        6969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4968": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6940,
        6969
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4969": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6940,
        6969
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4971": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6940,
        6969
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4972": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6940,
        6969
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4973": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6940,
        6976
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4974": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6940,
        6976
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4977": {
      "op": "NOT"
    },
    "4978": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6940,
        6976
      ],
      "op": "AND",
      "path": "2"
    },
    "4979": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6972,
        6976
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4981": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6940,
        6976
      ],
      "op": "OR",
      "path": "2"
    },
    "4982": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6940,
        6976
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4983": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6940,
        6976
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4984": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7024,
        7059
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 46,
      "value": "0xE"
    },
    "4986": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7024,
        7059
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4987": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7024,
        7080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1384"
    },
    "4990": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7024,
        7080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4991": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7064,
        7079
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4992": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7024,
        7063
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x218F"
    },
    "4995": {
      "fn": "DistributorNative.withdrawEvent",
      "jump": "i",
      "offset": [
        7024,
        7080
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4996": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7024,
        7080
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4997": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6986,
        7021
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "4999": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        6986,
        7080
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5000": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 47,
      "value": "0x40"
    },
    "5002": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5003": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7099,
        7109
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5004": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7099,
        7109
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5005": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5006": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5007": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8FC"
    },
    "5010": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "MUL",
      "path": "2"
    },
    "5011": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5012": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7120,
        7135
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5013": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7120,
        7135
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5014": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5016": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5017": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5018": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5019": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7120,
        7135
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5020": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7099,
        7109
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5021": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5022": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "CALL",
      "path": "2"
    },
    "5023": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5024": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "POP",
      "path": "2"
    },
    "5025": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "POP",
      "path": "2"
    },
    "5026": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "POP",
      "path": "2"
    },
    "5027": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "POP",
      "path": "2"
    },
    "5028": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5029": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5030": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5031": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13B4"
    },
    "5034": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5035": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5036": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5038": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5039": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5040": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5041": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5043": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5044": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7091,
        7136
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5045": {
      "op": "POP"
    },
    "5046": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7160,
        7204
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 48,
      "value": "0x40"
    },
    "5048": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7160,
        7204
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5049": {
      "op": "DUP4"
    },
    "5050": {
      "op": "DUP2"
    },
    "5051": {
      "op": "MSTORE"
    },
    "5052": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7176,
        7186
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5053": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7176,
        7186
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5054": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7160,
        7204
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B"
    },
    "5087": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7160,
        7204
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5090": {
      "op": "ADD"
    },
    "5091": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7160,
        7204
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5093": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7160,
        7204
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5094": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7160,
        7204
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5095": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7160,
        7204
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5096": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7160,
        7204
      ],
      "op": "SUB",
      "path": "2"
    },
    "5097": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7160,
        7204
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5098": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        7160,
        7204
      ],
      "op": "LOG2",
      "path": "2"
    },
    "5099": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5931,
        7211
      ],
      "op": "POP",
      "path": "2"
    },
    "5100": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5931,
        7211
      ],
      "op": "POP",
      "path": "2"
    },
    "5101": {
      "fn": "DistributorNative.withdrawEvent",
      "offset": [
        5931,
        7211
      ],
      "op": "POP",
      "path": "2"
    },
    "5102": {
      "fn": "DistributorNative.withdrawEvent",
      "jump": "o",
      "offset": [
        5899,
        7211
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5103": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13090,
        13640
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5104": {
      "offset": [
        2536,
        2541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "5106": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        2536,
        2541
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5113": {
      "op": "SHL"
    },
    "5114": {
      "op": "SUB"
    },
    "5115": {
      "offset": [
        2536,
        2541
      ],
      "op": "AND",
      "path": "2"
    },
    "5116": {
      "offset": [
        2522,
        2532
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5117": {
      "offset": [
        2522,
        2541
      ],
      "op": "EQ",
      "path": "2"
    },
    "5118": {
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1419"
    },
    "5121": {
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5122": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5124": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        2514,
        2571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5125": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5131": {
      "op": "SHL"
    },
    "5132": {
      "offset": [
        2514,
        2571
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5133": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        2514,
        2571
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5134": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5136": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        2514,
        2571
      ],
      "op": "ADD",
      "path": "2"
    },
    "5137": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "5140": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        2514,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5141": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2634"
    },
    "5144": {
      "fn": "DistributorNative.withdrawLeftover",
      "jump": "i",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5145": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5146": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13170,
        13171
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 49,
      "value": "0x0"
    },
    "5148": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13153,
        13167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "5150": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13153,
        13167
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5151": {
      "branch": 123,
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13153,
        13171
      ],
      "op": "GT",
      "path": "2"
    },
    "5152": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13145,
        13203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x146B"
    },
    "5155": {
      "branch": 123,
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13145,
        13203
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5156": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13145,
        13203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5158": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13145,
        13203
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5159": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5165": {
      "op": "SHL"
    },
    "5166": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13145,
        13203
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5167": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13145,
        13203
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5170": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13145,
        13203
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5172": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13145,
        13203
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5173": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13145,
        13203
      ],
      "op": "ADD",
      "path": "2"
    },
    "5174": {
      "op": "MSTORE"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5179": {
      "op": "DUP3"
    },
    "5180": {
      "op": "ADD"
    },
    "5181": {
      "op": "MSTORE"
    },
    "5182": {
      "op": "PUSH32",
      "value": "0x56657374696E6720656E642064617465206973206E6F74207365740000000000"
    },
    "5215": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5217": {
      "op": "DUP3"
    },
    "5218": {
      "op": "ADD"
    },
    "5219": {
      "op": "MSTORE"
    },
    "5220": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5222": {
      "op": "ADD"
    },
    "5223": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13145,
        13203
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "5226": {
      "op": "JUMP"
    },
    "5227": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13145,
        13203
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5228": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13240,
        13254
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 50,
      "value": "0x6"
    },
    "5230": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13240,
        13254
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5231": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13221,
        13236
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5232": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13221,
        13254
      ],
      "op": "LT",
      "path": "2"
    },
    "5233": {
      "branch": 124,
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13221,
        13254
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5234": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13213,
        13293
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14C8"
    },
    "5237": {
      "branch": 124,
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13213,
        13293
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5238": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13213,
        13293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5240": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13213,
        13293
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5241": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5247": {
      "op": "SHL"
    },
    "5248": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13213,
        13293
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5249": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13213,
        13293
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5252": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13213,
        13293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5254": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13213,
        13293
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5255": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13213,
        13293
      ],
      "op": "ADD",
      "path": "2"
    },
    "5256": {
      "op": "MSTORE"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5261": {
      "op": "DUP3"
    },
    "5262": {
      "op": "ADD"
    },
    "5263": {
      "op": "MSTORE"
    },
    "5264": {
      "op": "PUSH32",
      "value": "0x56657374696E6720706572696F64206973206E6F742066696E69736865642079"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5299": {
      "op": "DUP3"
    },
    "5300": {
      "op": "ADD"
    },
    "5301": {
      "op": "MSTORE"
    },
    "5302": {
      "op": "PUSH2",
      "value": "0x195D"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "5307": {
      "op": "SHL"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5310": {
      "op": "DUP3"
    },
    "5311": {
      "op": "ADD"
    },
    "5312": {
      "op": "MSTORE"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5315": {
      "op": "ADD"
    },
    "5316": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13213,
        13293
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "5319": {
      "op": "JUMP"
    },
    "5320": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13213,
        13293
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5321": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13312,
        13329
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 51,
      "value": "0x14"
    },
    "5323": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13312,
        13329
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5324": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13312,
        13329
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5326": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13312,
        13329
      ],
      "op": "AND",
      "path": "2"
    },
    "5327": {
      "branch": 125,
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13311,
        13329
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5328": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13303,
        13360
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x151B"
    },
    "5331": {
      "branch": 125,
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13303,
        13360
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5332": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13303,
        13360
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5334": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13303,
        13360
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5335": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5341": {
      "op": "SHL"
    },
    "5342": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13303,
        13360
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5343": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13303,
        13360
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5346": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13303,
        13360
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5348": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13303,
        13360
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5349": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13303,
        13360
      ],
      "op": "ADD",
      "path": "2"
    },
    "5350": {
      "op": "MSTORE"
    },
    "5351": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5355": {
      "op": "DUP3"
    },
    "5356": {
      "op": "ADD"
    },
    "5357": {
      "op": "MSTORE"
    },
    "5358": {
      "op": "PUSH32",
      "value": "0x4C6566746F76657220616C72656164792077697468647261776E000000000000"
    },
    "5391": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5393": {
      "op": "DUP3"
    },
    "5394": {
      "op": "ADD"
    },
    "5395": {
      "op": "MSTORE"
    },
    "5396": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5398": {
      "op": "ADD"
    },
    "5399": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13303,
        13360
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "5402": {
      "op": "JUMP"
    },
    "5403": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13303,
        13360
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5404": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13434,
        13469
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "5406": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13434,
        13469
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5407": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13390,
        13429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "5409": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13390,
        13429
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5410": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13371,
        13387
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5412": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13371,
        13387
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5413": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13390,
        13470
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x152E"
    },
    "5416": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13390,
        13470
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5417": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13390,
        13429
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5418": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13390,
        13433
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x219B"
    },
    "5421": {
      "fn": "DistributorNative.withdrawLeftover",
      "jump": "i",
      "offset": [
        13390,
        13470
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5422": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13390,
        13470
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5423": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13371,
        13470
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5424": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13371,
        13470
      ],
      "op": "POP",
      "path": "2"
    },
    "5425": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13499,
        13500
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 52,
      "value": "0x0"
    },
    "5427": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13488,
        13496
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5428": {
      "branch": 126,
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13488,
        13500
      ],
      "op": "GT",
      "path": "2"
    },
    "5429": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13480,
        13533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1550"
    },
    "5432": {
      "branch": 126,
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13480,
        13533
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5433": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13480,
        13533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5435": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13480,
        13533
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5436": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5442": {
      "op": "SHL"
    },
    "5443": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13480,
        13533
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5444": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13480,
        13533
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5445": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13480,
        13533
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5447": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13480,
        13533
      ],
      "op": "ADD",
      "path": "2"
    },
    "5448": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13480,
        13533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "5451": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13480,
        13533
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5452": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13480,
        13533
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26A2"
    },
    "5455": {
      "fn": "DistributorNative.withdrawLeftover",
      "jump": "i",
      "offset": [
        13480,
        13533
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5456": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13480,
        13533
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5457": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13552,
        13569
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 53,
      "value": "0x14"
    },
    "5459": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13552,
        13576
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5460": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13552,
        13576
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5461": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5463": {
      "op": "NOT"
    },
    "5464": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13552,
        13576
      ],
      "op": "AND",
      "path": "2"
    },
    "5465": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13572,
        13576
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5467": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13552,
        13576
      ],
      "op": "OR",
      "path": "2"
    },
    "5468": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13552,
        13576
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5469": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13552,
        13576
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5470": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 54,
      "value": "0x40"
    },
    "5472": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5473": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13603,
        13613
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5474": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13603,
        13613
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5475": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5476": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5477": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8FC"
    },
    "5480": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "MUL",
      "path": "2"
    },
    "5481": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5482": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13624,
        13632
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5483": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13624,
        13632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5484": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13552,
        13569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5486": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5487": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13552,
        13569
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5488": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5489": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13624,
        13632
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5490": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13603,
        13613
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5491": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5492": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "CALL",
      "path": "2"
    },
    "5493": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5494": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "POP",
      "path": "2"
    },
    "5495": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "POP",
      "path": "2"
    },
    "5496": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "POP",
      "path": "2"
    },
    "5497": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "POP",
      "path": "2"
    },
    "5498": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5499": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5500": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5501": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x158A"
    },
    "5504": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5505": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5506": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5508": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5509": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5510": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5511": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5513": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5514": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5515": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13595,
        13633
      ],
      "op": "POP",
      "path": "2"
    },
    "5516": {
      "fn": "DistributorNative.withdrawLeftover",
      "offset": [
        13135,
        13640
      ],
      "op": "POP",
      "path": "2"
    },
    "5517": {
      "fn": "DistributorNative.withdrawLeftover",
      "jump": "o",
      "offset": [
        13090,
        13640
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5518": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9696,
        9949
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5519": {
      "offset": [
        2536,
        2541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "5521": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        2536,
        2541
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5522": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5524": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5526": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5528": {
      "op": "SHL"
    },
    "5529": {
      "op": "SUB"
    },
    "5530": {
      "offset": [
        2536,
        2541
      ],
      "op": "AND",
      "path": "2"
    },
    "5531": {
      "offset": [
        2522,
        2532
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5532": {
      "offset": [
        2522,
        2541
      ],
      "op": "EQ",
      "path": "2"
    },
    "5533": {
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15B8"
    },
    "5536": {
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5537": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5539": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5540": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5544": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5546": {
      "op": "SHL"
    },
    "5547": {
      "offset": [
        2514,
        2571
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5548": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5549": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5551": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "ADD",
      "path": "2"
    },
    "5552": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "5555": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5556": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2634"
    },
    "5559": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "jump": "i",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5560": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5567": {
      "op": "SHL"
    },
    "5568": {
      "op": "SUB"
    },
    "5569": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9827
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 55
    },
    "5570": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9827
      ],
      "op": "AND",
      "path": "2"
    },
    "5571": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9817
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5573": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9827
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5574": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9827
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5575": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9827
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5576": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5578": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9827
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5579": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9827
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5580": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9827
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5581": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5583": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9827
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5584": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9827
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5585": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9840
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5587": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9840
      ],
      "op": "ADD",
      "path": "2"
    },
    "5588": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9840
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5589": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9840
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5591": {
      "branch": 127,
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9804,
        9840
      ],
      "op": "AND",
      "path": "2"
    },
    "5592": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9796,
        9879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F3"
    },
    "5595": {
      "branch": 127,
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9796,
        9879
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5596": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9796,
        9879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5598": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9796,
        9879
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5599": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5603": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5605": {
      "op": "SHL"
    },
    "5606": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9796,
        9879
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5607": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9796,
        9879
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5608": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9796,
        9879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5610": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9796,
        9879
      ],
      "op": "ADD",
      "path": "2"
    },
    "5611": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9796,
        9879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "5614": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9796,
        9879
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5615": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9796,
        9879
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27F6"
    },
    "5618": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "jump": "i",
      "offset": [
        9796,
        9879
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5619": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9796,
        9879
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5626": {
      "op": "SHL"
    },
    "5627": {
      "op": "SUB"
    },
    "5628": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9913
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 56
    },
    "5629": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9913
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5630": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9913
      ],
      "op": "AND",
      "path": "2"
    },
    "5631": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9903
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5633": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9913
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5634": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9913
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5635": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9913
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5636": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9913
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5638": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9913
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5639": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9913
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5640": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9913
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5641": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9913
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5643": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9913
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5644": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9913
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5645": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9932
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5647": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9932
      ],
      "op": "ADD",
      "path": "2"
    },
    "5648": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "offset": [
        9890,
        9942
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5649": {
      "fn": "DistributorNative.setAddressDistributionAmount",
      "jump": "o",
      "offset": [
        9696,
        9949
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5650": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5651": {
      "offset": [
        2834,
        2851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "5653": {
      "offset": [
        2834,
        2861
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5654": {
      "offset": [
        2815,
        2830
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5655": {
      "offset": [
        2815,
        2861
      ],
      "op": "LT",
      "path": "2"
    },
    "5656": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2815,
        2861
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5657": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2815,
        2861
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5658": {
      "branch": 128,
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2815,
        2861
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5659": {
      "offset": [
        2815,
        2922
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1626"
    },
    "5662": {
      "branch": 128,
      "offset": [
        2815,
        2922
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5663": {
      "op": "POP"
    },
    "5664": {
      "offset": [
        2897,
        2922
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "5666": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2897,
        2922
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5667": {
      "offset": [
        2878,
        2893
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5668": {
      "offset": [
        2878,
        2922
      ],
      "op": "GT",
      "path": "2"
    },
    "5669": {
      "branch": 129,
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2878,
        2922
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5670": {
      "offset": [
        2815,
        2922
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5671": {
      "offset": [
        2815,
        2967
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5672": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2815,
        2967
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5673": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2815,
        2967
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1635"
    },
    "5676": {
      "branch": 129,
      "offset": [
        2815,
        2967
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5677": {
      "op": "POP"
    },
    "5678": {
      "offset": [
        2940,
        2967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x11"
    },
    "5680": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2940,
        2967
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5681": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2940,
        2967
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5683": {
      "branch": 130,
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2940,
        2967
      ],
      "op": "AND",
      "path": "2"
    },
    "5684": {
      "offset": [
        2939,
        2967
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5685": {
      "offset": [
        2815,
        2967
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5686": {
      "offset": [
        2794,
        3029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1651"
    },
    "5689": {
      "branch": 130,
      "offset": [
        2794,
        3029
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5690": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2794,
        3029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5692": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2794,
        3029
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5693": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5697": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5699": {
      "op": "SHL"
    },
    "5700": {
      "offset": [
        2794,
        3029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5701": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2794,
        3029
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5702": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2794,
        3029
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5704": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2794,
        3029
      ],
      "op": "ADD",
      "path": "2"
    },
    "5705": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2794,
        3029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "5708": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2794,
        3029
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5709": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2794,
        3029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25E7"
    },
    "5712": {
      "fn": "DistributorNative.registerMultipleUsers",
      "jump": "i",
      "offset": [
        2794,
        3029
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5713": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2794,
        3029
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5714": {
      "offset": [
        2536,
        2541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "5716": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2536,
        2541
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5723": {
      "op": "SHL"
    },
    "5724": {
      "op": "SUB"
    },
    "5725": {
      "offset": [
        2536,
        2541
      ],
      "op": "AND",
      "path": "2"
    },
    "5726": {
      "offset": [
        2522,
        2532
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5727": {
      "offset": [
        2522,
        2541
      ],
      "op": "EQ",
      "path": "2"
    },
    "5728": {
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x167B"
    },
    "5731": {
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5732": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5734": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2514,
        2571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5735": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5741": {
      "op": "SHL"
    },
    "5742": {
      "offset": [
        2514,
        2571
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5743": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2514,
        2571
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5744": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5746": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2514,
        2571
      ],
      "op": "ADD",
      "path": "2"
    },
    "5747": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "5750": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2514,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5751": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2634"
    },
    "5754": {
      "fn": "DistributorNative.registerMultipleUsers",
      "jump": "i",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5755": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5756": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3692,
        3693
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 57,
      "value": "0x0"
    },
    "5758": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3672,
        3682
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5759": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3672,
        3689
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5760": {
      "branch": 131,
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3672,
        3693
      ],
      "op": "GT",
      "path": "2"
    },
    "5761": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3664,
        3751
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16EA"
    },
    "5764": {
      "branch": 131,
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3664,
        3751
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5765": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3664,
        3751
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5767": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3664,
        3751
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5768": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5774": {
      "op": "SHL"
    },
    "5775": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3664,
        3751
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5776": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3664,
        3751
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5779": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3664,
        3751
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5781": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3664,
        3751
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5782": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3664,
        3751
      ],
      "op": "ADD",
      "path": "2"
    },
    "5783": {
      "op": "MSTORE"
    },
    "5784": {
      "op": "PUSH1",
      "value": "0x35"
    },
    "5786": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5788": {
      "op": "DUP3"
    },
    "5789": {
      "op": "ADD"
    },
    "5790": {
      "op": "MSTORE"
    },
    "5791": {
      "op": "PUSH32",
      "value": "0x54686520616464726573736573206172726179206D75737420636F6E7461696E"
    },
    "5824": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5826": {
      "op": "DUP3"
    },
    "5827": {
      "op": "ADD"
    },
    "5828": {
      "op": "MSTORE"
    },
    "5829": {
      "op": "PUSH21",
      "value": "0x81BDB9948195B195B595B9D08185D081B19585CDD"
    },
    "5851": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "5853": {
      "op": "SHL"
    },
    "5854": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5856": {
      "op": "DUP3"
    },
    "5857": {
      "op": "ADD"
    },
    "5858": {
      "op": "MSTORE"
    },
    "5859": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5861": {
      "op": "ADD"
    },
    "5862": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3664,
        3751
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "5865": {
      "op": "JUMP"
    },
    "5866": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3664,
        3751
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5867": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3767,
        3773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5869": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3762,
        3940
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5870": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3783,
        3793
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5871": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3783,
        3800
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5872": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3779,
        3780
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5873": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3779,
        3800
      ],
      "op": "LT",
      "path": "2"
    },
    "5874": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3762,
        3940
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5875": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3762,
        3940
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x176D"
    },
    "5878": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3762,
        3940
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5879": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5881": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3854
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5882": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3850
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5883": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3851,
        3852
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5884": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5885": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5886": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5887": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "LT",
      "path": "2"
    },
    "5888": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x170B"
    },
    "5891": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5892": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x170B"
    },
    "5895": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D9"
    },
    "5898": {
      "fn": "DistributorNative.registerMultipleUsers",
      "jump": "i",
      "offset": [
        3840,
        3853
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5899": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5900": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5902": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5903": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5904": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "MUL",
      "path": "2"
    },
    "5905": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5906": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5907": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5908": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "ADD",
      "path": "2"
    },
    "5909": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5910": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "ADD",
      "path": "2"
    },
    "5911": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3840,
        3853
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5918": {
      "op": "SHL"
    },
    "5919": {
      "op": "SUB"
    },
    "5920": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3854
      ],
      "op": "AND",
      "path": "2"
    },
    "5921": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3854
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5922": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3854
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5923": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3854
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5924": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3854
      ],
      "op": "ADD",
      "path": "2"
    },
    "5925": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3854
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5926": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3854
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5927": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3854
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5928": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3854
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5929": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5931": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3854
      ],
      "op": "ADD",
      "path": "2"
    },
    "5932": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5934": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3854
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5935": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5937": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3867
      ],
      "op": "ADD",
      "path": "2"
    },
    "5938": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3867
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5939": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "5941": {
      "branch": 132,
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3826,
        3867
      ],
      "op": "AND",
      "path": "2"
    },
    "5942": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3821,
        3930
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x175B"
    },
    "5945": {
      "branch": 132,
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3821,
        3930
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5946": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3887,
        3915
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 58,
      "value": "0x175B"
    },
    "5949": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3901,
        3911
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5950": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3912,
        3913
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5951": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3901,
        3914
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5952": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3901,
        3914
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5953": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3901,
        3914
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5954": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3901,
        3914
      ],
      "op": "LT",
      "path": "2"
    },
    "5955": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3901,
        3914
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x174E"
    },
    "5958": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3901,
        3914
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5959": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3901,
        3914
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x174E"
    },
    "5962": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3901,
        3914
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D9"
    },
    "5965": {
      "fn": "DistributorNative.registerMultipleUsers",
      "jump": "i",
      "offset": [
        3901,
        3914
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5966": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3901,
        3914
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5967": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3901,
        3914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5969": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3901,
        3914
      ],
      "op": "MUL",
      "path": "2"
    },
    "5970": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3901,
        3914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5972": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3901,
        3914
      ],
      "op": "ADD",
      "path": "2"
    },
    "5973": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3901,
        3914
      ],
      "op": "ADD",
      "path": "2"
    },
    "5974": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3901,
        3914
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5975": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3887,
        3900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2040"
    },
    "5978": {
      "fn": "DistributorNative.registerMultipleUsers",
      "jump": "i",
      "offset": [
        3887,
        3915
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5979": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3887,
        3915
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5980": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3802,
        3805
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 59
    },
    "5981": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3802,
        3805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1765"
    },
    "5984": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3802,
        3805
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5985": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3802,
        3805
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2705"
    },
    "5988": {
      "fn": "DistributorNative.registerMultipleUsers",
      "jump": "i",
      "offset": [
        3802,
        3805
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5989": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3802,
        3805
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5990": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3802,
        3805
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5991": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3802,
        3805
      ],
      "op": "POP",
      "path": "2"
    },
    "5992": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3802,
        3805
      ],
      "op": "POP",
      "path": "2"
    },
    "5993": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3762,
        3940
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16ED"
    },
    "5996": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3762,
        3940
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5997": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3762,
        3940
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5998": {
      "op": "POP"
    },
    "5999": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3955,
        4001
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 60,
      "value": "0x40"
    },
    "6001": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3955,
        4001
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6002": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3985,
        4000
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6003": {
      "op": "DUP2"
    },
    "6004": {
      "op": "MSTORE"
    },
    "6005": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3955,
        4001
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x3ED3FF891AF065B7AECB80D2D3E0543AFD07E2B38E36D9E98700FEEBF26482B3"
    },
    "6038": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3955,
        4001
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6041": {
      "op": "ADD"
    },
    "6042": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3955,
        4001
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6043": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3955,
        4001
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6045": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3955,
        4001
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6046": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3955,
        4001
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6047": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3955,
        4001
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6048": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3955,
        4001
      ],
      "op": "SUB",
      "path": "2"
    },
    "6049": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3955,
        4001
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6050": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3955,
        4001
      ],
      "op": "LOG1",
      "path": "2"
    },
    "6051": {
      "fn": "DistributorNative.registerMultipleUsers",
      "offset": [
        3549,
        4008
      ],
      "op": "POP",
      "path": "2"
    },
    "6052": {
      "fn": "DistributorNative.registerMultipleUsers",
      "jump": "o",
      "offset": [
        3549,
        4008
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6053": {
      "fn": "DistributorNative.participate",
      "offset": [
        4014,
        4313
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6054": {
      "offset": [
        3142,
        3159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x12"
    },
    "6056": {
      "offset": [
        3142,
        3169
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6057": {
      "offset": [
        3123,
        3138
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6058": {
      "offset": [
        3123,
        3169
      ],
      "op": "LT",
      "path": "2"
    },
    "6059": {
      "fn": "DistributorNative.participate",
      "offset": [
        3123,
        3169
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6060": {
      "fn": "DistributorNative.participate",
      "offset": [
        3123,
        3169
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6061": {
      "branch": 133,
      "fn": "DistributorNative.participate",
      "offset": [
        3123,
        3169
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6062": {
      "offset": [
        3123,
        3229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17B9"
    },
    "6065": {
      "branch": 133,
      "offset": [
        3123,
        3229
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6066": {
      "op": "POP"
    },
    "6067": {
      "offset": [
        3204,
        3229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x13"
    },
    "6069": {
      "fn": "DistributorNative.participate",
      "offset": [
        3204,
        3229
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6070": {
      "offset": [
        3185,
        3200
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6071": {
      "offset": [
        3185,
        3229
      ],
      "op": "GT",
      "path": "2"
    },
    "6072": {
      "branch": 134,
      "fn": "DistributorNative.participate",
      "offset": [
        3185,
        3229
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6073": {
      "offset": [
        3123,
        3229
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6074": {
      "offset": [
        3102,
        3291
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x181B"
    },
    "6077": {
      "branch": 134,
      "offset": [
        3102,
        3291
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6078": {
      "fn": "DistributorNative.participate",
      "offset": [
        3102,
        3291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6080": {
      "fn": "DistributorNative.participate",
      "offset": [
        3102,
        3291
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6081": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6085": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6087": {
      "op": "SHL"
    },
    "6088": {
      "offset": [
        3102,
        3291
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6089": {
      "fn": "DistributorNative.participate",
      "offset": [
        3102,
        3291
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6092": {
      "offset": [
        3102,
        3291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6094": {
      "fn": "DistributorNative.participate",
      "offset": [
        3102,
        3291
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6095": {
      "fn": "DistributorNative.participate",
      "offset": [
        3102,
        3291
      ],
      "op": "ADD",
      "path": "2"
    },
    "6096": {
      "op": "MSTORE"
    },
    "6097": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6101": {
      "op": "DUP3"
    },
    "6102": {
      "op": "ADD"
    },
    "6103": {
      "op": "MSTORE"
    },
    "6104": {
      "op": "PUSH32",
      "value": "0x446973747269627574696F6E20726F756E64206973206F766572206F72206E6F"
    },
    "6137": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6139": {
      "op": "DUP3"
    },
    "6140": {
      "op": "ADD"
    },
    "6141": {
      "op": "MSTORE"
    },
    "6142": {
      "op": "PUSH13",
      "value": "0x1D081CDD185C9D1959081E595D"
    },
    "6156": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "6158": {
      "op": "SHL"
    },
    "6159": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6161": {
      "op": "DUP3"
    },
    "6162": {
      "op": "ADD"
    },
    "6163": {
      "op": "MSTORE"
    },
    "6164": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6166": {
      "op": "ADD"
    },
    "6167": {
      "offset": [
        3102,
        3291
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "6170": {
      "op": "JUMP"
    },
    "6171": {
      "offset": [
        3102,
        3291
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6172": {
      "fn": "DistributorNative.participate",
      "offset": [
        4106,
        4116
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 61
    },
    "6173": {
      "fn": "DistributorNative.participate",
      "offset": [
        4091,
        4117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6175": {
      "fn": "DistributorNative.participate",
      "offset": [
        4091,
        4117
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6176": {
      "fn": "DistributorNative.participate",
      "offset": [
        4091,
        4117
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6177": {
      "fn": "DistributorNative.participate",
      "offset": [
        4091,
        4117
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6178": {
      "fn": "DistributorNative.participate",
      "offset": [
        4091,
        4105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6180": {
      "fn": "DistributorNative.participate",
      "offset": [
        4091,
        4117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6182": {
      "fn": "DistributorNative.participate",
      "offset": [
        4091,
        4117
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6183": {
      "fn": "DistributorNative.participate",
      "offset": [
        4091,
        4117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6185": {
      "fn": "DistributorNative.participate",
      "offset": [
        4091,
        4117
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6186": {
      "fn": "DistributorNative.participate",
      "offset": [
        4091,
        4117
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6187": {
      "fn": "DistributorNative.participate",
      "offset": [
        4091,
        4132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6189": {
      "fn": "DistributorNative.participate",
      "offset": [
        4091,
        4132
      ],
      "op": "ADD",
      "path": "2"
    },
    "6190": {
      "fn": "DistributorNative.participate",
      "offset": [
        4091,
        4132
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6191": {
      "fn": "DistributorNative.participate",
      "offset": [
        4091,
        4132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6193": {
      "fn": "DistributorNative.participate",
      "offset": [
        4091,
        4132
      ],
      "op": "AND",
      "path": "2"
    },
    "6194": {
      "branch": 135,
      "fn": "DistributorNative.participate",
      "offset": [
        4090,
        4132
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6195": {
      "fn": "DistributorNative.participate",
      "offset": [
        4082,
        4165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x187E"
    },
    "6198": {
      "branch": 135,
      "fn": "DistributorNative.participate",
      "offset": [
        4082,
        4165
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6199": {
      "fn": "DistributorNative.participate",
      "offset": [
        4082,
        4165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6201": {
      "fn": "DistributorNative.participate",
      "offset": [
        4082,
        4165
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6202": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6206": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6208": {
      "op": "SHL"
    },
    "6209": {
      "fn": "DistributorNative.participate",
      "offset": [
        4082,
        4165
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6210": {
      "fn": "DistributorNative.participate",
      "offset": [
        4082,
        4165
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6213": {
      "fn": "DistributorNative.participate",
      "offset": [
        4082,
        4165
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6215": {
      "fn": "DistributorNative.participate",
      "offset": [
        4082,
        4165
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6216": {
      "fn": "DistributorNative.participate",
      "offset": [
        4082,
        4165
      ],
      "op": "ADD",
      "path": "2"
    },
    "6217": {
      "op": "MSTORE"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "6220": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6222": {
      "op": "DUP3"
    },
    "6223": {
      "op": "ADD"
    },
    "6224": {
      "op": "MSTORE"
    },
    "6225": {
      "op": "PUSH32",
      "value": "0x4164647265737320616C72656164792070617274696369706174656400000000"
    },
    "6258": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6260": {
      "op": "DUP3"
    },
    "6261": {
      "op": "ADD"
    },
    "6262": {
      "op": "MSTORE"
    },
    "6263": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6265": {
      "op": "ADD"
    },
    "6266": {
      "fn": "DistributorNative.participate",
      "offset": [
        4082,
        4165
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "6269": {
      "op": "JUMP"
    },
    "6270": {
      "fn": "DistributorNative.participate",
      "offset": [
        4082,
        4165
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6271": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 62,
      "value": "0x40"
    },
    "6273": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6274": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6275": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6276": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6277": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "ADD",
      "path": "2"
    },
    "6278": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6279": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6280": {
      "fn": "DistributorNative.participate",
      "offset": [
        4227,
        4242
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6281": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6282": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6283": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6284": {
      "fn": "DistributorNative.participate",
      "offset": [
        4244,
        4248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6286": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6288": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6289": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6290": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "ADD",
      "path": "2"
    },
    "6291": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6292": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6293": {
      "fn": "DistributorNative.participate",
      "offset": [
        4213,
        4249
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6294": {
      "fn": "DistributorNative.participate",
      "offset": [
        4199,
        4209
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6297": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4210
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6298": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4210
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6299": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4210
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6300": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4198
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6302": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4210
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6303": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4210
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6304": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4210
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6305": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4210
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6306": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4210
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6307": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "6308": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6309": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6310": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6311": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6312": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6313": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6314": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6315": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6316": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "ADD",
      "path": "2"
    },
    "6317": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6318": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6319": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6321": {
      "op": "NOT"
    },
    "6322": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "AND",
      "path": "2"
    },
    "6323": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6324": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6325": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6326": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6327": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6328": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6329": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "OR",
      "path": "2"
    },
    "6330": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6331": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6332": {
      "fn": "DistributorNative.participate",
      "offset": [
        4184,
        4249
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6333": {
      "fn": "DistributorNative.participate",
      "offset": [
        4265,
        4306
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 63
    },
    "6334": {
      "fn": "DistributorNative.participate",
      "offset": [
        4265,
        4306
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6335": {
      "op": "SWAP1"
    },
    "6336": {
      "op": "DUP2"
    },
    "6337": {
      "op": "MSTORE"
    },
    "6338": {
      "fn": "DistributorNative.participate",
      "offset": [
        4265,
        4306
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xB198F199C43CC078AD46E5A5FABE03EBA401F7417816C86AF0BD2E7345C99506"
    },
    "6371": {
      "fn": "DistributorNative.participate",
      "offset": [
        4265,
        4306
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6372": {
      "op": "ADD"
    },
    "6373": {
      "fn": "DistributorNative.participate",
      "offset": [
        4265,
        4306
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6375": {
      "fn": "DistributorNative.participate",
      "offset": [
        4265,
        4306
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6376": {
      "fn": "DistributorNative.participate",
      "offset": [
        4265,
        4306
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6377": {
      "fn": "DistributorNative.participate",
      "offset": [
        4265,
        4306
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6378": {
      "fn": "DistributorNative.participate",
      "offset": [
        4265,
        4306
      ],
      "op": "SUB",
      "path": "2"
    },
    "6379": {
      "fn": "DistributorNative.participate",
      "offset": [
        4265,
        4306
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6380": {
      "fn": "DistributorNative.participate",
      "offset": [
        4265,
        4306
      ],
      "op": "LOG2",
      "path": "2"
    },
    "6381": {
      "fn": "DistributorNative.participate",
      "jump": "o",
      "offset": [
        4014,
        4313
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6382": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6383": {
      "offset": [
        2536,
        2541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "6385": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        2536,
        2541
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6388": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6392": {
      "op": "SHL"
    },
    "6393": {
      "op": "SUB"
    },
    "6394": {
      "offset": [
        2536,
        2541
      ],
      "op": "AND",
      "path": "2"
    },
    "6395": {
      "offset": [
        2522,
        2532
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6396": {
      "offset": [
        2522,
        2541
      ],
      "op": "EQ",
      "path": "2"
    },
    "6397": {
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1918"
    },
    "6400": {
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6401": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6403": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6404": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6408": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6410": {
      "op": "SHL"
    },
    "6411": {
      "offset": [
        2514,
        2571
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6412": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6413": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6415": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "ADD",
      "path": "2"
    },
    "6416": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "6419": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6420": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2634"
    },
    "6423": {
      "fn": "DistributorNative.setEventVestingParams",
      "jump": "i",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6424": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6425": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7371,
        7380
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 64
    },
    "6426": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7371,
        7387
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6427": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7355,
        7367
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6428": {
      "branch": 136,
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7355,
        7387
      ],
      "op": "EQ",
      "path": "2"
    },
    "6429": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7347,
        7450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x198E"
    },
    "6432": {
      "branch": 136,
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7347,
        7450
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6433": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7347,
        7450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6435": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7347,
        7450
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6436": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6440": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6442": {
      "op": "SHL"
    },
    "6443": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7347,
        7450
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6444": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7347,
        7450
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6447": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7347,
        7450
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6449": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7347,
        7450
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6450": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7347,
        7450
      ],
      "op": "ADD",
      "path": "2"
    },
    "6451": {
      "op": "MSTORE"
    },
    "6452": {
      "op": "PUSH1",
      "value": "0x3A"
    },
    "6454": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6456": {
      "op": "DUP3"
    },
    "6457": {
      "op": "ADD"
    },
    "6458": {
      "op": "MSTORE"
    },
    "6459": {
      "op": "PUSH32",
      "value": "0x4576656E747320636F756C64206D75737420626520657175616C207769746820"
    },
    "6492": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6494": {
      "op": "DUP3"
    },
    "6495": {
      "op": "ADD"
    },
    "6496": {
      "op": "MSTORE"
    },
    "6497": {
      "op": "PUSH32",
      "value": "0x506572636570742050657220506F7274696F6E206C656E677468000000000000"
    },
    "6530": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6532": {
      "op": "DUP3"
    },
    "6533": {
      "op": "ADD"
    },
    "6534": {
      "op": "MSTORE"
    },
    "6535": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "6537": {
      "op": "ADD"
    },
    "6538": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7347,
        7450
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "6541": {
      "op": "JUMP"
    },
    "6542": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7347,
        7450
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6543": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7468,
        7480
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 65,
      "value": "0xC"
    },
    "6545": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7468,
        7490
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6548": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6550": {
      "op": "SHL"
    },
    "6551": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7468,
        7490
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6552": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7468,
        7490
      ],
      "op": "DIV",
      "path": "2"
    },
    "6553": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7468,
        7490
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6555": {
      "branch": 137,
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7468,
        7490
      ],
      "op": "AND",
      "path": "2"
    },
    "6556": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7460,
        7522
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19B7"
    },
    "6559": {
      "branch": 137,
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7460,
        7522
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6560": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7460,
        7522
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6562": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7460,
        7522
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6563": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6567": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6569": {
      "op": "SHL"
    },
    "6570": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7460,
        7522
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6571": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7460,
        7522
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6572": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7460,
        7522
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6574": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7460,
        7522
      ],
      "op": "ADD",
      "path": "2"
    },
    "6575": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7460,
        7522
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "6578": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7460,
        7522
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6579": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7460,
        7522
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27BF"
    },
    "6582": {
      "fn": "DistributorNative.setEventVestingParams",
      "jump": "i",
      "offset": [
        7460,
        7522
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6583": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7460,
        7522
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6584": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7533,
        7551
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 66,
      "value": "0x8"
    },
    "6586": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7533,
        7566
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6587": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7533,
        7566
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6588": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7533,
        7566
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6589": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7577,
        7594
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6591": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7577,
        7594
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6592": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7608,
        7772
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6593": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7632,
        7644
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6594": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7628,
        7629
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6595": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7628,
        7644
      ],
      "op": "LT",
      "path": "2"
    },
    "6596": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7608,
        7772
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6597": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7608,
        7772
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A3E"
    },
    "6600": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7608,
        7772
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6601": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7689
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 67,
      "value": "0xA"
    },
    "6603": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7704
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6604": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7705,
        7706
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6605": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6606": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6607": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6608": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "LT",
      "path": "2"
    },
    "6609": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19DC"
    },
    "6612": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6613": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19DC"
    },
    "6616": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D9"
    },
    "6619": {
      "fn": "DistributorNative.setEventVestingParams",
      "jump": "i",
      "offset": [
        7695,
        7707
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6620": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6621": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6623": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6624": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6625": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "MUL",
      "path": "2"
    },
    "6626": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6627": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6628": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6629": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "ADD",
      "path": "2"
    },
    "6630": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6631": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "ADD",
      "path": "2"
    },
    "6632": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7695,
        7707
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6633": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7708
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6634": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7708
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6635": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7708
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6637": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7708
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6638": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7708
      ],
      "op": "ADD",
      "path": "2"
    },
    "6639": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7708
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6640": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7708
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6643": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7708
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6644": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7708
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6645": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7708
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6646": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7708
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6647": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7708
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6648": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7708
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6649": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7708
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6650": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7708
      ],
      "op": "ADD",
      "path": "2"
    },
    "6651": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7665,
        7708
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6652": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7760
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 68
    },
    "6653": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7760
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6654": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7734,
        7761
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A2A"
    },
    "6657": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7734,
        7761
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6658": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7757
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6659": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7757
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6660": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7758,
        7759
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6661": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7758,
        7759
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6662": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7760
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6663": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7760
      ],
      "op": "LT",
      "path": "2"
    },
    "6664": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A13"
    },
    "6667": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6668": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A13"
    },
    "6671": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D9"
    },
    "6674": {
      "fn": "DistributorNative.setEventVestingParams",
      "jump": "i",
      "offset": [
        7748,
        7760
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6675": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7760
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6676": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6678": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7760
      ],
      "op": "MUL",
      "path": "2"
    },
    "6679": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6681": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7760
      ],
      "op": "ADD",
      "path": "2"
    },
    "6682": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7760
      ],
      "op": "ADD",
      "path": "2"
    },
    "6683": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7748,
        7760
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6684": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7734,
        7743
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6685": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7734,
        7747
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x218F"
    },
    "6688": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7734,
        7747
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6689": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7734,
        7761
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6690": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7734,
        7761
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6691": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7734,
        7761
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "6696": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7734,
        7761
      ],
      "op": "AND",
      "path": "2"
    },
    "6697": {
      "fn": "DistributorNative.setEventVestingParams",
      "jump": "i",
      "offset": [
        7734,
        7761
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6698": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7734,
        7761
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6699": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7722,
        7761
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6700": {
      "op": "POP"
    },
    "6701": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7646,
        7649
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 69
    },
    "6702": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7646,
        7649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A36"
    },
    "6705": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7646,
        7649
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6706": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7646,
        7649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2705"
    },
    "6709": {
      "fn": "DistributorNative.setEventVestingParams",
      "jump": "i",
      "offset": [
        7646,
        7649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6710": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7646,
        7649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6711": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7646,
        7649
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6712": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7646,
        7649
      ],
      "op": "POP",
      "path": "2"
    },
    "6713": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7646,
        7649
      ],
      "op": "POP",
      "path": "2"
    },
    "6714": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7608,
        7772
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19C0"
    },
    "6717": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7608,
        7772
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6718": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7608,
        7772
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6719": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7608,
        7772
      ],
      "op": "POP",
      "path": "2"
    },
    "6720": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7810,
        7819
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 70
    },
    "6721": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7790,
        7806
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6723": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7790,
        7806
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6724": {
      "branch": 138,
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7790,
        7819
      ],
      "op": "EQ",
      "path": "2"
    },
    "6725": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7782,
        7848
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A90"
    },
    "6728": {
      "branch": 138,
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7782,
        7848
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6729": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7782,
        7848
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6731": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7782,
        7848
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6732": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6736": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6738": {
      "op": "SHL"
    },
    "6739": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7782,
        7848
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6740": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7782,
        7848
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6743": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7782,
        7848
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6745": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7782,
        7848
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6746": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7782,
        7848
      ],
      "op": "ADD",
      "path": "2"
    },
    "6747": {
      "op": "MSTORE"
    },
    "6748": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6750": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6752": {
      "op": "DUP3"
    },
    "6753": {
      "op": "ADD"
    },
    "6754": {
      "op": "MSTORE"
    },
    "6755": {
      "op": "PUSH32",
      "value": "0x507265636973696F6E2070657263656E74732069737375650000000000000000"
    },
    "6788": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6790": {
      "op": "DUP3"
    },
    "6791": {
      "op": "ADD"
    },
    "6792": {
      "op": "MSTORE"
    },
    "6793": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6795": {
      "op": "ADD"
    },
    "6796": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7782,
        7848
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "6799": {
      "op": "JUMP"
    },
    "6800": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7782,
        7848
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6801": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7864,
        7901
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 71,
      "value": "0x40"
    },
    "6803": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7864,
        7901
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6804": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7885,
        7900
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "6805": {
      "op": "DUP2"
    },
    "6806": {
      "op": "MSTORE"
    },
    "6807": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7864,
        7901
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x1AF3C14CE558C4A33618E1F36C8EA383FC552A672298056311FA66518719F6E0"
    },
    "6840": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7864,
        7901
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6843": {
      "op": "ADD"
    },
    "6844": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7864,
        7901
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6846": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7864,
        7901
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6847": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7864,
        7901
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6848": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7864,
        7901
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6849": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7864,
        7901
      ],
      "op": "SUB",
      "path": "2"
    },
    "6850": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7864,
        7901
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6851": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7864,
        7901
      ],
      "op": "LOG1",
      "path": "2"
    },
    "6852": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7337,
        7908
      ],
      "op": "POP",
      "path": "2"
    },
    "6853": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "POP",
      "path": "2"
    },
    "6854": {
      "fn": "DistributorNative.setEventVestingParams",
      "offset": [
        7217,
        7908
      ],
      "op": "POP",
      "path": "2"
    },
    "6855": {
      "fn": "DistributorNative.setEventVestingParams",
      "jump": "o",
      "offset": [
        7217,
        7908
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6856": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        9955,
        10402
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6857": {
      "offset": [
        2536,
        2541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "6859": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        2536,
        2541
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6866": {
      "op": "SHL"
    },
    "6867": {
      "op": "SUB"
    },
    "6868": {
      "offset": [
        2536,
        2541
      ],
      "op": "AND",
      "path": "2"
    },
    "6869": {
      "offset": [
        2522,
        2532
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6870": {
      "offset": [
        2522,
        2541
      ],
      "op": "EQ",
      "path": "2"
    },
    "6871": {
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF2"
    },
    "6874": {
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6875": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6877": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        2514,
        2571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6878": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6882": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6884": {
      "op": "SHL"
    },
    "6885": {
      "offset": [
        2514,
        2571
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6886": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        2514,
        2571
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6887": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6889": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        2514,
        2571
      ],
      "op": "ADD",
      "path": "2"
    },
    "6890": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "6893": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        2514,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6894": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2634"
    },
    "6897": {
      "fn": "DistributorNative.setDistributionParameters",
      "jump": "i",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6898": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6899": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10136,
        10148
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 72,
      "value": "0xC"
    },
    "6901": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10136,
        10158
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6906": {
      "op": "SHL"
    },
    "6907": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10136,
        10158
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6908": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10136,
        10158
      ],
      "op": "DIV",
      "path": "2"
    },
    "6909": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10136,
        10158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "6911": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10136,
        10158
      ],
      "op": "AND",
      "path": "2"
    },
    "6912": {
      "branch": 139,
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10135,
        10158
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6913": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10127,
        10191
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B4C"
    },
    "6916": {
      "branch": 139,
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10127,
        10191
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6917": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10127,
        10191
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6919": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10127,
        10191
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6920": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6924": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6926": {
      "op": "SHL"
    },
    "6927": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10127,
        10191
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6928": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10127,
        10191
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6931": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10127,
        10191
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6933": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10127,
        10191
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6934": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10127,
        10191
      ],
      "op": "ADD",
      "path": "2"
    },
    "6935": {
      "op": "MSTORE"
    },
    "6936": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "6938": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6940": {
      "op": "DUP3"
    },
    "6941": {
      "op": "ADD"
    },
    "6942": {
      "op": "MSTORE"
    },
    "6943": {
      "op": "PUSH32",
      "value": "0x446973747269627574696F6E20616C7265616479206372656174656400000000"
    },
    "6976": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6978": {
      "op": "DUP3"
    },
    "6979": {
      "op": "ADD"
    },
    "6980": {
      "op": "MSTORE"
    },
    "6981": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6983": {
      "op": "ADD"
    },
    "6984": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10127,
        10191
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "6987": {
      "op": "JUMP"
    },
    "6988": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10127,
        10191
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6989": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10202,
        10214
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 73,
      "value": "0xC"
    },
    "6991": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10202,
        10229
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6992": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10202,
        10229
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6993": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10239,
        10278
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 74,
      "value": "0xD"
    },
    "6995": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10239,
        10308
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6996": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10239,
        10308
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6997": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10239,
        10308
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6998": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10239,
        10308
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6999": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10319,
        10335
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 75,
      "value": "0x7"
    },
    "7001": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10319,
        10355
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7002": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10319,
        10355
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7003": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10319,
        10355
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7004": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10319,
        10355
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7009": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "7011": {
      "op": "SHL"
    },
    "7012": {
      "op": "SUB"
    },
    "7013": {
      "op": "NOT"
    },
    "7014": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10366,
        10395
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 76
    },
    "7015": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10366,
        10395
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7016": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10366,
        10395
      ],
      "op": "AND",
      "path": "2"
    },
    "7017": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7019": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7021": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7023": {
      "op": "SHL"
    },
    "7024": {
      "op": "SUB"
    },
    "7025": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10202,
        10229
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7026": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10202,
        10229
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7027": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10202,
        10229
      ],
      "op": "AND",
      "path": "2"
    },
    "7028": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10366,
        10395
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7029": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10366,
        10395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7030": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10366,
        10395
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7031": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10366,
        10395
      ],
      "op": "OR",
      "path": "2"
    },
    "7032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7036": {
      "op": "SHL"
    },
    "7037": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10366,
        10395
      ],
      "op": "OR",
      "path": "2"
    },
    "7038": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10366,
        10395
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7039": {
      "fn": "DistributorNative.setDistributionParameters",
      "offset": [
        10366,
        10395
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7040": {
      "fn": "DistributorNative.setDistributionParameters",
      "jump": "o",
      "offset": [
        9955,
        10402
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7041": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9123,
        9690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7042": {
      "offset": [
        2536,
        2541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "7044": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        2536,
        2541
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7051": {
      "op": "SHL"
    },
    "7052": {
      "op": "SUB"
    },
    "7053": {
      "offset": [
        2536,
        2541
      ],
      "op": "AND",
      "path": "2"
    },
    "7054": {
      "offset": [
        2522,
        2532
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7055": {
      "offset": [
        2522,
        2541
      ],
      "op": "EQ",
      "path": "2"
    },
    "7056": {
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BAB"
    },
    "7059": {
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7060": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7062": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7063": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7067": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7069": {
      "op": "SHL"
    },
    "7070": {
      "offset": [
        2514,
        2571
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7071": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7072": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7074": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "ADD",
      "path": "2"
    },
    "7075": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "7078": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7079": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2634"
    },
    "7082": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "jump": "i",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7083": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7084": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9260,
        9261
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 77,
      "value": "0x0"
    },
    "7086": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9238,
        9250
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7087": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9238,
        9257
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7088": {
      "branch": 140,
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9238,
        9261
      ],
      "op": "GT",
      "path": "2"
    },
    "7089": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9230,
        9320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C1B"
    },
    "7092": {
      "branch": 140,
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9230,
        9320
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7093": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9230,
        9320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7095": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9230,
        9320
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7102": {
      "op": "SHL"
    },
    "7103": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9230,
        9320
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7104": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9230,
        9320
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7107": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9230,
        9320
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7109": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9230,
        9320
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7110": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9230,
        9320
      ],
      "op": "ADD",
      "path": "2"
    },
    "7111": {
      "op": "MSTORE"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x36"
    },
    "7114": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7116": {
      "op": "DUP3"
    },
    "7117": {
      "op": "ADD"
    },
    "7118": {
      "op": "MSTORE"
    },
    "7119": {
      "op": "PUSH32",
      "value": "0x54686520616C6C6F636174696F6E206172726179206D75737420636F6E746169"
    },
    "7152": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7154": {
      "op": "DUP3"
    },
    "7155": {
      "op": "ADD"
    },
    "7156": {
      "op": "MSTORE"
    },
    "7157": {
      "op": "PUSH22",
      "value": "0x1B881BDB9948195B195B595B9D08185D081B19585CDD"
    },
    "7180": {
      "op": "PUSH1",
      "value": "0x52"
    },
    "7182": {
      "op": "SHL"
    },
    "7183": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7185": {
      "op": "DUP3"
    },
    "7186": {
      "op": "ADD"
    },
    "7187": {
      "op": "MSTORE"
    },
    "7188": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7190": {
      "op": "ADD"
    },
    "7191": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9230,
        9320
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "7194": {
      "op": "JUMP"
    },
    "7195": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9230,
        9320
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7196": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9336,
        9342
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7198": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9331,
        9637
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7199": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9352,
        9364
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7200": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9352,
        9371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7201": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9348,
        9349
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7202": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9348,
        9371
      ],
      "op": "LT",
      "path": "2"
    },
    "7203": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9331,
        9637
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7204": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9331,
        9637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CBA"
    },
    "7207": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9331,
        9637
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7208": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9392,
        9420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7210": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9435
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7211": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9436,
        9437
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7212": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7213": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7214": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7215": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "LT",
      "path": "2"
    },
    "7216": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C3B"
    },
    "7219": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7220": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C3B"
    },
    "7223": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D9"
    },
    "7226": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "jump": "i",
      "offset": [
        9423,
        9438
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7227": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7228": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7230": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7231": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7232": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "MUL",
      "path": "2"
    },
    "7233": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7234": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7235": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7236": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "ADD",
      "path": "2"
    },
    "7237": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7238": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "ADD",
      "path": "2"
    },
    "7239": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7240": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9474,
        9489
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 78
    },
    "7241": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9474,
        9489
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7248": {
      "op": "SHL"
    },
    "7249": {
      "op": "SUB"
    },
    "7250": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9490
      ],
      "op": "AND",
      "path": "2"
    },
    "7251": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7253": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9490
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7254": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9490
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7255": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9490
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7256": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9490
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7257": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9490
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7258": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9490
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7259": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9490
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7260": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9490
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7262": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9490
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7263": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9490
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7264": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9490
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7265": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9503
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "7267": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9503
      ],
      "op": "ADD",
      "path": "2"
    },
    "7268": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9503
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7269": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7270": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9423,
        9438
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7271": {
      "op": "POP"
    },
    "7272": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9503
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "7274": {
      "branch": 141,
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9460,
        9503
      ],
      "op": "AND",
      "path": "2"
    },
    "7275": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9452,
        9542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C86"
    },
    "7278": {
      "branch": 141,
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9452,
        9542
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7279": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9452,
        9542
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7281": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9452,
        9542
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7282": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7286": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7288": {
      "op": "SHL"
    },
    "7289": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9452,
        9542
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7290": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9452,
        9542
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7291": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9452,
        9542
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7293": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9452,
        9542
      ],
      "op": "ADD",
      "path": "2"
    },
    "7294": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9452,
        9542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "7297": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9452,
        9542
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7298": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9452,
        9542
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27F6"
    },
    "7301": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "jump": "i",
      "offset": [
        9452,
        9542
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7302": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9452,
        9542
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7303": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9609,
        9626
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 79,
      "value": "0x20"
    },
    "7305": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9609,
        9626
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7306": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9609,
        9626
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7307": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9609,
        9626
      ],
      "op": "ADD",
      "path": "2"
    },
    "7308": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9609,
        9626
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7309": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9571,
        9586
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7310": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9571,
        9586
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7317": {
      "op": "SHL"
    },
    "7318": {
      "op": "SUB"
    },
    "7319": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9557,
        9587
      ],
      "op": "AND",
      "path": "2"
    },
    "7320": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9557,
        9570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7322": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9557,
        9587
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7323": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9557,
        9587
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7324": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9557,
        9587
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7325": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9557,
        9587
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7326": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9557,
        9587
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7327": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9557,
        9587
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7328": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9557,
        9587
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7329": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9557,
        9587
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7331": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9557,
        9587
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7332": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9557,
        9587
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "7333": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9557,
        9606
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7335": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9557,
        9606
      ],
      "op": "ADD",
      "path": "2"
    },
    "7336": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9557,
        9626
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7337": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9373,
        9376
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 80
    },
    "7338": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9373,
        9376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB2"
    },
    "7341": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9373,
        9376
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7342": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9373,
        9376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2705"
    },
    "7345": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "jump": "i",
      "offset": [
        9373,
        9376
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7346": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9373,
        9376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7347": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9373,
        9376
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7348": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9373,
        9376
      ],
      "op": "POP",
      "path": "2"
    },
    "7349": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9373,
        9376
      ],
      "op": "POP",
      "path": "2"
    },
    "7350": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9331,
        9637
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C1E"
    },
    "7353": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9331,
        9637
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7354": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9331,
        9637
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7355": {
      "op": "POP"
    },
    "7356": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9652,
        9683
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 81,
      "value": "0x40"
    },
    "7358": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9652,
        9683
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7359": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9667,
        9682
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "7360": {
      "op": "DUP2"
    },
    "7361": {
      "op": "MSTORE"
    },
    "7362": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9652,
        9683
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xB470A061A328BEDEA790142CA3E477573B6337191C39704740003DC082E76ECF"
    },
    "7395": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9652,
        9683
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7396": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7398": {
      "op": "ADD"
    },
    "7399": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        9652,
        9683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x179A"
    },
    "7402": {
      "op": "JUMP"
    },
    "7403": {
      "offset": [
        1550,
        1602
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7404": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7406": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7407": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7408": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7409": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7410": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "LT",
      "path": "2"
    },
    "7411": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x119C"
    },
    "7414": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7415": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7417": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7418": {
      "fn": "DistributorNative.setMultipleAddressDistributionAmount",
      "offset": [
        1550,
        1602
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7419": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        7914,
        9117
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7420": {
      "offset": [
        2536,
        2541
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "7422": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        2536,
        2541
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7429": {
      "op": "SHL"
    },
    "7430": {
      "op": "SUB"
    },
    "7431": {
      "offset": [
        2536,
        2541
      ],
      "op": "AND",
      "path": "2"
    },
    "7432": {
      "offset": [
        2522,
        2532
      ],
      "op": "CALLER",
      "path": "2"
    },
    "7433": {
      "offset": [
        2522,
        2541
      ],
      "op": "EQ",
      "path": "2"
    },
    "7434": {
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D25"
    },
    "7437": {
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7438": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7440": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7441": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7445": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7447": {
      "op": "SHL"
    },
    "7448": {
      "offset": [
        2514,
        2571
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7449": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7450": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7452": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "ADD",
      "path": "2"
    },
    "7453": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "7456": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7457": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2634"
    },
    "7460": {
      "fn": "DistributorNative.setVestingParams",
      "jump": "i",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7461": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        2514,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7462": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8072,
        8096
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 82,
      "value": "0xA"
    },
    "7464": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8072,
        8103
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7465": {
      "branch": 142,
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8072,
        8108
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7466": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8072,
        8161
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7467": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8072,
        8161
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7468": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8072,
        8161
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D35"
    },
    "7471": {
      "branch": 142,
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8072,
        8161
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7472": {
      "op": "POP"
    },
    "7473": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8124,
        8149
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7475": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8124,
        8156
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7476": {
      "branch": 143,
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8124,
        8161
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7477": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8072,
        8161
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7478": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8051,
        8217
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D81"
    },
    "7481": {
      "branch": 143,
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8051,
        8217
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7482": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8051,
        8217
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7484": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8051,
        8217
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7485": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7489": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7491": {
      "op": "SHL"
    },
    "7492": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8051,
        8217
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7493": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8051,
        8217
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7496": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8051,
        8217
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7498": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8051,
        8217
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7499": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8051,
        8217
      ],
      "op": "ADD",
      "path": "2"
    },
    "7500": {
      "op": "MSTORE"
    },
    "7501": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "7503": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7505": {
      "op": "DUP3"
    },
    "7506": {
      "op": "ADD"
    },
    "7507": {
      "op": "MSTORE"
    },
    "7508": {
      "op": "PUSH32",
      "value": "0x56657374696E6720706172616D657465727320616C7265616479207365740000"
    },
    "7541": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7543": {
      "op": "DUP3"
    },
    "7544": {
      "op": "ADD"
    },
    "7545": {
      "op": "MSTORE"
    },
    "7546": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7548": {
      "op": "ADD"
    },
    "7549": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8051,
        8217
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "7552": {
      "op": "JUMP"
    },
    "7553": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8051,
        8217
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7554": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8261,
        8270
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 83
    },
    "7555": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8261,
        8277
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7556": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8235,
        8250
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7557": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8235,
        8257
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7558": {
      "branch": 144,
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8235,
        8277
      ],
      "op": "EQ",
      "path": "2"
    },
    "7559": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8227,
        8350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E06"
    },
    "7562": {
      "branch": 144,
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8227,
        8350
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7563": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8227,
        8350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7565": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8227,
        8350
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7566": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7570": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7572": {
      "op": "SHL"
    },
    "7573": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8227,
        8350
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7574": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8227,
        8350
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7575": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7577": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8227,
        8350
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7579": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8227,
        8350
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7580": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8227,
        8350
      ],
      "op": "ADD",
      "path": "2"
    },
    "7581": {
      "op": "MSTORE"
    },
    "7582": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7584": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7586": {
      "op": "DUP3"
    },
    "7587": {
      "op": "ADD"
    },
    "7588": {
      "op": "DUP2"
    },
    "7589": {
      "op": "SWAP1"
    },
    "7590": {
      "op": "MSTORE"
    },
    "7591": {
      "op": "PUSH32",
      "value": "0x556E6C6F636B696E672054696D6573206C656E677468206D7573742062652065"
    },
    "7624": {
      "op": "SWAP1"
    },
    "7625": {
      "op": "DUP3"
    },
    "7626": {
      "op": "ADD"
    },
    "7627": {
      "op": "MSTORE"
    },
    "7628": {
      "op": "PUSH32",
      "value": "0x7175616C20776974682050657263656E742050657220506F7274696F6E206C65"
    },
    "7661": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7663": {
      "op": "DUP3"
    },
    "7664": {
      "op": "ADD"
    },
    "7665": {
      "op": "MSTORE"
    },
    "7666": {
      "op": "PUSH4",
      "value": "0xDCCEE8D"
    },
    "7671": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "7673": {
      "op": "SHL"
    },
    "7674": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7676": {
      "op": "DUP3"
    },
    "7677": {
      "op": "ADD"
    },
    "7678": {
      "op": "MSTORE"
    },
    "7679": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "7681": {
      "op": "ADD"
    },
    "7682": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8227,
        8350
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "7685": {
      "op": "JUMP"
    },
    "7686": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8227,
        8350
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7687": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8368,
        8380
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 84,
      "value": "0xC"
    },
    "7689": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8368,
        8390
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7694": {
      "op": "SHL"
    },
    "7695": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8368,
        8390
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7696": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8368,
        8390
      ],
      "op": "DIV",
      "path": "2"
    },
    "7697": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8368,
        8390
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "7699": {
      "branch": 145,
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8368,
        8390
      ],
      "op": "AND",
      "path": "2"
    },
    "7700": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8360,
        8422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E2F"
    },
    "7703": {
      "branch": 145,
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8360,
        8422
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7704": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8360,
        8422
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7706": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8360,
        8422
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7707": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7711": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7713": {
      "op": "SHL"
    },
    "7714": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8360,
        8422
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7715": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8360,
        8422
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7716": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8360,
        8422
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7718": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8360,
        8422
      ],
      "op": "ADD",
      "path": "2"
    },
    "7719": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8360,
        8422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "7722": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8360,
        8422
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7723": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8360,
        8422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27BF"
    },
    "7726": {
      "fn": "DistributorNative.setVestingParams",
      "jump": "i",
      "offset": [
        8360,
        8422
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7727": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8360,
        8422
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7728": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8461,
        8478
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 85,
      "value": "0x12"
    },
    "7730": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8461,
        8486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7732": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8461,
        8486
      ],
      "op": "ADD",
      "path": "2"
    },
    "7733": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8461,
        8486
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7734": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8455
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7735": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8456,
        8457
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7737": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8458
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7738": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8458
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7739": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8458
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7740": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8458
      ],
      "op": "LT",
      "path": "2"
    },
    "7741": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E48"
    },
    "7744": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8458
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7745": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E48"
    },
    "7748": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D9"
    },
    "7751": {
      "fn": "DistributorNative.setVestingParams",
      "jump": "i",
      "offset": [
        8440,
        8458
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7752": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8458
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7753": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7755": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8458
      ],
      "op": "MUL",
      "path": "2"
    },
    "7756": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7758": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8458
      ],
      "op": "ADD",
      "path": "2"
    },
    "7759": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8458
      ],
      "op": "ADD",
      "path": "2"
    },
    "7760": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8458
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7761": {
      "branch": 146,
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8440,
        8486
      ],
      "op": "GT",
      "path": "2"
    },
    "7762": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8432,
        8538
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB5"
    },
    "7765": {
      "branch": 146,
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8432,
        8538
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7766": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8432,
        8538
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7768": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8432,
        8538
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7769": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7773": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7775": {
      "op": "SHL"
    },
    "7776": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8432,
        8538
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7777": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8432,
        8538
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7778": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7780": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8432,
        8538
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7782": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8432,
        8538
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7783": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8432,
        8538
      ],
      "op": "ADD",
      "path": "2"
    },
    "7784": {
      "op": "MSTORE"
    },
    "7785": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "7787": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7789": {
      "op": "DUP3"
    },
    "7790": {
      "op": "ADD"
    },
    "7791": {
      "op": "MSTORE"
    },
    "7792": {
      "op": "PUSH32",
      "value": "0x556E6C6F636B2074696D65206D75737420626520616674657220746865206469"
    },
    "7825": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7827": {
      "op": "DUP3"
    },
    "7828": {
      "op": "ADD"
    },
    "7829": {
      "op": "MSTORE"
    },
    "7830": {
      "op": "PUSH15",
      "value": "0x73747269627574696F6E20656E6473"
    },
    "7846": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "7848": {
      "op": "SHL"
    },
    "7849": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7851": {
      "op": "DUP3"
    },
    "7852": {
      "op": "ADD"
    },
    "7853": {
      "op": "MSTORE"
    },
    "7854": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7856": {
      "op": "ADD"
    },
    "7857": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8432,
        8538
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "7860": {
      "op": "JUMP"
    },
    "7861": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8432,
        8538
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7862": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8549,
        8566
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7864": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8585,
        8594
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7865": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8580,
        8973
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7866": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8604,
        8619
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7867": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8604,
        8626
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7868": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8600,
        8601
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7869": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8600,
        8626
      ],
      "op": "LT",
      "path": "2"
    },
    "7870": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8580,
        8973
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7871": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8580,
        8973
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A3E"
    },
    "7874": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8580,
        8973
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7875": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8651,
        8656
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7876": {
      "branch": 147,
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8651,
        8656
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7877": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8647,
        8788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F65"
    },
    "7880": {
      "branch": 147,
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8647,
        8788
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7881": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8705,
        8720
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 86
    },
    "7882": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8721,
        8726
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ED4"
    },
    "7885": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8725,
        8726
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7887": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8721,
        8722
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7888": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8721,
        8726
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2762"
    },
    "7891": {
      "fn": "DistributorNative.setVestingParams",
      "jump": "i",
      "offset": [
        8721,
        8726
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7892": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8721,
        8726
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7893": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8705,
        8727
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7894": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8705,
        8727
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7895": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8705,
        8727
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7896": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8705,
        8727
      ],
      "op": "LT",
      "path": "2"
    },
    "7897": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8705,
        8727
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EE4"
    },
    "7900": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8705,
        8727
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7901": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8705,
        8727
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EE4"
    },
    "7904": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8705,
        8727
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D9"
    },
    "7907": {
      "fn": "DistributorNative.setVestingParams",
      "jump": "i",
      "offset": [
        8705,
        8727
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7908": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8705,
        8727
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7909": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8705,
        8727
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7911": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8705,
        8727
      ],
      "op": "MUL",
      "path": "2"
    },
    "7912": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8705,
        8727
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7914": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8705,
        8727
      ],
      "op": "ADD",
      "path": "2"
    },
    "7915": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8705,
        8727
      ],
      "op": "ADD",
      "path": "2"
    },
    "7916": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8705,
        8727
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7917": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8699
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7918": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8700,
        8701
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7919": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8702
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7920": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8702
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7921": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8702
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7922": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8702
      ],
      "op": "LT",
      "path": "2"
    },
    "7923": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EFE"
    },
    "7926": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8702
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7927": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EFE"
    },
    "7930": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8702
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D9"
    },
    "7933": {
      "fn": "DistributorNative.setVestingParams",
      "jump": "i",
      "offset": [
        8684,
        8702
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7934": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8702
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7935": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7937": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8702
      ],
      "op": "MUL",
      "path": "2"
    },
    "7938": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8702
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7940": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8702
      ],
      "op": "ADD",
      "path": "2"
    },
    "7941": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8702
      ],
      "op": "ADD",
      "path": "2"
    },
    "7942": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8702
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7943": {
      "branch": 148,
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8684,
        8727
      ],
      "op": "GT",
      "path": "2"
    },
    "7944": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8676,
        8773
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F65"
    },
    "7947": {
      "branch": 148,
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8676,
        8773
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7948": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8676,
        8773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7950": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8676,
        8773
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7951": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7955": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7957": {
      "op": "SHL"
    },
    "7958": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8676,
        8773
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7959": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8676,
        8773
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7962": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8676,
        8773
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7964": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8676,
        8773
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7965": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8676,
        8773
      ],
      "op": "ADD",
      "path": "2"
    },
    "7966": {
      "op": "MSTORE"
    },
    "7967": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "7969": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7971": {
      "op": "DUP3"
    },
    "7972": {
      "op": "ADD"
    },
    "7973": {
      "op": "MSTORE"
    },
    "7974": {
      "op": "PUSH32",
      "value": "0x556E6C6F636B2074696D65206D7573742062652067726561746572207468616E"
    },
    "8007": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8009": {
      "op": "DUP3"
    },
    "8010": {
      "op": "ADD"
    },
    "8011": {
      "op": "MSTORE"
    },
    "8012": {
      "op": "PUSH9",
      "value": "0x2070726576696F7573"
    },
    "8022": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "8024": {
      "op": "SHL"
    },
    "8025": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8027": {
      "op": "DUP3"
    },
    "8028": {
      "op": "ADD"
    },
    "8029": {
      "op": "MSTORE"
    },
    "8030": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8032": {
      "op": "ADD"
    },
    "8033": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8676,
        8773
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "8036": {
      "op": "JUMP"
    },
    "8037": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8676,
        8773
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8038": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8827
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 87,
      "value": "0x9"
    },
    "8040": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8848
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8041": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8849,
        8850
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8042": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8043": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8044": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8045": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "LT",
      "path": "2"
    },
    "8046": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F79"
    },
    "8049": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8050": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F79"
    },
    "8053": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D9"
    },
    "8056": {
      "fn": "DistributorNative.setVestingParams",
      "jump": "i",
      "offset": [
        8833,
        8851
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8057": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8058": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8060": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8061": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8062": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "MUL",
      "path": "2"
    },
    "8063": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8064": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8065": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8066": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "ADD",
      "path": "2"
    },
    "8067": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8068": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "ADD",
      "path": "2"
    },
    "8069": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8833,
        8851
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8070": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8852
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8071": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8852
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8072": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8852
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8074": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8852
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8075": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8852
      ],
      "op": "ADD",
      "path": "2"
    },
    "8076": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8852
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8077": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8852
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8080": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8852
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8081": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8852
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8082": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8852
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8083": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8852
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8084": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8852
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8085": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8852
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8086": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8852
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8087": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8852
      ],
      "op": "ADD",
      "path": "2"
    },
    "8088": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8802,
        8852
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8089": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 88
    },
    "8090": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8091": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8890
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "8093": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8890
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8094": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8905
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8095": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8905
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8096": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8906,
        8907
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8097": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8906,
        8907
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8098": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8099": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "LT",
      "path": "2"
    },
    "8100": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FAF"
    },
    "8103": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8104": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FAF"
    },
    "8107": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D9"
    },
    "8110": {
      "fn": "DistributorNative.setVestingParams",
      "jump": "i",
      "offset": [
        8896,
        8908
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8111": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8112": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8114": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8115": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8116": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "MUL",
      "path": "2"
    },
    "8117": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8118": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8119": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8120": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "ADD",
      "path": "2"
    },
    "8121": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8122": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "ADD",
      "path": "2"
    },
    "8123": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8896,
        8908
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8124": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8909
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8125": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8909
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8126": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8909
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8128": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8909
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8129": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8909
      ],
      "op": "ADD",
      "path": "2"
    },
    "8130": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8909
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8131": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8909
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8134": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8909
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8135": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8909
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8136": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8909
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8137": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8909
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8138": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8909
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8139": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8909
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8140": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8909
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8141": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8909
      ],
      "op": "ADD",
      "path": "2"
    },
    "8142": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8866,
        8909
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8143": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8949,
        8961
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 89
    },
    "8144": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8949,
        8961
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8145": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8935,
        8962
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE6"
    },
    "8148": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8935,
        8962
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8149": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8949,
        8958
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8150": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8949,
        8958
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8151": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8959,
        8960
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8152": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8959,
        8960
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8153": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8949,
        8961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8154": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8949,
        8961
      ],
      "op": "LT",
      "path": "2"
    },
    "8155": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8949,
        8961
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A13"
    },
    "8158": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8949,
        8961
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8159": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8949,
        8961
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A13"
    },
    "8162": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8949,
        8961
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26D9"
    },
    "8165": {
      "fn": "DistributorNative.setVestingParams",
      "jump": "i",
      "offset": [
        8949,
        8961
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8166": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8935,
        8962
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8167": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8923,
        8962
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8168": {
      "op": "POP"
    },
    "8169": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8628,
        8631
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 90
    },
    "8170": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8628,
        8631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FF2"
    },
    "8173": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8628,
        8631
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8174": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8628,
        8631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2705"
    },
    "8177": {
      "fn": "DistributorNative.setVestingParams",
      "jump": "i",
      "offset": [
        8628,
        8631
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8178": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8628,
        8631
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8179": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8628,
        8631
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8180": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8628,
        8631
      ],
      "op": "POP",
      "path": "2"
    },
    "8181": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8628,
        8631
      ],
      "op": "POP",
      "path": "2"
    },
    "8182": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8580,
        8973
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EB9"
    },
    "8185": {
      "fn": "DistributorNative.setVestingParams",
      "offset": [
        8580,
        8973
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8186": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12497,
        12631
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8187": {
      "offset": [
        2660,
        2672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "8189": {
      "offset": [
        2660,
        2678
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8196": {
      "op": "SHL"
    },
    "8197": {
      "op": "SUB"
    },
    "8198": {
      "offset": [
        2660,
        2678
      ],
      "op": "AND",
      "path": "2"
    },
    "8199": {
      "offset": [
        2646,
        2656
      ],
      "op": "CALLER",
      "path": "2"
    },
    "8200": {
      "offset": [
        2646,
        2678
      ],
      "op": "EQ",
      "path": "2"
    },
    "8201": {
      "offset": [
        2638,
        2721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2024"
    },
    "8204": {
      "offset": [
        2638,
        2721
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8205": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        2638,
        2721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8207": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        2638,
        2721
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8208": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8212": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8214": {
      "op": "SHL"
    },
    "8215": {
      "offset": [
        2638,
        2721
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8216": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        2638,
        2721
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8217": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        2638,
        2721
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8219": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        2638,
        2721
      ],
      "op": "ADD",
      "path": "2"
    },
    "8220": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        2638,
        2721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "8223": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        2638,
        2721
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8224": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        2638,
        2721
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2779"
    },
    "8227": {
      "fn": "DistributorNative.setAddressEvent",
      "jump": "i",
      "offset": [
        2638,
        2721
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8228": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        2638,
        2721
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8233": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8235": {
      "op": "SHL"
    },
    "8236": {
      "op": "SUB"
    },
    "8237": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12591,
        12615
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 91
    },
    "8238": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12591,
        12615
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8239": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12591,
        12615
      ],
      "op": "AND",
      "path": "2"
    },
    "8240": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12591,
        12615
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8242": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12591,
        12615
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8243": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12591,
        12615
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8244": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12591,
        12615
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8245": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12591,
        12605
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8247": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12591,
        12615
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8249": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12591,
        12615
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8250": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12591,
        12615
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8252": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12591,
        12615
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8253": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12591,
        12615
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8254": {
      "fn": "DistributorNative.setAddressEvent",
      "offset": [
        12591,
        12624
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8255": {
      "fn": "DistributorNative.setAddressEvent",
      "jump": "o",
      "offset": [
        12497,
        12631
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8256": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13646,
        14015
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8263": {
      "op": "SHL"
    },
    "8264": {
      "op": "SUB"
    },
    "8265": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13737
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 92
    },
    "8266": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13737
      ],
      "op": "AND",
      "path": "2"
    },
    "8267": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13727
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8269": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13737
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8270": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13737
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8271": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13737
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8272": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8274": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13737
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8275": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13737
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8276": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13737
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8277": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13737
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8279": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13737
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8280": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13737
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8281": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13750
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8283": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13750
      ],
      "op": "ADD",
      "path": "2"
    },
    "8284": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13750
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8285": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13750
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "8287": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13714,
        13750
      ],
      "op": "AND",
      "path": "2"
    },
    "8288": {
      "branch": 149,
      "fn": "DistributorNative._registerUser",
      "offset": [
        13713,
        13750
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8289": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13705,
        13781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20AC"
    },
    "8292": {
      "branch": 149,
      "fn": "DistributorNative._registerUser",
      "offset": [
        13705,
        13781
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "8293": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13705,
        13781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8295": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13705,
        13781
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8296": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8300": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8302": {
      "op": "SHL"
    },
    "8303": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13705,
        13781
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8304": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13705,
        13781
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8307": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13705,
        13781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "8309": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13705,
        13781
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8310": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13705,
        13781
      ],
      "op": "ADD",
      "path": "2"
    },
    "8311": {
      "op": "MSTORE"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "8314": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8316": {
      "op": "DUP3"
    },
    "8317": {
      "op": "ADD"
    },
    "8318": {
      "op": "MSTORE"
    },
    "8319": {
      "op": "PUSH32",
      "value": "0x4164647265737320616C72656164792072656769737465726564000000000000"
    },
    "8352": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8354": {
      "op": "DUP3"
    },
    "8355": {
      "op": "ADD"
    },
    "8356": {
      "op": "MSTORE"
    },
    "8357": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8359": {
      "op": "ADD"
    },
    "8360": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13705,
        13781
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7AF"
    },
    "8363": {
      "op": "JUMP"
    },
    "8364": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13705,
        13781
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8365": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 93,
      "value": "0x40"
    },
    "8367": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8368": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8369": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "8371": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8372": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "ADD",
      "path": "2"
    },
    "8373": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8374": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8375": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13839,
        13854
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "8376": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8377": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8380": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "8382": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8383": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8384": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "ADD",
      "path": "2"
    },
    "8385": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8386": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8387": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8388": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13859,
        13863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "8390": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8391": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8392": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "ADD",
      "path": "2"
    },
    "8393": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8394": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8395": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13826,
        13864
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8402": {
      "op": "SHL"
    },
    "8403": {
      "op": "SUB"
    },
    "8404": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13823
      ],
      "op": "DUP9",
      "path": "2"
    },
    "8405": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13823
      ],
      "op": "AND",
      "path": "2"
    },
    "8406": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13823
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8407": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13823
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8408": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13823
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8409": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13823
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8410": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13823
      ],
      "op": "DUP6",
      "path": "2"
    },
    "8411": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13823
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8412": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13823
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8413": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13823
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8414": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13823
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8415": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "8416": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8417": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "DUP8",
      "path": "2"
    },
    "8418": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8419": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8420": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8421": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8422": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8423": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "ADD",
      "path": "2"
    },
    "8424": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8425": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8426": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "8428": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "8429": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "DUP7",
      "path": "2"
    },
    "8430": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "ADD",
      "path": "2"
    },
    "8431": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8432": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8433": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "8435": {
      "op": "NOT"
    },
    "8436": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "AND",
      "path": "2"
    },
    "8437": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8438": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8439": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8440": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8441": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8442": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8443": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "OR",
      "path": "2"
    },
    "8444": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8445": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13800,
        13864
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8446": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13895,
        13913
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 94
    },
    "8447": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13895,
        13913
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8448": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13914
      ],
      "op": "DUP5",
      "path": "2"
    },
    "8449": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13914
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8450": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13914
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8451": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13914
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8452": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13914
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "8453": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13914
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8454": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13914
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8455": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13914
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "8456": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13925
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8457": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13925
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8464": {
      "op": "SHL"
    },
    "8465": {
      "op": "SUB"
    },
    "8466": {
      "op": "NOT"
    },
    "8467": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13925
      ],
      "op": "AND",
      "path": "2"
    },
    "8468": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8469": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13925
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8470": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13925
      ],
      "op": "OR",
      "path": "2"
    },
    "8471": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13925
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8472": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13925
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "8473": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13874,
        13925
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8474": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13935,
        13955
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 95
    },
    "8475": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13935,
        13955
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8476": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13935,
        13955
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8477": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13935,
        13955
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2125"
    },
    "8480": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13935,
        13955
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8481": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13935,
        13955
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2705"
    },
    "8484": {
      "fn": "DistributorNative._registerUser",
      "jump": "i",
      "offset": [
        13935,
        13955
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8485": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13935,
        13955
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8486": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13935,
        13955
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8487": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13935,
        13955
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8488": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13935,
        13955
      ],
      "op": "POP",
      "path": "2"
    },
    "8489": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13935,
        13955
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8490": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13935,
        13955
      ],
      "op": "POP",
      "path": "2"
    },
    "8491": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13982,
        13990
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 96
    },
    "8492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8498": {
      "op": "SHL"
    },
    "8499": {
      "op": "SUB"
    },
    "8500": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13971,
        14008
      ],
      "op": "AND",
      "path": "2"
    },
    "8501": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13971,
        14008
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x6F3BF3FA84E4763A43B3D23F9D79BE242D6D5C834941FF4C1111B67469E1150C"
    },
    "8534": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13992,
        14007
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "8535": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13971,
        14008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8537": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13971,
        14008
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8538": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13971,
        14008
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2165"
    },
    "8541": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13971,
        14008
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8542": {
      "op": "DUP2"
    },
    "8543": {
      "op": "MSTORE"
    },
    "8544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8546": {
      "op": "ADD"
    },
    "8547": {
      "op": "SWAP1"
    },
    "8548": {
      "op": "JUMP"
    },
    "8549": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13971,
        14008
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8550": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13971,
        14008
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "8552": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13971,
        14008
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8553": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13971,
        14008
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8554": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13971,
        14008
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8555": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13971,
        14008
      ],
      "op": "SUB",
      "path": "2"
    },
    "8556": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13971,
        14008
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8557": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13971,
        14008
      ],
      "op": "LOG2",
      "path": "2"
    },
    "8558": {
      "fn": "DistributorNative._registerUser",
      "offset": [
        13646,
        14015
      ],
      "op": "POP",
      "path": "2"
    },
    "8559": {
      "fn": "DistributorNative._registerUser",
      "jump": "o",
      "offset": [
        13646,
        14015
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8560": {
      "fn": "SafeMath.mul",
      "offset": [
        3465,
        3561
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8561": {
      "fn": "SafeMath.mul",
      "offset": [
        3523,
        3530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8563": {
      "fn": "SafeMath.mul",
      "offset": [
        3549,
        3554
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 97,
      "value": "0x217C"
    },
    "8566": {
      "fn": "SafeMath.mul",
      "offset": [
        3553,
        3554
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8567": {
      "fn": "SafeMath.mul",
      "offset": [
        3549,
        3550
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8568": {
      "fn": "SafeMath.mul",
      "offset": [
        3549,
        3554
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2838"
    },
    "8571": {
      "fn": "SafeMath.mul",
      "jump": "i",
      "offset": [
        3549,
        3554
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8572": {
      "fn": "SafeMath.mul",
      "offset": [
        3549,
        3554
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8573": {
      "fn": "SafeMath.mul",
      "offset": [
        3542,
        3554
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8574": {
      "fn": "SafeMath.mul",
      "offset": [
        3465,
        3561
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8575": {
      "op": "POP"
    },
    "8576": {
      "op": "POP"
    },
    "8577": {
      "op": "POP"
    },
    "8578": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        3465,
        3561
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8579": {
      "fn": "SafeMath.div",
      "offset": [
        3850,
        3946
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8580": {
      "fn": "SafeMath.div",
      "offset": [
        3908,
        3915
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8582": {
      "fn": "SafeMath.div",
      "offset": [
        3934,
        3939
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 98,
      "value": "0x217C"
    },
    "8585": {
      "fn": "SafeMath.div",
      "offset": [
        3938,
        3939
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8586": {
      "fn": "SafeMath.div",
      "offset": [
        3934,
        3935
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8587": {
      "fn": "SafeMath.div",
      "offset": [
        3934,
        3939
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2857"
    },
    "8590": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3934,
        3939
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8591": {
      "fn": "SafeMath.add",
      "offset": [
        2755,
        2851
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8592": {
      "fn": "SafeMath.add",
      "offset": [
        2813,
        2820
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8594": {
      "fn": "SafeMath.add",
      "offset": [
        2839,
        2844
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 99,
      "value": "0x217C"
    },
    "8597": {
      "fn": "SafeMath.add",
      "offset": [
        2843,
        2844
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8598": {
      "fn": "SafeMath.add",
      "offset": [
        2839,
        2840
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8599": {
      "fn": "SafeMath.add",
      "offset": [
        2839,
        2844
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2879"
    },
    "8602": {
      "fn": "SafeMath.add",
      "jump": "i",
      "offset": [
        2839,
        2844
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8603": {
      "fn": "SafeMath.sub",
      "offset": [
        3122,
        3218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8604": {
      "fn": "SafeMath.sub",
      "offset": [
        3180,
        3187
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8606": {
      "fn": "SafeMath.sub",
      "offset": [
        3206,
        3211
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 100,
      "value": "0x217C"
    },
    "8609": {
      "fn": "SafeMath.sub",
      "offset": [
        3210,
        3211
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8610": {
      "fn": "SafeMath.sub",
      "offset": [
        3206,
        3207
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8611": {
      "fn": "SafeMath.sub",
      "offset": [
        3206,
        3211
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2762"
    },
    "8614": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        3206,
        3211
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8615": {
      "op": "JUMPDEST"
    },
    "8616": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8618": {
      "op": "DUP1"
    },
    "8619": {
      "op": "DUP3"
    },
    "8620": {
      "op": "MSTORE"
    },
    "8621": {
      "op": "DUP3"
    },
    "8622": {
      "op": "MLOAD"
    },
    "8623": {
      "op": "DUP3"
    },
    "8624": {
      "op": "DUP3"
    },
    "8625": {
      "op": "ADD"
    },
    "8626": {
      "op": "DUP2"
    },
    "8627": {
      "op": "SWAP1"
    },
    "8628": {
      "op": "MSTORE"
    },
    "8629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8631": {
      "op": "SWAP2"
    },
    "8632": {
      "op": "SWAP1"
    },
    "8633": {
      "op": "DUP5"
    },
    "8634": {
      "op": "DUP3"
    },
    "8635": {
      "op": "ADD"
    },
    "8636": {
      "op": "SWAP1"
    },
    "8637": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8639": {
      "op": "DUP6"
    },
    "8640": {
      "op": "ADD"
    },
    "8641": {
      "op": "SWAP1"
    },
    "8642": {
      "op": "DUP5"
    },
    "8643": {
      "op": "JUMPDEST"
    },
    "8644": {
      "op": "DUP2"
    },
    "8645": {
      "op": "DUP2"
    },
    "8646": {
      "op": "LT"
    },
    "8647": {
      "op": "ISZERO"
    },
    "8648": {
      "op": "PUSH2",
      "value": "0x21DF"
    },
    "8651": {
      "op": "JUMPI"
    },
    "8652": {
      "op": "DUP4"
    },
    "8653": {
      "op": "MLOAD"
    },
    "8654": {
      "op": "DUP4"
    },
    "8655": {
      "op": "MSTORE"
    },
    "8656": {
      "op": "SWAP3"
    },
    "8657": {
      "op": "DUP5"
    },
    "8658": {
      "op": "ADD"
    },
    "8659": {
      "op": "SWAP3"
    },
    "8660": {
      "op": "SWAP2"
    },
    "8661": {
      "op": "DUP5"
    },
    "8662": {
      "op": "ADD"
    },
    "8663": {
      "op": "SWAP2"
    },
    "8664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8666": {
      "op": "ADD"
    },
    "8667": {
      "op": "PUSH2",
      "value": "0x21C3"
    },
    "8670": {
      "op": "JUMP"
    },
    "8671": {
      "op": "JUMPDEST"
    },
    "8672": {
      "op": "POP"
    },
    "8673": {
      "op": "SWAP1"
    },
    "8674": {
      "op": "SWAP7"
    },
    "8675": {
      "op": "SWAP6"
    },
    "8676": {
      "op": "POP"
    },
    "8677": {
      "op": "POP"
    },
    "8678": {
      "op": "POP"
    },
    "8679": {
      "op": "POP"
    },
    "8680": {
      "op": "POP"
    },
    "8681": {
      "op": "POP"
    },
    "8682": {
      "jump": "o",
      "op": "JUMP"
    },
    "8683": {
      "op": "JUMPDEST"
    },
    "8684": {
      "op": "DUP1"
    },
    "8685": {
      "op": "CALLDATALOAD"
    },
    "8686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8692": {
      "op": "SHL"
    },
    "8693": {
      "op": "SUB"
    },
    "8694": {
      "op": "DUP2"
    },
    "8695": {
      "op": "AND"
    },
    "8696": {
      "op": "DUP2"
    },
    "8697": {
      "op": "EQ"
    },
    "8698": {
      "op": "PUSH2",
      "value": "0x2202"
    },
    "8701": {
      "op": "JUMPI"
    },
    "8702": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8704": {
      "op": "DUP1"
    },
    "8705": {
      "op": "REVERT"
    },
    "8706": {
      "op": "JUMPDEST"
    },
    "8707": {
      "op": "SWAP2"
    },
    "8708": {
      "op": "SWAP1"
    },
    "8709": {
      "op": "POP"
    },
    "8710": {
      "jump": "o",
      "op": "JUMP"
    },
    "8711": {
      "op": "JUMPDEST"
    },
    "8712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8716": {
      "op": "DUP3"
    },
    "8717": {
      "op": "DUP5"
    },
    "8718": {
      "op": "SUB"
    },
    "8719": {
      "op": "SLT"
    },
    "8720": {
      "op": "ISZERO"
    },
    "8721": {
      "op": "PUSH2",
      "value": "0x2219"
    },
    "8724": {
      "op": "JUMPI"
    },
    "8725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8727": {
      "op": "DUP1"
    },
    "8728": {
      "op": "REVERT"
    },
    "8729": {
      "op": "JUMPDEST"
    },
    "8730": {
      "op": "PUSH2",
      "value": "0x217C"
    },
    "8733": {
      "op": "DUP3"
    },
    "8734": {
      "op": "PUSH2",
      "value": "0x21EB"
    },
    "8737": {
      "jump": "i",
      "op": "JUMP"
    },
    "8738": {
      "op": "JUMPDEST"
    },
    "8739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8743": {
      "op": "DUP3"
    },
    "8744": {
      "op": "DUP5"
    },
    "8745": {
      "op": "SUB"
    },
    "8746": {
      "op": "SLT"
    },
    "8747": {
      "op": "ISZERO"
    },
    "8748": {
      "op": "PUSH2",
      "value": "0x2234"
    },
    "8751": {
      "op": "JUMPI"
    },
    "8752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8754": {
      "op": "DUP1"
    },
    "8755": {
      "op": "REVERT"
    },
    "8756": {
      "op": "JUMPDEST"
    },
    "8757": {
      "op": "POP"
    },
    "8758": {
      "op": "CALLDATALOAD"
    },
    "8759": {
      "op": "SWAP2"
    },
    "8760": {
      "op": "SWAP1"
    },
    "8761": {
      "op": "POP"
    },
    "8762": {
      "jump": "o",
      "op": "JUMP"
    },
    "8763": {
      "op": "JUMPDEST"
    },
    "8764": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8766": {
      "op": "DUP1"
    },
    "8767": {
      "op": "DUP3"
    },
    "8768": {
      "op": "MSTORE"
    },
    "8769": {
      "op": "DUP3"
    },
    "8770": {
      "op": "MLOAD"
    },
    "8771": {
      "op": "DUP3"
    },
    "8772": {
      "op": "DUP3"
    },
    "8773": {
      "op": "ADD"
    },
    "8774": {
      "op": "DUP2"
    },
    "8775": {
      "op": "SWAP1"
    },
    "8776": {
      "op": "MSTORE"
    },
    "8777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8779": {
      "op": "SWAP2"
    },
    "8780": {
      "op": "SWAP1"
    },
    "8781": {
      "op": "DUP5"
    },
    "8782": {
      "op": "DUP3"
    },
    "8783": {
      "op": "ADD"
    },
    "8784": {
      "op": "SWAP1"
    },
    "8785": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8787": {
      "op": "DUP6"
    },
    "8788": {
      "op": "ADD"
    },
    "8789": {
      "op": "SWAP1"
    },
    "8790": {
      "op": "DUP5"
    },
    "8791": {
      "op": "JUMPDEST"
    },
    "8792": {
      "op": "DUP2"
    },
    "8793": {
      "op": "DUP2"
    },
    "8794": {
      "op": "LT"
    },
    "8795": {
      "op": "ISZERO"
    },
    "8796": {
      "op": "PUSH2",
      "value": "0x21DF"
    },
    "8799": {
      "op": "JUMPI"
    },
    "8800": {
      "op": "DUP4"
    },
    "8801": {
      "op": "MLOAD"
    },
    "8802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8808": {
      "op": "SHL"
    },
    "8809": {
      "op": "SUB"
    },
    "8810": {
      "op": "AND"
    },
    "8811": {
      "op": "DUP4"
    },
    "8812": {
      "op": "MSTORE"
    },
    "8813": {
      "op": "SWAP3"
    },
    "8814": {
      "op": "DUP5"
    },
    "8815": {
      "op": "ADD"
    },
    "8816": {
      "op": "SWAP3"
    },
    "8817": {
      "op": "SWAP2"
    },
    "8818": {
      "op": "DUP5"
    },
    "8819": {
      "op": "ADD"
    },
    "8820": {
      "op": "SWAP2"
    },
    "8821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8823": {
      "op": "ADD"
    },
    "8824": {
      "op": "PUSH2",
      "value": "0x2257"
    },
    "8827": {
      "op": "JUMP"
    },
    "8828": {
      "op": "JUMPDEST"
    },
    "8829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8831": {
      "op": "DUP1"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8834": {
      "op": "DUP4"
    },
    "8835": {
      "op": "DUP6"
    },
    "8836": {
      "op": "SUB"
    },
    "8837": {
      "op": "SLT"
    },
    "8838": {
      "op": "ISZERO"
    },
    "8839": {
      "op": "PUSH2",
      "value": "0x228F"
    },
    "8842": {
      "op": "JUMPI"
    },
    "8843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8845": {
      "op": "DUP1"
    },
    "8846": {
      "op": "REVERT"
    },
    "8847": {
      "op": "JUMPDEST"
    },
    "8848": {
      "op": "POP"
    },
    "8849": {
      "op": "POP"
    },
    "8850": {
      "op": "DUP1"
    },
    "8851": {
      "op": "CALLDATALOAD"
    },
    "8852": {
      "op": "SWAP3"
    },
    "8853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8855": {
      "op": "SWAP1"
    },
    "8856": {
      "op": "SWAP2"
    },
    "8857": {
      "op": "ADD"
    },
    "8858": {
      "op": "CALLDATALOAD"
    },
    "8859": {
      "op": "SWAP2"
    },
    "8860": {
      "op": "POP"
    },
    "8861": {
      "jump": "o",
      "op": "JUMP"
    },
    "8862": {
      "op": "JUMPDEST"
    },
    "8863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8865": {
      "op": "DUP1"
    },
    "8866": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8868": {
      "op": "DUP4"
    },
    "8869": {
      "op": "DUP6"
    },
    "8870": {
      "op": "SUB"
    },
    "8871": {
      "op": "SLT"
    },
    "8872": {
      "op": "ISZERO"
    },
    "8873": {
      "op": "PUSH2",
      "value": "0x22B1"
    },
    "8876": {
      "op": "JUMPI"
    },
    "8877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8879": {
      "op": "DUP1"
    },
    "8880": {
      "op": "REVERT"
    },
    "8881": {
      "op": "JUMPDEST"
    },
    "8882": {
      "op": "PUSH2",
      "value": "0x22BA"
    },
    "8885": {
      "op": "DUP4"
    },
    "8886": {
      "op": "PUSH2",
      "value": "0x21EB"
    },
    "8889": {
      "jump": "i",
      "op": "JUMP"
    },
    "8890": {
      "op": "JUMPDEST"
    },
    "8891": {
      "op": "SWAP5"
    },
    "8892": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8894": {
      "op": "SWAP4"
    },
    "8895": {
      "op": "SWAP1"
    },
    "8896": {
      "op": "SWAP4"
    },
    "8897": {
      "op": "ADD"
    },
    "8898": {
      "op": "CALLDATALOAD"
    },
    "8899": {
      "op": "SWAP4"
    },
    "8900": {
      "op": "POP"
    },
    "8901": {
      "op": "POP"
    },
    "8902": {
      "op": "POP"
    },
    "8903": {
      "jump": "o",
      "op": "JUMP"
    },
    "8904": {
      "op": "JUMPDEST"
    },
    "8905": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8910": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8912": {
      "op": "SHL"
    },
    "8913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8915": {
      "op": "MSTORE"
    },
    "8916": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "8918": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8920": {
      "op": "MSTORE"
    },
    "8921": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8925": {
      "op": "REVERT"
    },
    "8926": {
      "op": "JUMPDEST"
    },
    "8927": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8929": {
      "op": "DUP1"
    },
    "8930": {
      "op": "MLOAD"
    },
    "8931": {
      "op": "SWAP1"
    },
    "8932": {
      "op": "DUP2"
    },
    "8933": {
      "op": "ADD"
    },
    "8934": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8943": {
      "op": "DUP2"
    },
    "8944": {
      "op": "GT"
    },
    "8945": {
      "op": "DUP3"
    },
    "8946": {
      "op": "DUP3"
    },
    "8947": {
      "op": "LT"
    },
    "8948": {
      "op": "OR"
    },
    "8949": {
      "op": "ISZERO"
    },
    "8950": {
      "op": "PUSH2",
      "value": "0x2301"
    },
    "8953": {
      "op": "JUMPI"
    },
    "8954": {
      "op": "PUSH2",
      "value": "0x2301"
    },
    "8957": {
      "op": "PUSH2",
      "value": "0x22C8"
    },
    "8960": {
      "jump": "i",
      "op": "JUMP"
    },
    "8961": {
      "op": "JUMPDEST"
    },
    "8962": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8964": {
      "op": "MSTORE"
    },
    "8965": {
      "op": "SWAP1"
    },
    "8966": {
      "jump": "o",
      "op": "JUMP"
    },
    "8967": {
      "op": "JUMPDEST"
    },
    "8968": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8970": {
      "op": "MLOAD"
    },
    "8971": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8973": {
      "op": "DUP3"
    },
    "8974": {
      "op": "ADD"
    },
    "8975": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8977": {
      "op": "NOT"
    },
    "8978": {
      "op": "AND"
    },
    "8979": {
      "op": "DUP2"
    },
    "8980": {
      "op": "ADD"
    },
    "8981": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8990": {
      "op": "DUP2"
    },
    "8991": {
      "op": "GT"
    },
    "8992": {
      "op": "DUP3"
    },
    "8993": {
      "op": "DUP3"
    },
    "8994": {
      "op": "LT"
    },
    "8995": {
      "op": "OR"
    },
    "8996": {
      "op": "ISZERO"
    },
    "8997": {
      "op": "PUSH2",
      "value": "0x2330"
    },
    "9000": {
      "op": "JUMPI"
    },
    "9001": {
      "op": "PUSH2",
      "value": "0x2330"
    },
    "9004": {
      "op": "PUSH2",
      "value": "0x22C8"
    },
    "9007": {
      "jump": "i",
      "op": "JUMP"
    },
    "9008": {
      "op": "JUMPDEST"
    },
    "9009": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9011": {
      "op": "MSTORE"
    },
    "9012": {
      "op": "SWAP2"
    },
    "9013": {
      "op": "SWAP1"
    },
    "9014": {
      "op": "POP"
    },
    "9015": {
      "jump": "o",
      "op": "JUMP"
    },
    "9016": {
      "op": "JUMPDEST"
    },
    "9017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9019": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9028": {
      "op": "DUP3"
    },
    "9029": {
      "op": "GT"
    },
    "9030": {
      "op": "ISZERO"
    },
    "9031": {
      "op": "PUSH2",
      "value": "0x2352"
    },
    "9034": {
      "op": "JUMPI"
    },
    "9035": {
      "op": "PUSH2",
      "value": "0x2352"
    },
    "9038": {
      "op": "PUSH2",
      "value": "0x22C8"
    },
    "9041": {
      "jump": "i",
      "op": "JUMP"
    },
    "9042": {
      "op": "JUMPDEST"
    },
    "9043": {
      "op": "POP"
    },
    "9044": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9046": {
      "op": "SHL"
    },
    "9047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9049": {
      "op": "ADD"
    },
    "9050": {
      "op": "SWAP1"
    },
    "9051": {
      "jump": "o",
      "op": "JUMP"
    },
    "9052": {
      "op": "JUMPDEST"
    },
    "9053": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9057": {
      "op": "DUP1"
    },
    "9058": {
      "op": "DUP4"
    },
    "9059": {
      "op": "DUP6"
    },
    "9060": {
      "op": "SUB"
    },
    "9061": {
      "op": "SLT"
    },
    "9062": {
      "op": "ISZERO"
    },
    "9063": {
      "op": "PUSH2",
      "value": "0x236F"
    },
    "9066": {
      "op": "JUMPI"
    },
    "9067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9069": {
      "op": "DUP1"
    },
    "9070": {
      "op": "REVERT"
    },
    "9071": {
      "op": "JUMPDEST"
    },
    "9072": {
      "op": "DUP3"
    },
    "9073": {
      "op": "CALLDATALOAD"
    },
    "9074": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9083": {
      "op": "DUP2"
    },
    "9084": {
      "op": "GT"
    },
    "9085": {
      "op": "ISZERO"
    },
    "9086": {
      "op": "PUSH2",
      "value": "0x2386"
    },
    "9089": {
      "op": "JUMPI"
    },
    "9090": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9092": {
      "op": "DUP1"
    },
    "9093": {
      "op": "REVERT"
    },
    "9094": {
      "op": "JUMPDEST"
    },
    "9095": {
      "op": "DUP4"
    },
    "9096": {
      "op": "ADD"
    },
    "9097": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9099": {
      "op": "DUP2"
    },
    "9100": {
      "op": "ADD"
    },
    "9101": {
      "op": "DUP6"
    },
    "9102": {
      "op": "SGT"
    },
    "9103": {
      "op": "PUSH2",
      "value": "0x2397"
    },
    "9106": {
      "op": "JUMPI"
    },
    "9107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9109": {
      "op": "DUP1"
    },
    "9110": {
      "op": "REVERT"
    },
    "9111": {
      "op": "JUMPDEST"
    },
    "9112": {
      "op": "DUP1"
    },
    "9113": {
      "op": "CALLDATALOAD"
    },
    "9114": {
      "op": "PUSH2",
      "value": "0x23AA"
    },
    "9117": {
      "op": "PUSH2",
      "value": "0x23A5"
    },
    "9120": {
      "op": "DUP3"
    },
    "9121": {
      "op": "PUSH2",
      "value": "0x2338"
    },
    "9124": {
      "jump": "i",
      "op": "JUMP"
    },
    "9125": {
      "op": "JUMPDEST"
    },
    "9126": {
      "op": "PUSH2",
      "value": "0x2307"
    },
    "9129": {
      "jump": "i",
      "op": "JUMP"
    },
    "9130": {
      "op": "JUMPDEST"
    },
    "9131": {
      "op": "DUP2"
    },
    "9132": {
      "op": "DUP2"
    },
    "9133": {
      "op": "MSTORE"
    },
    "9134": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9136": {
      "op": "SWAP2"
    },
    "9137": {
      "op": "SWAP1"
    },
    "9138": {
      "op": "SWAP2"
    },
    "9139": {
      "op": "SHL"
    },
    "9140": {
      "op": "DUP3"
    },
    "9141": {
      "op": "ADD"
    },
    "9142": {
      "op": "DUP4"
    },
    "9143": {
      "op": "ADD"
    },
    "9144": {
      "op": "SWAP1"
    },
    "9145": {
      "op": "DUP4"
    },
    "9146": {
      "op": "DUP2"
    },
    "9147": {
      "op": "ADD"
    },
    "9148": {
      "op": "SWAP1"
    },
    "9149": {
      "op": "DUP8"
    },
    "9150": {
      "op": "DUP4"
    },
    "9151": {
      "op": "GT"
    },
    "9152": {
      "op": "ISZERO"
    },
    "9153": {
      "op": "PUSH2",
      "value": "0x23C9"
    },
    "9156": {
      "op": "JUMPI"
    },
    "9157": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9159": {
      "op": "DUP1"
    },
    "9160": {
      "op": "REVERT"
    },
    "9161": {
      "op": "JUMPDEST"
    },
    "9162": {
      "op": "SWAP3"
    },
    "9163": {
      "op": "DUP5"
    },
    "9164": {
      "op": "ADD"
    },
    "9165": {
      "op": "SWAP3"
    },
    "9166": {
      "op": "JUMPDEST"
    },
    "9167": {
      "op": "DUP3"
    },
    "9168": {
      "op": "DUP5"
    },
    "9169": {
      "op": "LT"
    },
    "9170": {
      "op": "ISZERO"
    },
    "9171": {
      "op": "PUSH2",
      "value": "0x23EE"
    },
    "9174": {
      "op": "JUMPI"
    },
    "9175": {
      "op": "PUSH2",
      "value": "0x23DF"
    },
    "9178": {
      "op": "DUP5"
    },
    "9179": {
      "op": "PUSH2",
      "value": "0x21EB"
    },
    "9182": {
      "jump": "i",
      "op": "JUMP"
    },
    "9183": {
      "op": "JUMPDEST"
    },
    "9184": {
      "op": "DUP3"
    },
    "9185": {
      "op": "MSTORE"
    },
    "9186": {
      "op": "SWAP3"
    },
    "9187": {
      "op": "DUP5"
    },
    "9188": {
      "op": "ADD"
    },
    "9189": {
      "op": "SWAP3"
    },
    "9190": {
      "op": "SWAP1"
    },
    "9191": {
      "op": "DUP5"
    },
    "9192": {
      "op": "ADD"
    },
    "9193": {
      "op": "SWAP1"
    },
    "9194": {
      "op": "PUSH2",
      "value": "0x23CE"
    },
    "9197": {
      "op": "JUMP"
    },
    "9198": {
      "op": "JUMPDEST"
    },
    "9199": {
      "op": "SWAP8"
    },
    "9200": {
      "op": "SWAP7"
    },
    "9201": {
      "op": "POP"
    },
    "9202": {
      "op": "POP"
    },
    "9203": {
      "op": "POP"
    },
    "9204": {
      "op": "POP"
    },
    "9205": {
      "op": "POP"
    },
    "9206": {
      "op": "POP"
    },
    "9207": {
      "op": "POP"
    },
    "9208": {
      "jump": "o",
      "op": "JUMP"
    },
    "9209": {
      "op": "JUMPDEST"
    },
    "9210": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9212": {
      "op": "DUP3"
    },
    "9213": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9215": {
      "op": "DUP4"
    },
    "9216": {
      "op": "ADD"
    },
    "9217": {
      "op": "SLT"
    },
    "9218": {
      "op": "PUSH2",
      "value": "0x240A"
    },
    "9221": {
      "op": "JUMPI"
    },
    "9222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9224": {
      "op": "DUP1"
    },
    "9225": {
      "op": "REVERT"
    },
    "9226": {
      "op": "JUMPDEST"
    },
    "9227": {
      "op": "DUP2"
    },
    "9228": {
      "op": "CALLDATALOAD"
    },
    "9229": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9231": {
      "op": "PUSH2",
      "value": "0x241A"
    },
    "9234": {
      "op": "PUSH2",
      "value": "0x23A5"
    },
    "9237": {
      "op": "DUP4"
    },
    "9238": {
      "op": "PUSH2",
      "value": "0x2338"
    },
    "9241": {
      "jump": "i",
      "op": "JUMP"
    },
    "9242": {
      "op": "JUMPDEST"
    },
    "9243": {
      "op": "DUP3"
    },
    "9244": {
      "op": "DUP2"
    },
    "9245": {
      "op": "MSTORE"
    },
    "9246": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "9248": {
      "op": "SWAP3"
    },
    "9249": {
      "op": "SWAP1"
    },
    "9250": {
      "op": "SWAP3"
    },
    "9251": {
      "op": "SHL"
    },
    "9252": {
      "op": "DUP5"
    },
    "9253": {
      "op": "ADD"
    },
    "9254": {
      "op": "DUP2"
    },
    "9255": {
      "op": "ADD"
    },
    "9256": {
      "op": "SWAP2"
    },
    "9257": {
      "op": "DUP2"
    },
    "9258": {
      "op": "DUP2"
    },
    "9259": {
      "op": "ADD"
    },
    "9260": {
      "op": "SWAP1"
    },
    "9261": {
      "op": "DUP7"
    },
    "9262": {
      "op": "DUP5"
    },
    "9263": {
      "op": "GT"
    },
    "9264": {
      "op": "ISZERO"
    },
    "9265": {
      "op": "PUSH2",
      "value": "0x2439"
    },
    "9268": {
      "op": "JUMPI"
    },
    "9269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9271": {
      "op": "DUP1"
    },
    "9272": {
      "op": "REVERT"
    },
    "9273": {
      "op": "JUMPDEST"
    },
    "9274": {
      "op": "DUP3"
    },
    "9275": {
      "op": "DUP7"
    },
    "9276": {
      "op": "ADD"
    },
    "9277": {
      "op": "JUMPDEST"
    },
    "9278": {
      "op": "DUP5"
    },
    "9279": {
      "op": "DUP2"
    },
    "9280": {
      "op": "LT"
    },
    "9281": {
      "op": "ISZERO"
    },
    "9282": {
      "op": "PUSH2",
      "value": "0x2454"
    },
    "9285": {
      "op": "JUMPI"
    },
    "9286": {
      "op": "DUP1"
    },
    "9287": {
      "op": "CALLDATALOAD"
    },
    "9288": {
      "op": "DUP4"
    },
    "9289": {
      "op": "MSTORE"
    },
    "9290": {
      "op": "SWAP2"
    },
    "9291": {
      "op": "DUP4"
    },
    "9292": {
      "op": "ADD"
    },
    "9293": {
      "op": "SWAP2"
    },
    "9294": {
      "op": "DUP4"
    },
    "9295": {
      "op": "ADD"
    },
    "9296": {
      "op": "PUSH2",
      "value": "0x243D"
    },
    "9299": {
      "op": "JUMP"
    },
    "9300": {
      "op": "JUMPDEST"
    },
    "9301": {
      "op": "POP"
    },
    "9302": {
      "op": "SWAP7"
    },
    "9303": {
      "op": "SWAP6"
    },
    "9304": {
      "op": "POP"
    },
    "9305": {
      "op": "POP"
    },
    "9306": {
      "op": "POP"
    },
    "9307": {
      "op": "POP"
    },
    "9308": {
      "op": "POP"
    },
    "9309": {
      "op": "POP"
    },
    "9310": {
      "jump": "o",
      "op": "JUMP"
    },
    "9311": {
      "op": "JUMPDEST"
    },
    "9312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9314": {
      "op": "DUP1"
    },
    "9315": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9317": {
      "op": "DUP4"
    },
    "9318": {
      "op": "DUP6"
    },
    "9319": {
      "op": "SUB"
    },
    "9320": {
      "op": "SLT"
    },
    "9321": {
      "op": "ISZERO"
    },
    "9322": {
      "op": "PUSH2",
      "value": "0x2472"
    },
    "9325": {
      "op": "JUMPI"
    },
    "9326": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9328": {
      "op": "DUP1"
    },
    "9329": {
      "op": "REVERT"
    },
    "9330": {
      "op": "JUMPDEST"
    },
    "9331": {
      "op": "DUP3"
    },
    "9332": {
      "op": "CALLDATALOAD"
    },
    "9333": {
      "op": "SWAP2"
    },
    "9334": {
      "op": "POP"
    },
    "9335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9337": {
      "op": "DUP4"
    },
    "9338": {
      "op": "ADD"
    },
    "9339": {
      "op": "CALLDATALOAD"
    },
    "9340": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9349": {
      "op": "DUP2"
    },
    "9350": {
      "op": "GT"
    },
    "9351": {
      "op": "ISZERO"
    },
    "9352": {
      "op": "PUSH2",
      "value": "0x2490"
    },
    "9355": {
      "op": "JUMPI"
    },
    "9356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9358": {
      "op": "DUP1"
    },
    "9359": {
      "op": "REVERT"
    },
    "9360": {
      "op": "JUMPDEST"
    },
    "9361": {
      "op": "PUSH2",
      "value": "0x249C"
    },
    "9364": {
      "op": "DUP6"
    },
    "9365": {
      "op": "DUP3"
    },
    "9366": {
      "op": "DUP7"
    },
    "9367": {
      "op": "ADD"
    },
    "9368": {
      "op": "PUSH2",
      "value": "0x23F9"
    },
    "9371": {
      "jump": "i",
      "op": "JUMP"
    },
    "9372": {
      "op": "JUMPDEST"
    },
    "9373": {
      "op": "SWAP2"
    },
    "9374": {
      "op": "POP"
    },
    "9375": {
      "op": "POP"
    },
    "9376": {
      "op": "SWAP3"
    },
    "9377": {
      "op": "POP"
    },
    "9378": {
      "op": "SWAP3"
    },
    "9379": {
      "op": "SWAP1"
    },
    "9380": {
      "op": "POP"
    },
    "9381": {
      "jump": "o",
      "op": "JUMP"
    },
    "9382": {
      "op": "JUMPDEST"
    },
    "9383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9385": {
      "op": "DUP1"
    },
    "9386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9388": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9390": {
      "op": "DUP5"
    },
    "9391": {
      "op": "DUP7"
    },
    "9392": {
      "op": "SUB"
    },
    "9393": {
      "op": "SLT"
    },
    "9394": {
      "op": "ISZERO"
    },
    "9395": {
      "op": "PUSH2",
      "value": "0x24BB"
    },
    "9398": {
      "op": "JUMPI"
    },
    "9399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9401": {
      "op": "DUP1"
    },
    "9402": {
      "op": "REVERT"
    },
    "9403": {
      "op": "JUMPDEST"
    },
    "9404": {
      "op": "DUP4"
    },
    "9405": {
      "op": "CALLDATALOAD"
    },
    "9406": {
      "op": "SWAP3"
    },
    "9407": {
      "op": "POP"
    },
    "9408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9410": {
      "op": "DUP5"
    },
    "9411": {
      "op": "ADD"
    },
    "9412": {
      "op": "CALLDATALOAD"
    },
    "9413": {
      "op": "SWAP2"
    },
    "9414": {
      "op": "POP"
    },
    "9415": {
      "op": "PUSH2",
      "value": "0x24D2"
    },
    "9418": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9420": {
      "op": "DUP6"
    },
    "9421": {
      "op": "ADD"
    },
    "9422": {
      "op": "PUSH2",
      "value": "0x21EB"
    },
    "9425": {
      "jump": "i",
      "op": "JUMP"
    },
    "9426": {
      "op": "JUMPDEST"
    },
    "9427": {
      "op": "SWAP1"
    },
    "9428": {
      "op": "POP"
    },
    "9429": {
      "op": "SWAP3"
    },
    "9430": {
      "op": "POP"
    },
    "9431": {
      "op": "SWAP3"
    },
    "9432": {
      "op": "POP"
    },
    "9433": {
      "op": "SWAP3"
    },
    "9434": {
      "jump": "o",
      "op": "JUMP"
    },
    "9435": {
      "op": "JUMPDEST"
    },
    "9436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9440": {
      "op": "DUP1"
    },
    "9441": {
      "op": "DUP4"
    },
    "9442": {
      "op": "DUP6"
    },
    "9443": {
      "op": "SUB"
    },
    "9444": {
      "op": "SLT"
    },
    "9445": {
      "op": "ISZERO"
    },
    "9446": {
      "op": "PUSH2",
      "value": "0x24EE"
    },
    "9449": {
      "op": "JUMPI"
    },
    "9450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9452": {
      "op": "DUP1"
    },
    "9453": {
      "op": "REVERT"
    },
    "9454": {
      "op": "JUMPDEST"
    },
    "9455": {
      "op": "DUP3"
    },
    "9456": {
      "op": "CALLDATALOAD"
    },
    "9457": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9466": {
      "op": "DUP2"
    },
    "9467": {
      "op": "GT"
    },
    "9468": {
      "op": "ISZERO"
    },
    "9469": {
      "op": "PUSH2",
      "value": "0x2505"
    },
    "9472": {
      "op": "JUMPI"
    },
    "9473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9475": {
      "op": "DUP1"
    },
    "9476": {
      "op": "REVERT"
    },
    "9477": {
      "op": "JUMPDEST"
    },
    "9478": {
      "op": "DUP4"
    },
    "9479": {
      "op": "ADD"
    },
    "9480": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9482": {
      "op": "DUP2"
    },
    "9483": {
      "op": "ADD"
    },
    "9484": {
      "op": "DUP6"
    },
    "9485": {
      "op": "SGT"
    },
    "9486": {
      "op": "PUSH2",
      "value": "0x2516"
    },
    "9489": {
      "op": "JUMPI"
    },
    "9490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9492": {
      "op": "DUP1"
    },
    "9493": {
      "op": "REVERT"
    },
    "9494": {
      "op": "JUMPDEST"
    },
    "9495": {
      "op": "DUP1"
    },
    "9496": {
      "op": "CALLDATALOAD"
    },
    "9497": {
      "op": "PUSH2",
      "value": "0x2524"
    },
    "9500": {
      "op": "PUSH2",
      "value": "0x23A5"
    },
    "9503": {
      "op": "DUP3"
    },
    "9504": {
      "op": "PUSH2",
      "value": "0x2338"
    },
    "9507": {
      "jump": "i",
      "op": "JUMP"
    },
    "9508": {
      "op": "JUMPDEST"
    },
    "9509": {
      "op": "DUP2"
    },
    "9510": {
      "op": "DUP2"
    },
    "9511": {
      "op": "MSTORE"
    },
    "9512": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "9514": {
      "op": "SWAP2"
    },
    "9515": {
      "op": "SWAP1"
    },
    "9516": {
      "op": "SWAP2"
    },
    "9517": {
      "op": "SHL"
    },
    "9518": {
      "op": "DUP3"
    },
    "9519": {
      "op": "ADD"
    },
    "9520": {
      "op": "DUP4"
    },
    "9521": {
      "op": "ADD"
    },
    "9522": {
      "op": "SWAP1"
    },
    "9523": {
      "op": "DUP4"
    },
    "9524": {
      "op": "DUP2"
    },
    "9525": {
      "op": "ADD"
    },
    "9526": {
      "op": "SWAP1"
    },
    "9527": {
      "op": "DUP8"
    },
    "9528": {
      "op": "DUP4"
    },
    "9529": {
      "op": "GT"
    },
    "9530": {
      "op": "ISZERO"
    },
    "9531": {
      "op": "PUSH2",
      "value": "0x2543"
    },
    "9534": {
      "op": "JUMPI"
    },
    "9535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9537": {
      "op": "DUP1"
    },
    "9538": {
      "op": "REVERT"
    },
    "9539": {
      "op": "JUMPDEST"
    },
    "9540": {
      "op": "SWAP3"
    },
    "9541": {
      "op": "DUP5"
    },
    "9542": {
      "op": "ADD"
    },
    "9543": {
      "op": "SWAP3"
    },
    "9544": {
      "op": "JUMPDEST"
    },
    "9545": {
      "op": "DUP3"
    },
    "9546": {
      "op": "DUP5"
    },
    "9547": {
      "op": "LT"
    },
    "9548": {
      "op": "ISZERO"
    },
    "9549": {
      "op": "PUSH2",
      "value": "0x23EE"
    },
    "9552": {
      "op": "JUMPI"
    },
    "9553": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9555": {
      "op": "DUP5"
    },
    "9556": {
      "op": "DUP10"
    },
    "9557": {
      "op": "SUB"
    },
    "9558": {
      "op": "SLT"
    },
    "9559": {
      "op": "ISZERO"
    },
    "9560": {
      "op": "PUSH2",
      "value": "0x2561"
    },
    "9563": {
      "op": "JUMPI"
    },
    "9564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9566": {
      "op": "DUP1"
    },
    "9567": {
      "op": "DUP2"
    },
    "9568": {
      "op": "REVERT"
    },
    "9569": {
      "op": "JUMPDEST"
    },
    "9570": {
      "op": "PUSH2",
      "value": "0x2569"
    },
    "9573": {
      "op": "PUSH2",
      "value": "0x22DE"
    },
    "9576": {
      "jump": "i",
      "op": "JUMP"
    },
    "9577": {
      "op": "JUMPDEST"
    },
    "9578": {
      "op": "PUSH2",
      "value": "0x2572"
    },
    "9581": {
      "op": "DUP6"
    },
    "9582": {
      "op": "PUSH2",
      "value": "0x21EB"
    },
    "9585": {
      "jump": "i",
      "op": "JUMP"
    },
    "9586": {
      "op": "JUMPDEST"
    },
    "9587": {
      "op": "DUP2"
    },
    "9588": {
      "op": "MSTORE"
    },
    "9589": {
      "op": "DUP5"
    },
    "9590": {
      "op": "DUP7"
    },
    "9591": {
      "op": "ADD"
    },
    "9592": {
      "op": "CALLDATALOAD"
    },
    "9593": {
      "op": "DUP7"
    },
    "9594": {
      "op": "DUP3"
    },
    "9595": {
      "op": "ADD"
    },
    "9596": {
      "op": "MSTORE"
    },
    "9597": {
      "op": "DUP3"
    },
    "9598": {
      "op": "MSTORE"
    },
    "9599": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9601": {
      "op": "SWAP1"
    },
    "9602": {
      "op": "SWAP4"
    },
    "9603": {
      "op": "ADD"
    },
    "9604": {
      "op": "SWAP3"
    },
    "9605": {
      "op": "SWAP1"
    },
    "9606": {
      "op": "DUP5"
    },
    "9607": {
      "op": "ADD"
    },
    "9608": {
      "op": "SWAP1"
    },
    "9609": {
      "op": "PUSH2",
      "value": "0x2548"
    },
    "9612": {
      "op": "JUMP"
    },
    "9613": {
      "op": "JUMPDEST"
    },
    "9614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9616": {
      "op": "DUP1"
    },
    "9617": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9619": {
      "op": "DUP4"
    },
    "9620": {
      "op": "DUP6"
    },
    "9621": {
      "op": "SUB"
    },
    "9622": {
      "op": "SLT"
    },
    "9623": {
      "op": "ISZERO"
    },
    "9624": {
      "op": "PUSH2",
      "value": "0x25A0"
    },
    "9627": {
      "op": "JUMPI"
    },
    "9628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9630": {
      "op": "DUP1"
    },
    "9631": {
      "op": "REVERT"
    },
    "9632": {
      "op": "JUMPDEST"
    },
    "9633": {
      "op": "DUP3"
    },
    "9634": {
      "op": "CALLDATALOAD"
    },
    "9635": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9644": {
      "op": "DUP1"
    },
    "9645": {
      "op": "DUP3"
    },
    "9646": {
      "op": "GT"
    },
    "9647": {
      "op": "ISZERO"
    },
    "9648": {
      "op": "PUSH2",
      "value": "0x25B8"
    },
    "9651": {
      "op": "JUMPI"
    },
    "9652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9654": {
      "op": "DUP1"
    },
    "9655": {
      "op": "REVERT"
    },
    "9656": {
      "op": "JUMPDEST"
    },
    "9657": {
      "op": "PUSH2",
      "value": "0x25C4"
    },
    "9660": {
      "op": "DUP7"
    },
    "9661": {
      "op": "DUP4"
    },
    "9662": {
      "op": "DUP8"
    },
    "9663": {
      "op": "ADD"
    },
    "9664": {
      "op": "PUSH2",
      "value": "0x23F9"
    },
    "9667": {
      "jump": "i",
      "op": "JUMP"
    },
    "9668": {
      "op": "JUMPDEST"
    },
    "9669": {
      "op": "SWAP4"
    },
    "9670": {
      "op": "POP"
    },
    "9671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9673": {
      "op": "DUP6"
    },
    "9674": {
      "op": "ADD"
    },
    "9675": {
      "op": "CALLDATALOAD"
    },
    "9676": {
      "op": "SWAP2"
    },
    "9677": {
      "op": "POP"
    },
    "9678": {
      "op": "DUP1"
    },
    "9679": {
      "op": "DUP3"
    },
    "9680": {
      "op": "GT"
    },
    "9681": {
      "op": "ISZERO"
    },
    "9682": {
      "op": "PUSH2",
      "value": "0x25DA"
    },
    "9685": {
      "op": "JUMPI"
    },
    "9686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9688": {
      "op": "DUP1"
    },
    "9689": {
      "op": "REVERT"
    },
    "9690": {
      "op": "JUMPDEST"
    },
    "9691": {
      "op": "POP"
    },
    "9692": {
      "op": "PUSH2",
      "value": "0x249C"
    },
    "9695": {
      "op": "DUP6"
    },
    "9696": {
      "op": "DUP3"
    },
    "9697": {
      "op": "DUP7"
    },
    "9698": {
      "op": "ADD"
    },
    "9699": {
      "op": "PUSH2",
      "value": "0x23F9"
    },
    "9702": {
      "jump": "i",
      "op": "JUMP"
    },
    "9703": {
      "op": "JUMPDEST"
    },
    "9704": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9706": {
      "op": "DUP1"
    },
    "9707": {
      "op": "DUP3"
    },
    "9708": {
      "op": "MSTORE"
    },
    "9709": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "9711": {
      "op": "SWAP1"
    },
    "9712": {
      "op": "DUP3"
    },
    "9713": {
      "op": "ADD"
    },
    "9714": {
      "op": "MSTORE"
    },
    "9715": {
      "op": "PUSH32",
      "value": "0x526567697374726174696F6E20726F756E64206973206F766572206F72206E6F"
    },
    "9748": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9750": {
      "op": "DUP3"
    },
    "9751": {
      "op": "ADD"
    },
    "9752": {
      "op": "MSTORE"
    },
    "9753": {
      "op": "PUSH13",
      "value": "0x1D081CDD185C9D1959081E595D"
    },
    "9767": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "9769": {
      "op": "SHL"
    },
    "9770": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9772": {
      "op": "DUP3"
    },
    "9773": {
      "op": "ADD"
    },
    "9774": {
      "op": "MSTORE"
    },
    "9775": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9777": {
      "op": "ADD"
    },
    "9778": {
      "op": "SWAP1"
    },
    "9779": {
      "jump": "o",
      "op": "JUMP"
    },
    "9780": {
      "op": "JUMPDEST"
    },
    "9781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9783": {
      "op": "DUP1"
    },
    "9784": {
      "op": "DUP3"
    },
    "9785": {
      "op": "MSTORE"
    },
    "9786": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "9788": {
      "op": "SWAP1"
    },
    "9789": {
      "op": "DUP3"
    },
    "9790": {
      "op": "ADD"
    },
    "9791": {
      "op": "MSTORE"
    },
    "9792": {
      "op": "PUSH32",
      "value": "0x416C6C6F77732061646D696E2061646472657373206F6E6C7900000000000000"
    },
    "9825": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9827": {
      "op": "DUP3"
    },
    "9828": {
      "op": "ADD"
    },
    "9829": {
      "op": "MSTORE"
    },
    "9830": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9832": {
      "op": "ADD"
    },
    "9833": {
      "op": "SWAP1"
    },
    "9834": {
      "jump": "o",
      "op": "JUMP"
    },
    "9835": {
      "op": "JUMPDEST"
    },
    "9836": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9838": {
      "op": "DUP1"
    },
    "9839": {
      "op": "DUP3"
    },
    "9840": {
      "op": "MSTORE"
    },
    "9841": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "9843": {
      "op": "SWAP1"
    },
    "9844": {
      "op": "DUP3"
    },
    "9845": {
      "op": "ADD"
    },
    "9846": {
      "op": "MSTORE"
    },
    "9847": {
      "op": "PUSH32",
      "value": "0x56657374696E6720706172616D657465727320617265206E6F74207365740000"
    },
    "9880": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9882": {
      "op": "DUP3"
    },
    "9883": {
      "op": "ADD"
    },
    "9884": {
      "op": "MSTORE"
    },
    "9885": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9887": {
      "op": "ADD"
    },
    "9888": {
      "op": "SWAP1"
    },
    "9889": {
      "jump": "o",
      "op": "JUMP"
    },
    "9890": {
      "op": "JUMPDEST"
    },
    "9891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9893": {
      "op": "DUP1"
    },
    "9894": {
      "op": "DUP3"
    },
    "9895": {
      "op": "MSTORE"
    },
    "9896": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "9898": {
      "op": "SWAP1"
    },
    "9899": {
      "op": "DUP3"
    },
    "9900": {
      "op": "ADD"
    },
    "9901": {
      "op": "MSTORE"
    },
    "9902": {
      "op": "PUSH32",
      "value": "0x5468657265206973206E6F7468696E6720746F20776974686472617700000000"
    },
    "9935": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9937": {
      "op": "DUP3"
    },
    "9938": {
      "op": "ADD"
    },
    "9939": {
      "op": "MSTORE"
    },
    "9940": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9942": {
      "op": "ADD"
    },
    "9943": {
      "op": "SWAP1"
    },
    "9944": {
      "jump": "o",
      "op": "JUMP"
    },
    "9945": {
      "op": "JUMPDEST"
    },
    "9946": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9951": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9953": {
      "op": "SHL"
    },
    "9954": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9956": {
      "op": "MSTORE"
    },
    "9957": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9959": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9961": {
      "op": "MSTORE"
    },
    "9962": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9966": {
      "op": "REVERT"
    },
    "9967": {
      "op": "JUMPDEST"
    },
    "9968": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9973": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9975": {
      "op": "SHL"
    },
    "9976": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9978": {
      "op": "MSTORE"
    },
    "9979": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9981": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9983": {
      "op": "MSTORE"
    },
    "9984": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9988": {
      "op": "REVERT"
    },
    "9989": {
      "op": "JUMPDEST"
    },
    "9990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9994": {
      "op": "DUP3"
    },
    "9995": {
      "op": "ADD"
    },
    "9996": {
      "op": "PUSH2",
      "value": "0x2717"
    },
    "9999": {
      "op": "JUMPI"
    },
    "10000": {
      "op": "PUSH2",
      "value": "0x2717"
    },
    "10003": {
      "op": "PUSH2",
      "value": "0x26EF"
    },
    "10006": {
      "jump": "i",
      "op": "JUMP"
    },
    "10007": {
      "op": "JUMPDEST"
    },
    "10008": {
      "op": "POP"
    },
    "10009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10011": {
      "op": "ADD"
    },
    "10012": {
      "op": "SWAP1"
    },
    "10013": {
      "jump": "o",
      "op": "JUMP"
    },
    "10014": {
      "op": "JUMPDEST"
    },
    "10015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10017": {
      "op": "DUP1"
    },
    "10018": {
      "op": "DUP3"
    },
    "10019": {
      "op": "MSTORE"
    },
    "10020": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10022": {
      "op": "SWAP1"
    },
    "10023": {
      "op": "DUP3"
    },
    "10024": {
      "op": "ADD"
    },
    "10025": {
      "op": "MSTORE"
    },
    "10026": {
      "op": "PUSH32",
      "value": "0x5468657265206973206E6F207375636820616D6F756E7420746F207769647468"
    },
    "10059": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10061": {
      "op": "DUP3"
    },
    "10062": {
      "op": "ADD"
    },
    "10063": {
      "op": "MSTORE"
    },
    "10064": {
      "op": "PUSH4",
      "value": "0x64726177"
    },
    "10069": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10071": {
      "op": "SHL"
    },
    "10072": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10074": {
      "op": "DUP3"
    },
    "10075": {
      "op": "ADD"
    },
    "10076": {
      "op": "MSTORE"
    },
    "10077": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10079": {
      "op": "ADD"
    },
    "10080": {
      "op": "SWAP1"
    },
    "10081": {
      "jump": "o",
      "op": "JUMP"
    },
    "10082": {
      "op": "JUMPDEST"
    },
    "10083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10085": {
      "op": "DUP3"
    },
    "10086": {
      "op": "DUP3"
    },
    "10087": {
      "op": "LT"
    },
    "10088": {
      "op": "ISZERO"
    },
    "10089": {
      "op": "PUSH2",
      "value": "0x2774"
    },
    "10092": {
      "op": "JUMPI"
    },
    "10093": {
      "op": "PUSH2",
      "value": "0x2774"
    },
    "10096": {
      "op": "PUSH2",
      "value": "0x26EF"
    },
    "10099": {
      "jump": "i",
      "op": "JUMP"
    },
    "10100": {
      "op": "JUMPDEST"
    },
    "10101": {
      "op": "POP"
    },
    "10102": {
      "op": "SUB"
    },
    "10103": {
      "op": "SWAP1"
    },
    "10104": {
      "jump": "o",
      "op": "JUMP"
    },
    "10105": {
      "op": "JUMPDEST"
    },
    "10106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10108": {
      "op": "DUP1"
    },
    "10109": {
      "op": "DUP3"
    },
    "10110": {
      "op": "MSTORE"
    },
    "10111": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "10113": {
      "op": "SWAP1"
    },
    "10114": {
      "op": "DUP3"
    },
    "10115": {
      "op": "ADD"
    },
    "10116": {
      "op": "MSTORE"
    },
    "10117": {
      "op": "PUSH32",
      "value": "0x416C6C6F777320646973747269627574696F6E206F776E657220616464726573"
    },
    "10150": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10152": {
      "op": "DUP3"
    },
    "10153": {
      "op": "ADD"
    },
    "10154": {
      "op": "MSTORE"
    },
    "10155": {
      "op": "PUSH6",
      "value": "0x73206F6E6C79"
    },
    "10162": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "10164": {
      "op": "SHL"
    },
    "10165": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10167": {
      "op": "DUP3"
    },
    "10168": {
      "op": "ADD"
    },
    "10169": {
      "op": "MSTORE"
    },
    "10170": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10172": {
      "op": "ADD"
    },
    "10173": {
      "op": "SWAP1"
    },
    "10174": {
      "jump": "o",
      "op": "JUMP"
    },
    "10175": {
      "op": "JUMPDEST"
    },
    "10176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10178": {
      "op": "DUP1"
    },
    "10179": {
      "op": "DUP3"
    },
    "10180": {
      "op": "MSTORE"
    },
    "10181": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "10183": {
      "op": "SWAP1"
    },
    "10184": {
      "op": "DUP3"
    },
    "10185": {
      "op": "ADD"
    },
    "10186": {
      "op": "MSTORE"
    },
    "10187": {
      "op": "PUSH32",
      "value": "0x446973747269627574696F6E206973206E6F7420637265617465640000000000"
    },
    "10220": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10222": {
      "op": "DUP3"
    },
    "10223": {
      "op": "ADD"
    },
    "10224": {
      "op": "MSTORE"
    },
    "10225": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10227": {
      "op": "ADD"
    },
    "10228": {
      "op": "SWAP1"
    },
    "10229": {
      "jump": "o",
      "op": "JUMP"
    },
    "10230": {
      "op": "JUMPDEST"
    },
    "10231": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10233": {
      "op": "DUP1"
    },
    "10234": {
      "op": "DUP3"
    },
    "10235": {
      "op": "MSTORE"
    },
    "10236": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10238": {
      "op": "SWAP1"
    },
    "10239": {
      "op": "DUP3"
    },
    "10240": {
      "op": "ADD"
    },
    "10241": {
      "op": "MSTORE"
    },
    "10242": {
      "op": "PUSH32",
      "value": "0x50726F76696465642061646472657373206973206E6F74207265676973746572"
    },
    "10275": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10277": {
      "op": "DUP3"
    },
    "10278": {
      "op": "ADD"
    },
    "10279": {
      "op": "MSTORE"
    },
    "10280": {
      "op": "PUSH2",
      "value": "0x1959"
    },
    "10283": {
      "op": "PUSH1",
      "value": "0xF2"
    },
    "10285": {
      "op": "SHL"
    },
    "10286": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10288": {
      "op": "DUP3"
    },
    "10289": {
      "op": "ADD"
    },
    "10290": {
      "op": "MSTORE"
    },
    "10291": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10293": {
      "op": "ADD"
    },
    "10294": {
      "op": "SWAP1"
    },
    "10295": {
      "jump": "o",
      "op": "JUMP"
    },
    "10296": {
      "op": "JUMPDEST"
    },
    "10297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10299": {
      "op": "DUP2"
    },
    "10300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10302": {
      "op": "NOT"
    },
    "10303": {
      "op": "DIV"
    },
    "10304": {
      "op": "DUP4"
    },
    "10305": {
      "op": "GT"
    },
    "10306": {
      "op": "DUP3"
    },
    "10307": {
      "op": "ISZERO"
    },
    "10308": {
      "op": "ISZERO"
    },
    "10309": {
      "op": "AND"
    },
    "10310": {
      "op": "ISZERO"
    },
    "10311": {
      "op": "PUSH2",
      "value": "0x2852"
    },
    "10314": {
      "op": "JUMPI"
    },
    "10315": {
      "op": "PUSH2",
      "value": "0x2852"
    },
    "10318": {
      "op": "PUSH2",
      "value": "0x26EF"
    },
    "10321": {
      "jump": "i",
      "op": "JUMP"
    },
    "10322": {
      "op": "JUMPDEST"
    },
    "10323": {
      "op": "POP"
    },
    "10324": {
      "op": "MUL"
    },
    "10325": {
      "op": "SWAP1"
    },
    "10326": {
      "jump": "o",
      "op": "JUMP"
    },
    "10327": {
      "op": "JUMPDEST"
    },
    "10328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10330": {
      "op": "DUP3"
    },
    "10331": {
      "op": "PUSH2",
      "value": "0x2874"
    },
    "10334": {
      "op": "JUMPI"
    },
    "10335": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10340": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10342": {
      "op": "SHL"
    },
    "10343": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10345": {
      "op": "MSTORE"
    },
    "10346": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "10348": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10350": {
      "op": "MSTORE"
    },
    "10351": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10353": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10355": {
      "op": "REVERT"
    },
    "10356": {
      "op": "JUMPDEST"
    },
    "10357": {
      "op": "POP"
    },
    "10358": {
      "op": "DIV"
    },
    "10359": {
      "op": "SWAP1"
    },
    "10360": {
      "jump": "o",
      "op": "JUMP"
    },
    "10361": {
      "op": "JUMPDEST"
    },
    "10362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10364": {
      "op": "DUP3"
    },
    "10365": {
      "op": "NOT"
    },
    "10366": {
      "op": "DUP3"
    },
    "10367": {
      "op": "GT"
    },
    "10368": {
      "op": "ISZERO"
    },
    "10369": {
      "op": "PUSH2",
      "value": "0x288C"
    },
    "10372": {
      "op": "JUMPI"
    },
    "10373": {
      "op": "PUSH2",
      "value": "0x288C"
    },
    "10376": {
      "op": "PUSH2",
      "value": "0x26EF"
    },
    "10379": {
      "jump": "i",
      "op": "JUMP"
    },
    "10380": {
      "op": "JUMPDEST"
    },
    "10381": {
      "op": "POP"
    },
    "10382": {
      "op": "ADD"
    },
    "10383": {
      "op": "SWAP1"
    },
    "10384": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "187c2210c4a001438ea31c3c8b21345459b3f524",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\n\ncontract DistributorNative {\n    using SafeMath  for uint256;\n\n    struct Distribution {\n        address     owner;\n\n        bool        isCreated;\n        bool        tokensDeposited;\n\n        uint256     amountOfTokensToDistribute;\n        uint256     totalTokensDistributed;\n    }\n\n    struct Registration {\n        uint256     datetime;\n        uint256     distributionAmount;\n        bool        isRegistered;\n    }\n\n    struct Participation {\n        uint256     datetime;\n        bool        isParticipated;\n    }\n\n    struct RegistrationRound {\n        uint256             startDate;\n        uint256             endDate;\n        bool                isStopped;\n    }\n\n    struct DistributionRound {\n        uint256             startDate;\n        uint256             endDate;\n    }\n\n    struct Allocation {\n        address             user;\n        uint256             amount;\n    }\n\n    mapping (address => Registration)   public registrations;\n    mapping (uint256 => address)        public indexToRegistrations;\n    uint256                             public registrationsCount;\n\n    mapping (address => Participation)  public participations;\n    mapping (address => uint)           public addressToEvent;\n    mapping (address => bool)           public addressToWithdraw;\n\n    uint256             public vestingEndDate;\n    uint256             public vestingPrecision;\n    uint256             public vestingEventsCount;\n    uint256[]           public vestingPortionsUnlockTime;\n    uint256[]           public vestingPercentPerPortion;\n\n    address             public admin;\n\n    Distribution        public distribution;\n    RegistrationRound   public registrationRound;\n    DistributionRound   public distributionRound;\n\n    bool                public leftoverWithdrawn;\n\n    event Participated(address indexed account, uint256 timestamp);\n    event Registered(address indexed account, uint256 timestamp);\n    event MultipleRegistrationCompleted(uint256 timestamp);\n    event DistributionRoundSet(uint256 timestamp);\n    event RegistrationRoundSet(uint256 timestamp);\n    event RegistrationRoundStopped(uint256 timestamp);\n    event TokensWithdrawn(address indexed account, uint256 amount);\n    event VestingParametersSet(uint256 timestamp);\n    event AllocationsSet(uint256 timestamp);\n\n    constructor(address _admin) {\n        admin = _admin;\n    }\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin, 'Allows admin address only');\n        _;\n    }\n\n    modifier onlyDistributionOwner() {\n        require(msg.sender == distribution.owner, 'Allows distribution owner address only');\n        _;\n    }\n\n    modifier onlyIfRegistrationIsNotOver() {\n        require(\n            block.timestamp >= registrationRound.startDate && \n            block.timestamp <= registrationRound.endDate && \n            !registrationRound.isStopped,\n            'Registration round is over or not started yet');\n        _;\n    }\n\n    modifier onlyIfDistributionIsNotOver() {\n        require(\n            block.timestamp >= distributionRound.startDate &&\n            block.timestamp <= distributionRound.endDate,\n            'Distribution round is over or not started yet');\n        _;\n    }\n\n    function register() public onlyIfRegistrationIsNotOver {\n        _registerUser(msg.sender);\n    }\n\n    function registerUser(address _address) public onlyIfRegistrationIsNotOver onlyAdmin {\n        _registerUser(_address);\n    }\n\n    function registerMultipleUsers(address[] memory _addresses) public onlyIfRegistrationIsNotOver onlyAdmin {\n        require(_addresses.length > 0, 'The addresses array must contain one element at least');\n\n        for (uint i = 0; i < _addresses.length; i++) {\n            if (!registrations[_addresses[i]].isRegistered) {\n                _registerUser(_addresses[i]);\n            }\n        }\n\n        emit MultipleRegistrationCompleted(block.timestamp);\n    }\n\n    function participate() public onlyIfDistributionIsNotOver {\n        require(!participations[msg.sender].isParticipated, 'Address already participated');\n        \n        participations[msg.sender] = Participation(block.timestamp, true);\n\n        emit Participated(msg.sender, block.timestamp);\n    }\n\n    function withdraw() public {\n        require(\n            vestingPercentPerPortion.length > 0 &&\n            vestingPortionsUnlockTime.length > 0,\n            'Vesting parameters are not set'\n        );\n        require(registrations[msg.sender].isRegistered, 'Address is not registered');\n        require(participations[msg.sender].isParticipated, 'Address is not participated in distribution');\n        require(!addressToWithdraw[msg.sender], 'Address has executed withdraw already');\n\n        uint256 totalToWithdraw = 0;\n        Registration storage registration = registrations[msg.sender];\n\n        require(registration.distributionAmount > 0, 'There is nothing to withdraw');\n\n        for (uint i = 0; i < vestingPortionsUnlockTime.length; i++) {\n            if (block.timestamp >= vestingPortionsUnlockTime[i]) {\n                 uint256 amountWithdrawing = registration\n                    .distributionAmount\n                    .mul(vestingPercentPerPortion[i])\n                    .div(vestingPrecision);\n\n                totalToWithdraw = totalToWithdraw.add(amountWithdrawing);\n            }\n        }\n\n        require(totalToWithdraw > 0, 'There is nothing to widthdraw');\n        require(totalToWithdraw <= address(this).balance, 'There is no such amount to widthdraw');\n        \n        addressToWithdraw[msg.sender] = true;\n        distribution.totalTokensDistributed = distribution.totalTokensDistributed.add(totalToWithdraw);\n\n        payable(msg.sender).transfer(totalToWithdraw);\n        \n        emit TokensWithdrawn(msg.sender, totalToWithdraw);\n    }\n\n    function withdrawEvent() public {\n        require(vestingEventsCount > 0, 'Vesting parameters are not set');\n        require(!addressToWithdraw[msg.sender], 'Address already widthdrawn');\n\n        uint256 totalToWithdraw = 0;\n        Registration storage registration = registrations[msg.sender];\n\n        require(registration.distributionAmount > 0, 'There is nothing to withdraw');\n        \n        uint addressEvent = addressToEvent[msg.sender];\n        for (uint i = 0; i < addressEvent; i++) {\n            uint256 amountWithdrawing = registration\n                .distributionAmount\n                .mul(vestingPercentPerPortion[i])\n                .div(vestingPrecision);\n\n            registration.distributionAmount = registration.distributionAmount.sub(amountWithdrawing);\n            totalToWithdraw = totalToWithdraw.add(amountWithdrawing);\n        }\n\n        require(totalToWithdraw > 0, 'There is nothing to widthdraw');\n        require(totalToWithdraw <= address(this).balance, 'There is no such amount to widthdraw');\n\n        addressToWithdraw[msg.sender] = true;\n        distribution.totalTokensDistributed = distribution.totalTokensDistributed.add(totalToWithdraw);\n\n        payable(msg.sender).transfer(totalToWithdraw);\n        \n        emit TokensWithdrawn(msg.sender, totalToWithdraw);\n    }\n\n    function setEventVestingParams(\n        uint256 _eventsCount,\n        uint256[] memory _percents\n    ) public onlyAdmin {\n        require(_eventsCount == _percents.length, 'Events could must be equal with Percept Per Portion length');\n        require(distribution.isCreated, 'Distribution is not created');\n\n        vestingEventsCount = _eventsCount;\n\n        uint256 precision = 0;\n        for (uint256 i = 0; i < _eventsCount; i++) {\n            vestingPercentPerPortion.push(_percents[i]);\n            precision = precision.add(_percents[i]);\n        }\n\n        require(vestingPrecision == precision, 'Precision percents issue');\n\n        emit VestingParametersSet(block.timestamp);\n    }\n\n    function setVestingParams(\n        uint256[] memory _unlockingTimes,\n        uint256[] memory _percents\n    ) public onlyAdmin {\n        require(\n            vestingPercentPerPortion.length == 0 &&\n            vestingPortionsUnlockTime.length == 0,\n            'Vesting parameters already set'\n        );\n        require(_unlockingTimes.length == _percents.length, 'Unlocking Times length must be equal with Percent Per Portion length');\n        require(distribution.isCreated, 'Distribution is not created');\n        require(_unlockingTimes[0] > distributionRound.endDate, 'Unlock time must be after the distribution ends');\n\n        uint256 precision = 0;\n        for (uint256 i = 0; i < _unlockingTimes.length; i++) {\n            if (i > 0) {\n                require(_unlockingTimes[i] > _unlockingTimes[i - 1], 'Unlock time must be greater than previous');\n            }\n\n            vestingPortionsUnlockTime.push(_unlockingTimes[i]);\n            vestingPercentPerPortion.push(_percents[i]);\n\n           precision = precision.add(_percents[i]);\n        }\n        \n        require(vestingPrecision == precision, 'Precision percents issue');\n\n        emit VestingParametersSet(block.timestamp);\n    }\n\n    function setMultipleAddressDistributionAmount(Allocation[] memory _allocations) public onlyAdmin {\n        require(_allocations.length > 0, 'The allocation array must contain one element at least');\n\n        for (uint i = 0; i < _allocations.length; i++) {\n            Allocation memory allocation = _allocations[i];\n            require(registrations[allocation.user].isRegistered, 'Provided address is not registered');\n\n            registrations[allocation.user].distributionAmount = allocation.amount;\n        }\n\n        emit AllocationsSet(block.timestamp);\n    }\n\n    function setAddressDistributionAmount(address _address, uint256 _amount) public onlyAdmin {\n        require(registrations[_address].isRegistered, 'Provided address is not registered');\n\n        registrations[_address].distributionAmount = _amount;\n    }\n\n    function setDistributionParameters(\n        uint256 _amountOfTokensToDistribute,\n        uint256 _vestingPrecision,\n        address _owner\n    ) public onlyAdmin {\n        require(!distribution.isCreated, 'Distribution already created');\n\n        distribution.owner = _owner;\n        distribution.amountOfTokensToDistribute = _amountOfTokensToDistribute;\n\n        vestingPrecision = _vestingPrecision;\n\n        distribution.isCreated = true;\n    }\n\n    function setRegistrationRound(uint256 _startDate, uint256 _endDate) public onlyAdmin {\n        require(\n            _startDate >= block.timestamp &&\n            _endDate > _startDate\n        );\n\n        registrationRound.startDate = _startDate;\n        registrationRound.endDate = _endDate;\n\n        emit RegistrationRoundSet(block.timestamp);\n    }\n\n    function setDistributionRound(uint256 _startDate, uint256 _endDate) public onlyAdmin {\n        require(distribution.isCreated, 'Distribution parameters are not set');\n        require(_startDate > registrationRound.endDate, 'Distribution round must be later than registration round');\n\n        distributionRound = DistributionRound({\n            startDate: _startDate,\n            endDate: _endDate\n        });\n\n        emit DistributionRoundSet(block.timestamp);\n    }\n\n    function setVestingEndDate(uint256 _endDate) public onlyAdmin {\n        require(\n            vestingPercentPerPortion.length > 0 &&\n            vestingPortionsUnlockTime.length > 0,\n            'Vesting parameters are not set'\n        );\n        require(\n            _endDate > vestingPortionsUnlockTime[vestingPortionsUnlockTime.length - 1],\n            'The last day of the distribution must be later than the last unlock time'\n        );\n\n        vestingEndDate = _endDate;\n    }\n\n    function getRegisteredUsers() public view returns (address[] memory) {\n        address[] memory addresses = new address[](registrationsCount);\n\n        for (uint i = 0; i < registrationsCount; i++) {\n            address registrationAddress = indexToRegistrations[i];\n            addresses[i] = registrationAddress;\n        }\n\n        return addresses;\n    }\n\n    function getVestingPortions() public view returns (uint256[] memory) {\n        return vestingPercentPerPortion;\n    }\n    function getVestingUnlocks() public view returns (uint256[] memory) {\n        return vestingPortionsUnlockTime;\n    }\n\n    function stopRegistrationRound() public onlyAdmin {\n        registrationRound.isStopped = true;\n\n        emit RegistrationRoundStopped(block.timestamp);\n    }\n\n    function setAddressEvent(address _address, uint _event) public onlyDistributionOwner {\n       addressToEvent[_address] = _event;\n    }\n\n    function depositTokens() public payable onlyDistributionOwner {\n        require(distribution.isCreated, 'Distribution is not created');\n        require(!distribution.tokensDeposited, 'Tokens has been deposited already');\n        require(\n            msg.value == distribution.amountOfTokensToDistribute,\n            'The deposit amount is not equal to the preset amount of distribution tokens');\n\n        distribution.tokensDeposited = true;\n    }\n\n    function withdrawLeftover() public onlyAdmin {\n        require(vestingEndDate > 0, 'Vesting end date is not set');\n        require(block.timestamp >= vestingEndDate, 'Vesting period is not finished yet');\n        require(!leftoverWithdrawn, 'Leftover already withdrawn');\n\n        uint256 leftover = distribution.amountOfTokensToDistribute.sub(distribution.totalTokensDistributed);\n        require(leftover > 0, 'There is nothing to withdraw');\n        \n        leftoverWithdrawn = true;\n        \n        payable(msg.sender).transfer(leftover);\n    }\n\n    function _registerUser(address _address) private {\n        require(!registrations[_address].isRegistered, 'Address already registered');\n        \n        registrations[_address] = Registration(block.timestamp, 0, true);\n        indexToRegistrations[registrationsCount] = _address;\n        registrationsCount++;\n\n        emit Registered(_address, block.timestamp);\n    }\n}\n",
  "sourceMap": "117:13900:2:-:0;;;2418:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2456:5;:14;;-1:-1:-1;;;;;;2456:14:2;-1:-1:-1;;;;;2456:14:2;;;;;;;;;;117:13900;;14:290:3;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:3;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:3:o;:::-;117:13900:2;;;;;;",
  "sourcePath": "contracts/DistributorNative.sol",
  "type": "contract"
}